

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Dec 13 14:59:05 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 05/05/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F25K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  007918                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _digits
    80  007918  3F                 	db	63
    81  007919  06                 	db	6
    82  00791A  5B                 	db	91
    83  00791B  4F                 	db	79
    84  00791C  66                 	db	102
    85  00791D  6D                 	db	109
    86  00791E  7D                 	db	125
    87  00791F  07                 	db	7
    88  007920  7F                 	db	127
    89  007921  67                 	db	103
    90  007922  3E                 	db	62
    91  007923  38                 	db	56
    92                           
    93                           ;initializer for _LDRVAL
    94  007924  0028               	dw	40
    95  0000                     _CCPTMRS0bits	set	3913
    96  0000                     _ANSELA	set	3896
    97  0000                     _ANSELB	set	3897
    98  0000                     _ANSELC	set	3898
    99  0000                     _SSP1STATbits	set	4039
   100  0000                     _SSP1BUF	set	4041
   101  0000                     _SSP1CON2bits	set	4037
   102  0000                     _SSP1ADD	set	4040
   103  0000                     _SSP1CON3	set	4043
   104  0000                     _SSP1CON2	set	4037
   105  0000                     _SSP1CON1	set	4038
   106  0000                     _SSP1STAT	set	4039
   107  0000                     _PORTAbits	set	3968
   108  0000                     _LATCbits	set	3979
   109  0000                     _PORTBbits	set	3969
   110  0000                     _ADCON0bits	set	4034
   111  0000                     _ADCON0	set	4034
   112  0000                     _ADRESH	set	4036
   113  0000                     _ADRESL	set	4035
   114  0000                     _ADCON2	set	4032
   115  0000                     _ADCON1	set	4033
   116  0000                     _CCPR2L	set	3943
   117  0000                     _CCPR2H	set	3944
   118  0000                     _PSTR2CON	set	3939
   119  0000                     _PWM2CON	set	3941
   120  0000                     _ECCP2AS	set	3940
   121  0000                     _CCP2CON	set	3942
   122  0000                     _CCPR1L	set	4030
   123  0000                     _CCPR1H	set	4031
   124  0000                     _PSTR1CON	set	4025
   125  0000                     _PWM1CON	set	4023
   126  0000                     _ECCP1AS	set	4022
   127  0000                     _CCP1CON	set	4029
   128  0000                     _T2CONbits	set	4026
   129  0000                     _T2CON	set	4026
   130  0000                     _PIR1bits	set	3998
   131  0000                     _TMR2	set	4028
   132  0000                     _PR2	set	4027
   133  0000                     _INTCONbits	set	4082
   134  0000                     _INTCON2bits	set	4081
   135  0000                     _WPUB	set	3937
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISA	set	3986
   139  0000                     _LATC	set	3979
   140  0000                     _LATB	set	3978
   141  0000                     _LATA	set	3977
   142  0000                     _OSCTUNE	set	3995
   143  0000                     _OSCCON2	set	4050
   144  0000                     _OSCCON	set	4051
   145                           
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149  007B52                     __pcinit:
   150                           	callstack 0
   151  007B52                     start_initialization:
   152                           	callstack 0
   153  007B52                     __initialization:
   154                           	callstack 0
   155                           
   156                           ; Initialize objects allocated to COMRAM (14 bytes)
   157                           ; load TBLPTR registers with __pidataCOMRAM
   158  007B52  0E18               	movlw	low __pidataCOMRAM
   159  007B54  6EF6               	movwf	tblptrl,c
   160  007B56  0E79               	movlw	high __pidataCOMRAM
   161  007B58  6EF7               	movwf	tblptrh,c
   162  007B5A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   163  007B5C  6EF8               	movwf	tblptru,c
   164  007B5E  EE00  F001         	lfsr	0,__pdataCOMRAM
   165  007B62  EE10 F00E          	lfsr	1,14
   166  007B66                     copy_data0:
   167  007B66  0009               	tblrd		*+
   168  007B68  CFF5 FFEE          	movff	tablat,postinc0
   169  007B6C  50E5               	movf	postdec1,w,c
   170  007B6E  50E1               	movf	fsr1l,w,c
   171  007B70  E1FA               	bnz	copy_data0
   172                           
   173                           ; Clear objects allocated to COMRAM (10 bytes)
   174  007B72  EE00  F00F         	lfsr	0,__pbssCOMRAM
   175  007B76  0E0A               	movlw	10
   176  007B78                     clear_0:
   177  007B78  6AEE               	clrf	postinc0,c
   178  007B7A  06E8               	decf	wreg,f,c
   179  007B7C  E1FD               	bnz	clear_0
   180  007B7E                     end_of_initialization:
   181                           	callstack 0
   182  007B7E                     __end_of__initialization:
   183                           	callstack 0
   184  007B7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   185  007B80  6EF8               	movwf	tblptru,c
   186  007B82  0100               	movlb	0
   187  007B84  EF9C  F03E         	goto	_main	;jump to C main() function
   188                           
   189                           	psect	bssCOMRAM
   190  00000F                     __pbssCOMRAM:
   191                           	callstack 0
   192  00000F                     _positionHolder:
   193                           	callstack 0
   194  00000F                     	ds	2
   195  000011                     _Lit:
   196                           	callstack 0
   197  000011                     	ds	2
   198  000013                     _UnLit:
   199                           	callstack 0
   200  000013                     	ds	2
   201  000015                     _adcResult:
   202                           	callstack 0
   203  000015                     	ds	2
   204  000017                     _ADC_InterruptHandler:
   205                           	callstack 0
   206  000017                     	ds	2
   207                           
   208                           	psect	dataCOMRAM
   209  000001                     __pdataCOMRAM:
   210                           	callstack 0
   211  000001                     _digits:
   212                           	callstack 0
   213  000001                     	ds	12
   214  00000D                     _LDRVAL:
   215                           	callstack 0
   216  00000D                     	ds	2
   217                           
   218                           	psect	cstackCOMRAM
   219  000019                     __pcstackCOMRAM:
   220                           	callstack 0
   221  000019                     ??_diagnostic:
   222  000019                     ??_leftPosition:
   223  000019                     ??_rightPosition:
   224  000019                     ??_IdleI2C:
   225  000019                     ??_StartI2C:
   226  000019                     motor_fwd@spd:
   227                           	callstack 0
   228  000019                     WriteI2C@data:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x0
   232  000019                     	ds	1
   233  00001A                     motor_fwd@STAT:
   234                           	callstack 0
   235  00001A                     I2C_send_data@register_address:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x1
   239  00001A                     	ds	1
   240  00001B                     motor_fwd@dir:
   241                           	callstack 0
   242  00001B                     I2C_send_data@register_data:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x2
   246  00001B                     	ds	1
   247  00001C                     I2C_send_data@device_address:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x3
   251  00001C                     	ds	1
   252  00001D                     ??_I2C:
   253                           
   254                           ; 1 bytes @ 0x4
   255  00001D                     	ds	2
   256  00001F                     ??_main:
   257                           
   258                           ; 1 bytes @ 0x6
   259  00001F                     	ds	2
   260                           
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 66 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   280 ;;      Params:         0       0       0       0       0       0       0
   281 ;;      Locals:         0       0       0       0       0       0       0
   282 ;;      Temps:          2       0       0       0       0       0       0
   283 ;;      Totals:         2       0       0       0       0       0       0
   284 ;;Total ram usage:        2 bytes
   285 ;; Hardware stack levels required when called:    3
   286 ;; This function calls:
   287 ;;		_I2C
   288 ;;		_I2C_Initialise
   289 ;;		_IsBumperL
   290 ;;		_IsBumperR
   291 ;;		_IsOptoL
   292 ;;		_IsOptoR
   293 ;;		_MCP23008_Initialise
   294 ;;		_SYSTEM_Initialize
   295 ;;		_adcFunction
   296 ;;		_diagnostic
   297 ;;		_leftPosition
   298 ;;		_motor_fwd
   299 ;;		_rightPosition
   300 ;; This function is called by:
   301 ;;		Startup code after reset
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text0
   306  007D38                     __ptext0:
   307                           	callstack 0
   308  007D38                     _main:
   309                           	callstack 28
   310  007D38                     
   311                           ;main.c: 69:     SYSTEM_Initialize();
   312  007D38  ECE8  F03C         	call	_SYSTEM_Initialize	;wreg free
   313                           
   314                           ;main.c: 70:     I2C_Initialise();
   315  007D3C  ECC6  F03C         	call	_I2C_Initialise	;wreg free
   316  007D40                     
   317                           ;main.c: 71:     MCP23008_Initialise();
   318  007D40  ECC4  F03D         	call	_MCP23008_Initialise	;wreg free
   319  007D44                     
   320                           ;main.c: 72:     diagnostic();
   321  007D44  EC45  F03E         	call	_diagnostic	;wreg free
   322  007D48                     l1327:
   323                           
   324                           ;main.c: 75:     {;main.c: 77:         motor_fwd('L', 230, 1);
   325  007D48  0EE6               	movlw	230
   326  007D4A  6E19               	movwf	motor_fwd@spd^0,c
   327  007D4C  0E01               	movlw	1
   328  007D4E  6E1A               	movwf	motor_fwd@STAT^0,c
   329  007D50  0E4C               	movlw	76
   330  007D52  EC8E  F03D         	call	_motor_fwd
   331  007D56                     
   332                           ;main.c: 78:         motor_fwd('R', 230, 1);
   333  007D56  0EE6               	movlw	230
   334  007D58  6E19               	movwf	motor_fwd@spd^0,c
   335  007D5A  0E01               	movlw	1
   336  007D5C  6E1A               	movwf	motor_fwd@STAT^0,c
   337  007D5E  0E52               	movlw	82
   338  007D60  EC8E  F03D         	call	_motor_fwd
   339  007D64                     
   340                           ;main.c: 80:         adcFunction();
   341  007D64  ECDC  F03C         	call	_adcFunction	;wreg free
   342  007D68                     
   343                           ;main.c: 83:         if (adcResult > LDRVAL)
   344  007D68  BE16               	btfsc	(_adcResult+1)^0,7,c
   345  007D6A  EFC0  F03E         	goto	u391
   346  007D6E  5016               	movf	(_adcResult+1)^0,w,c
   347  007D70  E109               	bnz	u390
   348  007D72  0E29               	movlw	41
   349  007D74  5C15               	subwf	_adcResult^0,w,c
   350  007D76  A0D8               	btfss	status,0,c
   351  007D78  EFC0  F03E         	goto	u391
   352  007D7C  EFC2  F03E         	goto	u390
   353  007D80                     u391:
   354  007D80  EF3F  F03F         	goto	l254
   355  007D84                     u390:
   356  007D84                     
   357                           ;main.c: 84:         {;main.c: 85:             if (IsOptoR())
   358  007D84  ECB1  F03C         	call	_IsOptoR	;wreg free
   359  007D88  0900               	iorlw	0
   360  007D8A  B4D8               	btfsc	status,2,c
   361  007D8C  EFCA  F03E         	goto	u401
   362  007D90  EFCC  F03E         	goto	u400
   363  007D94                     u401:
   364  007D94  EFDC  F03E         	goto	l1341
   365  007D98                     u400:
   366  007D98                     
   367                           ;main.c: 86:             {;main.c: 87:                 motor_fwd('L', 250, 1);
   368  007D98  0EFA               	movlw	250
   369  007D9A  6E19               	movwf	motor_fwd@spd^0,c
   370  007D9C  0E01               	movlw	1
   371  007D9E  6E1A               	movwf	motor_fwd@STAT^0,c
   372  007DA0  0E4C               	movlw	76
   373  007DA2  EC8E  F03D         	call	_motor_fwd
   374                           
   375                           ;main.c: 88:                 motor_fwd('R', 105, 1);
   376  007DA6  0E69               	movlw	105
   377  007DA8  6E19               	movwf	motor_fwd@spd^0,c
   378  007DAA  0E01               	movlw	1
   379  007DAC  6E1A               	movwf	motor_fwd@STAT^0,c
   380  007DAE  0E52               	movlw	82
   381  007DB0  EC8E  F03D         	call	_motor_fwd
   382                           
   383                           ;main.c: 89:                 continue;
   384  007DB4  EFA4  F03E         	goto	l1327
   385  007DB8                     l1341:
   386  007DB8  ECA7  F03C         	call	_IsOptoL	;wreg free
   387  007DBC  0900               	iorlw	0
   388  007DBE  B4D8               	btfsc	status,2,c
   389  007DC0  EFE4  F03E         	goto	u411
   390  007DC4  EFE6  F03E         	goto	u410
   391  007DC8                     u411:
   392  007DC8  EFF6  F03E         	goto	l258
   393  007DCC                     u410:
   394  007DCC                     
   395                           ;main.c: 92:             {;main.c: 93:                 motor_fwd('L', 105, 1);
   396  007DCC  0E69               	movlw	105
   397  007DCE  6E19               	movwf	motor_fwd@spd^0,c
   398  007DD0  0E01               	movlw	1
   399  007DD2  6E1A               	movwf	motor_fwd@STAT^0,c
   400  007DD4  0E4C               	movlw	76
   401  007DD6  EC8E  F03D         	call	_motor_fwd
   402                           
   403                           ;main.c: 94:                 motor_fwd('R', 250, 1);
   404  007DDA  0EFA               	movlw	250
   405  007DDC  6E19               	movwf	motor_fwd@spd^0,c
   406  007DDE  0E01               	movlw	1
   407  007DE0  6E1A               	movwf	motor_fwd@STAT^0,c
   408  007DE2  0E52               	movlw	82
   409  007DE4  EC8E  F03D         	call	_motor_fwd
   410                           
   411                           ;main.c: 95:                 continue;
   412  007DE8  EFA4  F03E         	goto	l1327
   413  007DEC                     l258:
   414  007DEC  B081               	btfsc	129,0,c	;volatile
   415  007DEE  EFFB  F03E         	goto	u421
   416  007DF2  EFFD  F03E         	goto	u420
   417  007DF6                     u421:
   418  007DF6  EF24  F03F         	goto	l1355
   419  007DFA                     u420:
   420  007DFA  8A8B               	bsf	139,5,c	;volatile
   421  007DFC  8C8B               	bsf	139,6,c	;volatile
   422  007DFE                     
   423                           ;main.c: 102:                 _delay((unsigned long)((450)*(4000000/4000.0)));
   424  007DFE  0E03               	movlw	3
   425  007E00  6E20               	movwf	(??_main+1)^0,c
   426  007E02  0E49               	movlw	73
   427  007E04  6E1F               	movwf	??_main^0,c
   428  007E06  0E66               	movlw	102
   429  007E08                     u507:
   430  007E08  2EE8               	decfsz	wreg,f,c
   431  007E0A  D7FE               	bra	u507
   432  007E0C  2E1F               	decfsz	??_main^0,f,c
   433  007E0E  D7FC               	bra	u507
   434  007E10  2E20               	decfsz	(??_main+1)^0,f,c
   435  007E12  D7FA               	bra	u507
   436  007E14  D000               	nop2	
   437  007E16                     
   438                           ;main.c: 103:                 motor_fwd('L', 250, 0);
   439  007E16  0EFA               	movlw	250
   440  007E18  6E19               	movwf	motor_fwd@spd^0,c
   441  007E1A  0E00               	movlw	0
   442  007E1C  6E1A               	movwf	motor_fwd@STAT^0,c
   443  007E1E  0E4C               	movlw	76
   444  007E20  EC8E  F03D         	call	_motor_fwd
   445  007E24                     
   446                           ;main.c: 104:                 motor_fwd('R', 250, 0);
   447  007E24  0EFA               	movlw	250
   448  007E26  6E19               	movwf	motor_fwd@spd^0,c
   449  007E28  0E00               	movlw	0
   450  007E2A  6E1A               	movwf	motor_fwd@STAT^0,c
   451  007E2C  0E52               	movlw	82
   452  007E2E  EC8E  F03D         	call	_motor_fwd
   453  007E32                     l265:
   454                           
   455                           ;main.c: 106:                 {;main.c: 107:                     _delay((unsigned long)(
      +                          (100)*(4000000/4000.0)));
   456  007E32  0E82               	movlw	130
   457  007E34  6E1F               	movwf	??_main^0,c
   458  007E36  0EDE               	movlw	222
   459  007E38                     u517:
   460  007E38  2EE8               	decfsz	wreg,f,c
   461  007E3A  D7FE               	bra	u517
   462  007E3C  2E1F               	decfsz	??_main^0,f,c
   463  007E3E  D7FC               	bra	u517
   464  007E40                     
   465                           ;main.c: 108:                     I2C();
   466  007E40  ECF0  F03D         	call	_I2C	;wreg free
   467  007E44  EF19  F03F         	goto	l265
   468  007E48                     l1355:
   469                           
   470                           ;main.c: 112:             leftPosition();
   471  007E48  EC15  F03D         	call	_leftPosition	;wreg free
   472  007E4C                     
   473                           ;main.c: 116:             if (IsBumperR())
   474  007E4C  EC9D  F03C         	call	_IsBumperR	;wreg free
   475  007E50  0900               	iorlw	0
   476  007E52  B4D8               	btfsc	status,2,c
   477  007E54  EF2E  F03F         	goto	u431
   478  007E58  EF30  F03F         	goto	u430
   479  007E5C                     u431:
   480  007E5C  EF3F  F03F         	goto	l254
   481  007E60                     u430:
   482  007E60  8A8B               	bsf	139,5,c	;volatile
   483  007E62                     
   484                           ;main.c: 120:                 UnLit++;
   485  007E62  4A13               	infsnz	_UnLit^0,f,c
   486  007E64  2A14               	incf	(_UnLit+1)^0,f,c
   487  007E66                     
   488                           ;main.c: 121:                 _delay((unsigned long)((500)*(4000000/4000.0)));
   489  007E66  0E03               	movlw	3
   490  007E68  6E20               	movwf	(??_main+1)^0,c
   491  007E6A  0E8A               	movlw	138
   492  007E6C  6E1F               	movwf	??_main^0,c
   493  007E6E  0E56               	movlw	86
   494  007E70                     u527:
   495  007E70  2EE8               	decfsz	wreg,f,c
   496  007E72  D7FE               	bra	u527
   497  007E74  2E1F               	decfsz	??_main^0,f,c
   498  007E76  D7FC               	bra	u527
   499  007E78  2E20               	decfsz	(??_main+1)^0,f,c
   500  007E7A  D7FA               	bra	u527
   501  007E7C  9A8B               	bcf	139,5,c	;volatile
   502  007E7E                     l254:
   503                           
   504                           ;main.c: 129:         if (adcResult < LDRVAL)
   505  007E7E  BE16               	btfsc	(_adcResult+1)^0,7,c
   506  007E80  EF4D  F03F         	goto	u440
   507  007E84  5016               	movf	(_adcResult+1)^0,w,c
   508  007E86  E107               	bnz	u441
   509  007E88  0E28               	movlw	40
   510  007E8A  5C15               	subwf	_adcResult^0,w,c
   511  007E8C  B0D8               	btfsc	status,0,c
   512  007E8E  EF4B  F03F         	goto	u441
   513  007E92  EF4D  F03F         	goto	u440
   514  007E96                     u441:
   515  007E96  EFA4  F03E         	goto	l1327
   516  007E9A                     u440:
   517  007E9A                     
   518                           ;main.c: 130:         {;main.c: 131:             motor_fwd('L', 230, 1);
   519  007E9A  0EE6               	movlw	230
   520  007E9C  6E19               	movwf	motor_fwd@spd^0,c
   521  007E9E  0E01               	movlw	1
   522  007EA0  6E1A               	movwf	motor_fwd@STAT^0,c
   523  007EA2  0E4C               	movlw	76
   524  007EA4  EC8E  F03D         	call	_motor_fwd
   525                           
   526                           ;main.c: 132:             motor_fwd('R', 230, 1);
   527  007EA8  0EE6               	movlw	230
   528  007EAA  6E19               	movwf	motor_fwd@spd^0,c
   529  007EAC  0E01               	movlw	1
   530  007EAE  6E1A               	movwf	motor_fwd@STAT^0,c
   531  007EB0  0E52               	movlw	82
   532  007EB2  EC8E  F03D         	call	_motor_fwd
   533  007EB6                     
   534                           ;main.c: 134:             adcFunction();
   535  007EB6  ECDC  F03C         	call	_adcFunction	;wreg free
   536  007EBA                     
   537                           ;main.c: 135:             positionHolder = 1;
   538  007EBA  0E00               	movlw	0
   539  007EBC  6E10               	movwf	(_positionHolder+1)^0,c
   540  007EBE  0E01               	movlw	1
   541  007EC0  6E0F               	movwf	_positionHolder^0,c
   542                           
   543                           ;main.c: 137:             while (positionHolder == 1)
   544  007EC2  EFF3  F03F         	goto	l1405
   545  007EC6                     l1371:
   546                           
   547                           ;main.c: 138:             {;main.c: 139:                 motor_fwd('L', 230, 1);
   548  007EC6  0EE6               	movlw	230
   549  007EC8  6E19               	movwf	motor_fwd@spd^0,c
   550  007ECA  0E01               	movlw	1
   551  007ECC  6E1A               	movwf	motor_fwd@STAT^0,c
   552  007ECE  0E4C               	movlw	76
   553  007ED0  EC8E  F03D         	call	_motor_fwd
   554                           
   555                           ;main.c: 140:                 motor_fwd('R', 230, 1);
   556  007ED4  0EE6               	movlw	230
   557  007ED6  6E19               	movwf	motor_fwd@spd^0,c
   558  007ED8  0E01               	movlw	1
   559  007EDA  6E1A               	movwf	motor_fwd@STAT^0,c
   560  007EDC  0E52               	movlw	82
   561  007EDE  EC8E  F03D         	call	_motor_fwd
   562  007EE2                     
   563                           ;main.c: 142:                 if (IsOptoR())
   564  007EE2  ECB1  F03C         	call	_IsOptoR	;wreg free
   565  007EE6  0900               	iorlw	0
   566  007EE8  B4D8               	btfsc	status,2,c
   567  007EEA  EF79  F03F         	goto	u451
   568  007EEE  EF7B  F03F         	goto	u450
   569  007EF2                     u451:
   570  007EF2  EF8B  F03F         	goto	l1379
   571  007EF6                     u450:
   572  007EF6                     
   573                           ;main.c: 143:                 {;main.c: 144:                     motor_fwd('L', 245, 1);
   574  007EF6  0EF5               	movlw	245
   575  007EF8  6E19               	movwf	motor_fwd@spd^0,c
   576  007EFA  0E01               	movlw	1
   577  007EFC  6E1A               	movwf	motor_fwd@STAT^0,c
   578  007EFE  0E4C               	movlw	76
   579  007F00  EC8E  F03D         	call	_motor_fwd
   580                           
   581                           ;main.c: 145:                     motor_fwd('R', 105, 1);
   582  007F04  0E69               	movlw	105
   583  007F06  6E19               	movwf	motor_fwd@spd^0,c
   584  007F08  0E01               	movlw	1
   585  007F0A  6E1A               	movwf	motor_fwd@STAT^0,c
   586  007F0C  0E52               	movlw	82
   587  007F0E  EC8E  F03D         	call	_motor_fwd
   588                           
   589                           ;main.c: 146:                     continue;
   590  007F12  EFF3  F03F         	goto	l1405
   591  007F16                     l1379:
   592  007F16  ECA7  F03C         	call	_IsOptoL	;wreg free
   593  007F1A  0900               	iorlw	0
   594  007F1C  B4D8               	btfsc	status,2,c
   595  007F1E  EF93  F03F         	goto	u461
   596  007F22  EF95  F03F         	goto	u460
   597  007F26                     u461:
   598  007F26  EFA5  F03F         	goto	l278
   599  007F2A                     u460:
   600  007F2A                     
   601                           ;main.c: 150:                 {;main.c: 151:                     motor_fwd('L', 105, 1);
   602  007F2A  0E69               	movlw	105
   603  007F2C  6E19               	movwf	motor_fwd@spd^0,c
   604  007F2E  0E01               	movlw	1
   605  007F30  6E1A               	movwf	motor_fwd@STAT^0,c
   606  007F32  0E4C               	movlw	76
   607  007F34  EC8E  F03D         	call	_motor_fwd
   608                           
   609                           ;main.c: 152:                     motor_fwd('R', 245, 1);
   610  007F38  0EF5               	movlw	245
   611  007F3A  6E19               	movwf	motor_fwd@spd^0,c
   612  007F3C  0E01               	movlw	1
   613  007F3E  6E1A               	movwf	motor_fwd@STAT^0,c
   614  007F40  0E52               	movlw	82
   615  007F42  EC8E  F03D         	call	_motor_fwd
   616                           
   617                           ;main.c: 153:                     continue;
   618  007F46  EFF3  F03F         	goto	l1405
   619  007F4A                     l278:
   620  007F4A  B081               	btfsc	129,0,c	;volatile
   621  007F4C  EFAA  F03F         	goto	u471
   622  007F50  EFAC  F03F         	goto	u470
   623  007F54                     u471:
   624  007F54  EFD3  F03F         	goto	l1393
   625  007F58                     u470:
   626  007F58  8A8B               	bsf	139,5,c	;volatile
   627  007F5A  8C8B               	bsf	139,6,c	;volatile
   628  007F5C                     
   629                           ;main.c: 160:                     _delay((unsigned long)((450)*(4000000/4000.0)));
   630  007F5C  0E03               	movlw	3
   631  007F5E  6E20               	movwf	(??_main+1)^0,c
   632  007F60  0E49               	movlw	73
   633  007F62  6E1F               	movwf	??_main^0,c
   634  007F64  0E66               	movlw	102
   635  007F66                     u537:
   636  007F66  2EE8               	decfsz	wreg,f,c
   637  007F68  D7FE               	bra	u537
   638  007F6A  2E1F               	decfsz	??_main^0,f,c
   639  007F6C  D7FC               	bra	u537
   640  007F6E  2E20               	decfsz	(??_main+1)^0,f,c
   641  007F70  D7FA               	bra	u537
   642  007F72  D000               	nop2	
   643  007F74                     
   644                           ;main.c: 161:                     motor_fwd('L', 255, 0);
   645  007F74  0EFF               	movlw	255
   646  007F76  6E19               	movwf	motor_fwd@spd^0,c
   647  007F78  0E00               	movlw	0
   648  007F7A  6E1A               	movwf	motor_fwd@STAT^0,c
   649  007F7C  0E4C               	movlw	76
   650  007F7E  EC8E  F03D         	call	_motor_fwd
   651  007F82                     
   652                           ;main.c: 162:                     motor_fwd('R', 255, 0);
   653  007F82  0EFF               	movlw	255
   654  007F84  6E19               	movwf	motor_fwd@spd^0,c
   655  007F86  0E00               	movlw	0
   656  007F88  6E1A               	movwf	motor_fwd@STAT^0,c
   657  007F8A  0E52               	movlw	82
   658  007F8C  EC8E  F03D         	call	_motor_fwd
   659  007F90                     l285:
   660                           
   661                           ;main.c: 165:                     {;main.c: 166:                         _delay((unsigne
      +                          d long)((100)*(4000000/4000.0)));
   662  007F90  0E82               	movlw	130
   663  007F92  6E1F               	movwf	??_main^0,c
   664  007F94  0EDE               	movlw	222
   665  007F96                     u547:
   666  007F96  2EE8               	decfsz	wreg,f,c
   667  007F98  D7FE               	bra	u547
   668  007F9A  2E1F               	decfsz	??_main^0,f,c
   669  007F9C  D7FC               	bra	u547
   670  007F9E                     
   671                           ;main.c: 167:                         I2C();
   672  007F9E  ECF0  F03D         	call	_I2C	;wreg free
   673  007FA2  EFC8  F03F         	goto	l285
   674  007FA6                     l1393:
   675                           
   676                           ;main.c: 172:                 rightPosition();
   677  007FA6  EC27  F03D         	call	_rightPosition	;wreg free
   678  007FAA                     
   679                           ;main.c: 174:                 if (IsBumperL())
   680  007FAA  EC93  F03C         	call	_IsBumperL	;wreg free
   681  007FAE  0900               	iorlw	0
   682  007FB0  B4D8               	btfsc	status,2,c
   683  007FB2  EFDD  F03F         	goto	u481
   684  007FB6  EFDF  F03F         	goto	u480
   685  007FBA                     u481:
   686  007FBA  EFF3  F03F         	goto	l1405
   687  007FBE                     u480:
   688  007FBE  8C8B               	bsf	139,6,c	;volatile
   689  007FC0                     
   690                           ;main.c: 178:                     Lit++;
   691  007FC0  4A11               	infsnz	_Lit^0,f,c
   692  007FC2  2A12               	incf	(_Lit+1)^0,f,c
   693  007FC4                     
   694                           ;main.c: 179:                     _delay((unsigned long)((320)*(4000000/4000.0)));
   695  007FC4  0E02               	movlw	2
   696  007FC6  6E20               	movwf	(??_main+1)^0,c
   697  007FC8  0EA0               	movlw	160
   698  007FCA  6E1F               	movwf	??_main^0,c
   699  007FCC  0E92               	movlw	146
   700  007FCE                     u557:
   701  007FCE  2EE8               	decfsz	wreg,f,c
   702  007FD0  D7FE               	bra	u557
   703  007FD2  2E1F               	decfsz	??_main^0,f,c
   704  007FD4  D7FC               	bra	u557
   705  007FD6  2E20               	decfsz	(??_main+1)^0,f,c
   706  007FD8  D7FA               	bra	u557
   707  007FDA  D000               	nop2	
   708  007FDC  9C8B               	bcf	139,6,c	;volatile
   709  007FDE                     
   710                           ;main.c: 181:                     positionHolder = 0;
   711  007FDE  0E00               	movlw	0
   712  007FE0  6E10               	movwf	(_positionHolder+1)^0,c
   713  007FE2  0E00               	movlw	0
   714  007FE4  6E0F               	movwf	_positionHolder^0,c
   715  007FE6                     l1405:
   716                           
   717                           ;main.c: 137:             while (positionHolder == 1)
   718  007FE6  040F               	decf	_positionHolder^0,w,c
   719  007FE8  1010               	iorwf	(_positionHolder+1)^0,w,c
   720  007FEA  B4D8               	btfsc	status,2,c
   721  007FEC  EFFA  F03F         	goto	u491
   722  007FF0  EFFC  F03F         	goto	u490
   723  007FF4                     u491:
   724  007FF4  EF63  F03F         	goto	l1371
   725  007FF8                     u490:
   726  007FF8  EFA4  F03E         	goto	l1327
   727  007FFC  EF00  F000         	goto	start
   728  008000                     __end_of_main:
   729                           	callstack 0
   730                           
   731 ;; *************** function _rightPosition *****************
   732 ;; Defined at:
   733 ;;		line 301 in file "main.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   747 ;;      Params:         0       0       0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0
   749 ;;      Temps:          1       0       0       0       0       0       0
   750 ;;      Totals:         1       0       0       0       0       0       0
   751 ;;Total ram usage:        1 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text1
   761  007A4E                     __ptext1:
   762                           	callstack 0
   763  007A4E                     _rightPosition:
   764                           	callstack 30
   765  007A4E                     
   766                           ;main.c: 306:     PORTBbits.RB3 = 1;
   767  007A4E  8681               	bsf	129,3,c	;volatile
   768  007A50                     
   769                           ;main.c: 307:     _delay((unsigned long)((2000)*(4000000/4000000.0)));
   770  007A50  0E03               	movlw	3
   771  007A52  6E19               	movwf	??_rightPosition^0,c
   772  007A54  0E98               	movlw	152
   773  007A56                     u567:
   774  007A56  2EE8               	decfsz	wreg,f,c
   775  007A58  D7FE               	bra	u567
   776  007A5A  2E19               	decfsz	??_rightPosition^0,f,c
   777  007A5C  D7FC               	bra	u567
   778  007A5E                     
   779                           ;main.c: 308:     PORTBbits.RB3 = 0;
   780  007A5E  9681               	bcf	129,3,c	;volatile
   781                           
   782                           ;main.c: 309:     _delay((unsigned long)((19250)*(4000000/4000000.0)));
   783  007A60  0E19               	movlw	25
   784  007A62  6E19               	movwf	??_rightPosition^0,c
   785  007A64  0EFF               	movlw	255
   786  007A66                     u577:
   787  007A66  2EE8               	decfsz	wreg,f,c
   788  007A68  D7FE               	bra	u577
   789  007A6A  2E19               	decfsz	??_rightPosition^0,f,c
   790  007A6C  D7FC               	bra	u577
   791  007A6E  F000               	nop	
   792  007A70  0012               	return		;funcret
   793  007A72                     __end_of_rightPosition:
   794                           	callstack 0
   795                           
   796 ;; *************** function _motor_fwd *****************
   797 ;; Defined at:
   798 ;;		line 200 in file "main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  dir             1    wreg     unsigned char 
   801 ;;  spd             1    0[COMRAM] unsigned char 
   802 ;;  STAT            1    1[COMRAM] _Bool 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  dir             1    2[COMRAM] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   814 ;;      Params:         2       0       0       0       0       0       0
   815 ;;      Locals:         1       0       0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0
   817 ;;      Totals:         3       0       0       0       0       0       0
   818 ;;Total ram usage:        3 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text2
   828  007B1C                     __ptext2:
   829                           	callstack 0
   830  007B1C                     _motor_fwd:
   831                           	callstack 30
   832                           
   833                           ;incstack = 0
   834                           ;motor_fwd@dir stored from wreg
   835  007B1C  6E1B               	movwf	motor_fwd@dir^0,c
   836  007B1E                     
   837                           ;main.c: 200: void motor_fwd(unsigned char dir, unsigned char spd, _Bool STAT);main.c: 2
      +                          01: {;main.c: 202:     if (dir == 'L')
   838  007B1E  0E4C               	movlw	76
   839  007B20  181B               	xorwf	motor_fwd@dir^0,w,c
   840  007B22  A4D8               	btfss	status,2,c
   841  007B24  EF96  F03D         	goto	u361
   842  007B28  EF98  F03D         	goto	u360
   843  007B2C                     u361:
   844  007B2C  EFA1  F03D         	goto	l309
   845  007B30                     u360:
   846  007B30                     
   847                           ;main.c: 203:     {;main.c: 204:         CCPR2L = spd;
   848  007B30  C019  FF67         	movff	motor_fwd@spd,3943	;volatile
   849                           
   850                           ;main.c: 205:         PORTAbits.RA5 = STAT;
   851  007B34  B01A               	btfsc	motor_fwd@STAT^0,0,c
   852  007B36  D002               	bra	u375
   853  007B38  9A80               	bcf	128,5,c	;volatile
   854  007B3A  D001               	bra	u376
   855  007B3C                     u375:
   856  007B3C  8A80               	bsf	128,5,c	;volatile
   857  007B3E                     u376:
   858                           
   859                           ;main.c: 206:     }
   860  007B3E  EFA8  F03D         	goto	l311
   861  007B42                     l309:
   862                           
   863                           ;main.c: 208:     {;main.c: 210:         CCPR1L = spd;
   864  007B42  C019  FFBE         	movff	motor_fwd@spd,4030	;volatile
   865                           
   866                           ;main.c: 211:         PORTAbits.RA2 = STAT;
   867  007B46  B01A               	btfsc	motor_fwd@STAT^0,0,c
   868  007B48  D002               	bra	u385
   869  007B4A  9480               	bcf	128,2,c	;volatile
   870  007B4C  D001               	bra	u386
   871  007B4E                     u385:
   872  007B4E  8480               	bsf	128,2,c	;volatile
   873  007B50                     u386:
   874  007B50                     l311:
   875  007B50  0012               	return		;funcret
   876  007B52                     __end_of_motor_fwd:
   877                           	callstack 0
   878                           
   879 ;; *************** function _leftPosition *****************
   880 ;; Defined at:
   881 ;;		line 316 in file "main.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   895 ;;      Params:         0       0       0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0
   897 ;;      Temps:          1       0       0       0       0       0       0
   898 ;;      Totals:         1       0       0       0       0       0       0
   899 ;;Total ram usage:        1 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text3
   909  007A2A                     __ptext3:
   910                           	callstack 0
   911  007A2A                     _leftPosition:
   912                           	callstack 30
   913  007A2A                     
   914                           ;main.c: 320:     {;main.c: 322:         PORTBbits.RB3 = 1;
   915  007A2A  8681               	bsf	129,3,c	;volatile
   916  007A2C                     
   917                           ;main.c: 323:         _delay((unsigned long)((2320)*(4000000/4000000.0)));
   918  007A2C  0E04               	movlw	4
   919  007A2E  6E19               	movwf	??_leftPosition^0,c
   920  007A30  0E02               	movlw	2
   921  007A32                     u587:
   922  007A32  2EE8               	decfsz	wreg,f,c
   923  007A34  D7FE               	bra	u587
   924  007A36  2E19               	decfsz	??_leftPosition^0,f,c
   925  007A38  D7FC               	bra	u587
   926  007A3A                     
   927                           ;main.c: 324:         PORTBbits.RB3 = 0;
   928  007A3A  9681               	bcf	129,3,c	;volatile
   929                           
   930                           ;main.c: 325:         _delay((unsigned long)((19250)*(4000000/4000000.0)));
   931  007A3C  0E19               	movlw	25
   932  007A3E  6E19               	movwf	??_leftPosition^0,c
   933  007A40  0EFF               	movlw	255
   934  007A42                     u597:
   935  007A42  2EE8               	decfsz	wreg,f,c
   936  007A44  D7FE               	bra	u597
   937  007A46  2E19               	decfsz	??_leftPosition^0,f,c
   938  007A48  D7FC               	bra	u597
   939  007A4A  F000               	nop	
   940  007A4C  0012               	return		;funcret
   941  007A4E                     __end_of_leftPosition:
   942                           	callstack 0
   943                           
   944 ;; *************** function _diagnostic *****************
   945 ;; Defined at:
   946 ;;		line 190 in file "main.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   960 ;;      Params:         0       0       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0
   962 ;;      Temps:          2       0       0       0       0       0       0
   963 ;;      Totals:         2       0       0       0       0       0       0
   964 ;;Total ram usage:        2 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text4
   974  007C8A                     __ptext4:
   975                           	callstack 0
   976  007C8A                     _diagnostic:
   977                           	callstack 30
   978  007C8A  BA8B               	btfsc	139,5,c	;volatile
   979  007C8C  EF4A  F03E         	goto	u61
   980  007C90  EF4D  F03E         	goto	u60
   981  007C94                     u61:
   982  007C94  0E01               	movlw	1
   983  007C96  EF4E  F03E         	goto	u66
   984  007C9A                     u60:
   985  007C9A  0E00               	movlw	0
   986  007C9C                     u66:
   987  007C9C  0AFF               	xorlw	255
   988  007C9E  6E19               	movwf	??_diagnostic^0,c
   989  007CA0  3A19               	swapf	??_diagnostic^0,f,c
   990  007CA2  4619               	rlncf	??_diagnostic^0,f,c
   991  007CA4  508B               	movf	139,w,c	;volatile
   992  007CA6  1819               	xorwf	??_diagnostic^0,w,c
   993  007CA8  0BDF               	andlw	-33
   994  007CAA  1819               	xorwf	??_diagnostic^0,w,c
   995  007CAC  6E8B               	movwf	139,c	;volatile
   996  007CAE  BC8B               	btfsc	139,6,c	;volatile
   997  007CB0  EF5C  F03E         	goto	u71
   998  007CB4  EF5F  F03E         	goto	u70
   999  007CB8                     u71:
  1000  007CB8  0E01               	movlw	1
  1001  007CBA  EF60  F03E         	goto	u76
  1002  007CBE                     u70:
  1003  007CBE  0E00               	movlw	0
  1004  007CC0                     u76:
  1005  007CC0  0AFF               	xorlw	255
  1006  007CC2  6E19               	movwf	??_diagnostic^0,c
  1007  007CC4  3A19               	swapf	??_diagnostic^0,f,c
  1008  007CC6  4619               	rlncf	??_diagnostic^0,f,c
  1009  007CC8  4619               	rlncf	??_diagnostic^0,f,c
  1010  007CCA  508B               	movf	139,w,c	;volatile
  1011  007CCC  1819               	xorwf	??_diagnostic^0,w,c
  1012  007CCE  0BBF               	andlw	-65
  1013  007CD0  1819               	xorwf	??_diagnostic^0,w,c
  1014  007CD2  6E8B               	movwf	139,c	;volatile
  1015  007CD4                     
  1016                           ;main.c: 195:     _delay((unsigned long)((300)*(4000000/4000.0)));
  1017  007CD4  0E02               	movlw	2
  1018  007CD6  6E1A               	movwf	(??_diagnostic+1)^0,c
  1019  007CD8  0E86               	movlw	134
  1020  007CDA  6E19               	movwf	??_diagnostic^0,c
  1021  007CDC  0E99               	movlw	153
  1022  007CDE                     u607:
  1023  007CDE  2EE8               	decfsz	wreg,f,c
  1024  007CE0  D7FE               	bra	u607
  1025  007CE2  2E19               	decfsz	??_diagnostic^0,f,c
  1026  007CE4  D7FC               	bra	u607
  1027  007CE6  2E1A               	decfsz	(??_diagnostic+1)^0,f,c
  1028  007CE8  D7FA               	bra	u607
  1029  007CEA  F000               	nop	
  1030  007CEC  BA8B               	btfsc	139,5,c	;volatile
  1031  007CEE  EF7B  F03E         	goto	u81
  1032  007CF2  EF7E  F03E         	goto	u80
  1033  007CF6                     u81:
  1034  007CF6  0E01               	movlw	1
  1035  007CF8  EF7F  F03E         	goto	u86
  1036  007CFC                     u80:
  1037  007CFC  0E00               	movlw	0
  1038  007CFE                     u86:
  1039  007CFE  0AFF               	xorlw	255
  1040  007D00  6E19               	movwf	??_diagnostic^0,c
  1041  007D02  3A19               	swapf	??_diagnostic^0,f,c
  1042  007D04  4619               	rlncf	??_diagnostic^0,f,c
  1043  007D06  508B               	movf	139,w,c	;volatile
  1044  007D08  1819               	xorwf	??_diagnostic^0,w,c
  1045  007D0A  0BDF               	andlw	-33
  1046  007D0C  1819               	xorwf	??_diagnostic^0,w,c
  1047  007D0E  6E8B               	movwf	139,c	;volatile
  1048  007D10  BC8B               	btfsc	139,6,c	;volatile
  1049  007D12  EF8D  F03E         	goto	u91
  1050  007D16  EF90  F03E         	goto	u90
  1051  007D1A                     u91:
  1052  007D1A  0E01               	movlw	1
  1053  007D1C  EF91  F03E         	goto	u96
  1054  007D20                     u90:
  1055  007D20  0E00               	movlw	0
  1056  007D22                     u96:
  1057  007D22  0AFF               	xorlw	255
  1058  007D24  6E19               	movwf	??_diagnostic^0,c
  1059  007D26  3A19               	swapf	??_diagnostic^0,f,c
  1060  007D28  4619               	rlncf	??_diagnostic^0,f,c
  1061  007D2A  4619               	rlncf	??_diagnostic^0,f,c
  1062  007D2C  508B               	movf	139,w,c	;volatile
  1063  007D2E  1819               	xorwf	??_diagnostic^0,w,c
  1064  007D30  0BBF               	andlw	-65
  1065  007D32  1819               	xorwf	??_diagnostic^0,w,c
  1066  007D34  6E8B               	movwf	139,c	;volatile
  1067  007D36  0012               	return		;funcret
  1068  007D38                     __end_of_diagnostic:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _adcFunction *****************
  1072 ;; Defined at:
  1073 ;;		line 335 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		None
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1087 ;;      Params:         0       0       0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text5
  1101  0079B8                     __ptext5:
  1102                           	callstack 0
  1103  0079B8                     _adcFunction:
  1104                           	callstack 30
  1105  0079B8                     
  1106                           ;main.c: 338:     ADCON0bits.GO = 1;
  1107  0079B8  82C2               	bsf	194,1,c	;volatile
  1108  0079BA                     l353:
  1109                           
  1110                           ;main.c: 339:     while (ADCON0bits.GO == 1)
  1111  0079BA  B2C2               	btfsc	194,1,c	;volatile
  1112  0079BC  EFE2  F03C         	goto	u131
  1113  0079C0  EFE4  F03C         	goto	u130
  1114  0079C4                     u131:
  1115  0079C4  EFDD  F03C         	goto	l353
  1116  0079C8                     u130:
  1117  0079C8                     
  1118                           ;main.c: 343:     adcResult = ADRESH;
  1119  0079C8  CFC4 F015          	movff	4036,_adcResult	;volatile
  1120  0079CC  6A16               	clrf	(_adcResult+1)^0,c
  1121  0079CE  0012               	return		;funcret
  1122  0079D0                     __end_of_adcFunction:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _SYSTEM_Initialize *****************
  1126 ;; Defined at:
  1127 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1141 ;;      Params:         0       0       0       0       0       0       0
  1142 ;;      Locals:         0       0       0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0
  1144 ;;      Totals:         0       0       0       0       0       0       0
  1145 ;;Total ram usage:        0 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    1
  1148 ;; This function calls:
  1149 ;;		_ADC_Initialize
  1150 ;;		_EPWM1_Initialize
  1151 ;;		_EPWM2_Initialize
  1152 ;;		_OSCILLATOR_Initialize
  1153 ;;		_PIN_MANAGER_Initialize
  1154 ;;		_TMR2_Initialize
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text6
  1161  0079D0                     __ptext6:
  1162                           	callstack 0
  1163  0079D0                     _SYSTEM_Initialize:
  1164                           	callstack 29
  1165  0079D0                     
  1166                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1167  0079D0  EC77  F03D         	call	_PIN_MANAGER_Initialize	;wreg free
  1168                           
  1169                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1170  0079D4  EC7E  F03C         	call	_OSCILLATOR_Initialize	;wreg free
  1171                           
  1172                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
  1173  0079D8  ECF5  F03C         	call	_EPWM1_Initialize	;wreg free
  1174                           
  1175                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  1176  0079DC  EC85  F03C         	call	_TMR2_Initialize	;wreg free
  1177                           
  1178                           ;mcc_generated_files/mcc.c: 57:     EPWM2_Initialize();
  1179  0079E0  EC05  F03D         	call	_EPWM2_Initialize	;wreg free
  1180                           
  1181                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1182  0079E4  ECD1  F03C         	call	_ADC_Initialize	;wreg free
  1183  0079E8  0012               	return		;funcret
  1184  0079EA                     __end_of_SYSTEM_Initialize:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _TMR2_Initialize *****************
  1188 ;; Defined at:
  1189 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1203 ;;      Params:         0       0       0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0
  1206 ;;      Totals:         0       0       0       0       0       0       0
  1207 ;;Total ram usage:        0 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_SYSTEM_Initialize
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text7
  1217  00790A                     __ptext7:
  1218                           	callstack 0
  1219  00790A                     _TMR2_Initialize:
  1220                           	callstack 29
  1221  00790A                     
  1222                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  1223  00790A  68BB               	setf	187,c	;volatile
  1224  00790C                     
  1225                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  1226  00790C  0E00               	movlw	0
  1227  00790E  6EBC               	movwf	188,c	;volatile
  1228  007910                     
  1229                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  1230  007910  929E               	bcf	158,1,c	;volatile
  1231                           
  1232                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  1233  007912  0E04               	movlw	4
  1234  007914  6EBA               	movwf	186,c	;volatile
  1235  007916  0012               	return		;funcret
  1236  007918                     __end_of_TMR2_Initialize:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _PIN_MANAGER_Initialize *****************
  1240 ;; Defined at:
  1241 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;		None
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1255 ;;      Params:         0       0       0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0
  1258 ;;      Totals:         0       0       0       0       0       0       0
  1259 ;;Total ram usage:        0 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_SYSTEM_Initialize
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text8
  1269  007AEE                     __ptext8:
  1270                           	callstack 0
  1271  007AEE                     _PIN_MANAGER_Initialize:
  1272                           	callstack 29
  1273  007AEE                     
  1274                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1275  007AEE  0E00               	movlw	0
  1276  007AF0  6E89               	movwf	137,c	;volatile
  1277                           
  1278                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1279  007AF2  0E00               	movlw	0
  1280  007AF4  6E8A               	movwf	138,c	;volatile
  1281                           
  1282                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1283  007AF6  0E00               	movlw	0
  1284  007AF8  6E8B               	movwf	139,c	;volatile
  1285                           
  1286                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDB;
  1287  007AFA  0EDB               	movlw	219
  1288  007AFC  6E92               	movwf	146,c	;volatile
  1289                           
  1290                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF7;
  1291  007AFE  0EF7               	movlw	247
  1292  007B00  6E93               	movwf	147,c	;volatile
  1293                           
  1294                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0b00011000;
  1295  007B02  0E18               	movlw	24
  1296  007B04  6E94               	movwf	148,c	;volatile
  1297                           
  1298                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  1299  007B06  0E00               	movlw	0
  1300  007B08  010F               	movlb	15	; () banked
  1301  007B0A  6F3A               	movwf	58,b	;volatile
  1302                           
  1303                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1304  007B0C  0E00               	movlw	0
  1305  007B0E  6F39               	movwf	57,b	;volatile
  1306                           
  1307                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0B;
  1308  007B10  0E0B               	movlw	11
  1309  007B12  6F38               	movwf	56,b	;volatile
  1310                           
  1311                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1312  007B14  0E00               	movlw	0
  1313  007B16  6E61               	movwf	97,c	;volatile
  1314  007B18                     
  1315                           ; BSR set to: 15
  1316                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1317  007B18  8EF1               	bsf	241,7,c	;volatile
  1318  007B1A                     
  1319                           ; BSR set to: 15
  1320  007B1A  0012               	return		;funcret
  1321  007B1C                     __end_of_PIN_MANAGER_Initialize:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _OSCILLATOR_Initialize *****************
  1325 ;; Defined at:
  1326 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1340 ;;      Params:         0       0       0       0       0       0       0
  1341 ;;      Locals:         0       0       0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0
  1343 ;;      Totals:         0       0       0       0       0       0       0
  1344 ;;Total ram usage:        0 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_SYSTEM_Initialize
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text9
  1354  0078FC                     __ptext9:
  1355                           	callstack 0
  1356  0078FC                     _OSCILLATOR_Initialize:
  1357                           	callstack 29
  1358  0078FC                     
  1359                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
  1360  0078FC  0E30               	movlw	48
  1361  0078FE  6ED3               	movwf	211,c	;volatile
  1362                           
  1363                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  1364  007900  0E04               	movlw	4
  1365  007902  6ED2               	movwf	210,c	;volatile
  1366                           
  1367                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1368  007904  0E00               	movlw	0
  1369  007906  6E9B               	movwf	155,c	;volatile
  1370  007908  0012               	return		;funcret
  1371  00790A                     __end_of_OSCILLATOR_Initialize:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _EPWM2_Initialize *****************
  1375 ;; Defined at:
  1376 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1390 ;;      Params:         0       0       0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_SYSTEM_Initialize
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text10
  1404  007A0A                     __ptext10:
  1405                           	callstack 0
  1406  007A0A                     _EPWM2_Initialize:
  1407                           	callstack 29
  1408  007A0A                     
  1409                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  1410  007A0A  0E3C               	movlw	60
  1411  007A0C  6E66               	movwf	102,c	;volatile
  1412                           
  1413                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  1414  007A0E  0E00               	movlw	0
  1415  007A10  6E64               	movwf	100,c	;volatile
  1416                           
  1417                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  1418  007A12  0E80               	movlw	128
  1419  007A14  6E65               	movwf	101,c	;volatile
  1420                           
  1421                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  1422  007A16  0E01               	movlw	1
  1423  007A18  6E63               	movwf	99,c	;volatile
  1424                           
  1425                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  1426  007A1A  0E00               	movlw	0
  1427  007A1C  6E68               	movwf	104,c	;volatile
  1428                           
  1429                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x7F;
  1430  007A1E  0E7F               	movlw	127
  1431  007A20  6E67               	movwf	103,c	;volatile
  1432                           
  1433                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  1434  007A22  0EE7               	movlw	-25
  1435  007A24  010F               	movlb	15	; () banked
  1436  007A26  1749               	andwf	73,f,b	;volatile
  1437  007A28                     
  1438                           ; BSR set to: 15
  1439  007A28  0012               	return		;funcret
  1440  007A2A                     __end_of_EPWM2_Initialize:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _EPWM1_Initialize *****************
  1444 ;; Defined at:
  1445 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1459 ;;      Params:         0       0       0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_SYSTEM_Initialize
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text11
  1473  0079EA                     __ptext11:
  1474                           	callstack 0
  1475  0079EA                     _EPWM1_Initialize:
  1476                           	callstack 29
  1477  0079EA                     
  1478                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  1479  0079EA  0E3C               	movlw	60
  1480  0079EC  6EBD               	movwf	189,c	;volatile
  1481                           
  1482                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  1483  0079EE  0E00               	movlw	0
  1484  0079F0  6EB6               	movwf	182,c	;volatile
  1485                           
  1486                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  1487  0079F2  0E80               	movlw	128
  1488  0079F4  6EB7               	movwf	183,c	;volatile
  1489                           
  1490                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  1491  0079F6  0E01               	movlw	1
  1492  0079F8  6EB9               	movwf	185,c	;volatile
  1493                           
  1494                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  1495  0079FA  0E00               	movlw	0
  1496  0079FC  6EBF               	movwf	191,c	;volatile
  1497                           
  1498                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  1499  0079FE  0E7F               	movlw	127
  1500  007A00  6EBE               	movwf	190,c	;volatile
  1501                           
  1502                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  1503  007A02  0EFC               	movlw	-4
  1504  007A04  010F               	movlb	15	; () banked
  1505  007A06  1749               	andwf	73,f,b	;volatile
  1506  007A08                     
  1507                           ; BSR set to: 15
  1508  007A08  0012               	return		;funcret
  1509  007A0A                     __end_of_EPWM1_Initialize:
  1510                           	callstack 0
  1511                           
  1512 ;; *************** function _ADC_Initialize *****************
  1513 ;; Defined at:
  1514 ;;		line 62 in file "mcc_generated_files/adc.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1528 ;;      Params:         0       0       0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0
  1531 ;;      Totals:         0       0       0       0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_SYSTEM_Initialize
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text12
  1542  0079A2                     __ptext12:
  1543                           	callstack 0
  1544  0079A2                     _ADC_Initialize:
  1545                           	callstack 29
  1546  0079A2                     
  1547                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1548  0079A2  0E00               	movlw	0
  1549  0079A4  6EC1               	movwf	193,c	;volatile
  1550                           
  1551                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  1552  0079A6  0E04               	movlw	4
  1553  0079A8  6EC0               	movwf	192,c	;volatile
  1554                           
  1555                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1556  0079AA  0E00               	movlw	0
  1557  0079AC  6EC3               	movwf	195,c	;volatile
  1558                           
  1559                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1560  0079AE  0E00               	movlw	0
  1561  0079B0  6EC4               	movwf	196,c	;volatile
  1562                           
  1563                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x0D;
  1564  0079B2  0E0D               	movlw	13
  1565  0079B4  6EC2               	movwf	194,c	;volatile
  1566  0079B6  0012               	return		;funcret
  1567  0079B8                     __end_of_ADC_Initialize:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _MCP23008_Initialise *****************
  1571 ;; Defined at:
  1572 ;;		line 225 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1586 ;;      Params:         0       0       0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    2
  1593 ;; This function calls:
  1594 ;;		_I2C_send_data
  1595 ;;		_IdleI2C
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text13
  1602  007B88                     __ptext13:
  1603                           	callstack 0
  1604  007B88                     _MCP23008_Initialise:
  1605                           	callstack 28
  1606  007B88                     
  1607                           ;main.c: 228:     I2C_send_data(0x40, 0x00, 0x00);
  1608  007B88  0E00               	movlw	0
  1609  007B8A  6E1A               	movwf	I2C_send_data@register_address^0,c
  1610  007B8C  0E00               	movlw	0
  1611  007B8E  6E1B               	movwf	I2C_send_data@register_data^0,c
  1612  007B90  0E40               	movlw	64
  1613  007B92  EC4C  F03D         	call	_I2C_send_data
  1614                           
  1615                           ;main.c: 229:     IdleI2C();
  1616  007B96  EC39  F03D         	call	_IdleI2C	;wreg free
  1617                           
  1618                           ;main.c: 230:     I2C_send_data(0x40, 0x01, 0x00);
  1619  007B9A  0E01               	movlw	1
  1620  007B9C  6E1A               	movwf	I2C_send_data@register_address^0,c
  1621  007B9E  0E00               	movlw	0
  1622  007BA0  6E1B               	movwf	I2C_send_data@register_data^0,c
  1623  007BA2  0E40               	movlw	64
  1624  007BA4  EC4C  F03D         	call	_I2C_send_data
  1625                           
  1626                           ;main.c: 231:     IdleI2C();
  1627  007BA8  EC39  F03D         	call	_IdleI2C	;wreg free
  1628                           
  1629                           ;main.c: 232:     I2C_send_data(0x40, 0x02, 0x00);
  1630  007BAC  0E02               	movlw	2
  1631  007BAE  6E1A               	movwf	I2C_send_data@register_address^0,c
  1632  007BB0  0E00               	movlw	0
  1633  007BB2  6E1B               	movwf	I2C_send_data@register_data^0,c
  1634  007BB4  0E40               	movlw	64
  1635  007BB6  EC4C  F03D         	call	_I2C_send_data
  1636                           
  1637                           ;main.c: 233:     IdleI2C();
  1638  007BBA  EC39  F03D         	call	_IdleI2C	;wreg free
  1639                           
  1640                           ;main.c: 234:     I2C_send_data(0x40, 0x05, 0x3E);
  1641  007BBE  0E05               	movlw	5
  1642  007BC0  6E1A               	movwf	I2C_send_data@register_address^0,c
  1643  007BC2  0E3E               	movlw	62
  1644  007BC4  6E1B               	movwf	I2C_send_data@register_data^0,c
  1645  007BC6  0E40               	movlw	64
  1646  007BC8  EC4C  F03D         	call	_I2C_send_data
  1647                           
  1648                           ;main.c: 235:     IdleI2C();
  1649  007BCC  EC39  F03D         	call	_IdleI2C	;wreg free
  1650                           
  1651                           ;main.c: 236:     I2C_send_data(0x40, 0x06, 0x00);
  1652  007BD0  0E06               	movlw	6
  1653  007BD2  6E1A               	movwf	I2C_send_data@register_address^0,c
  1654  007BD4  0E00               	movlw	0
  1655  007BD6  6E1B               	movwf	I2C_send_data@register_data^0,c
  1656  007BD8  0E40               	movlw	64
  1657  007BDA  EC4C  F03D         	call	_I2C_send_data
  1658  007BDE  0012               	return		;funcret
  1659  007BE0                     __end_of_MCP23008_Initialise:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _IsOptoR *****************
  1663 ;; Defined at:
  1664 ;;		line 365 in file "main.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      _Bool 
  1671 ;; Registers used:
  1672 ;;		wreg
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1678 ;;      Params:         0       0       0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0
  1681 ;;      Totals:         0       0       0       0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text14
  1692  007962                     __ptext14:
  1693                           	callstack 0
  1694  007962                     _IsOptoR:
  1695                           	callstack 30
  1696  007962                     
  1697                           ;main.c: 368:     return (PORTBbits.RB1 == 0);
  1698  007962  A281               	btfss	129,1,c	;volatile
  1699  007964  EFB6  F03C         	goto	u141
  1700  007968  EFB9  F03C         	goto	u140
  1701  00796C                     u141:
  1702  00796C  0E01               	movlw	1
  1703  00796E  EFBA  F03C         	goto	u150
  1704  007972                     u140:
  1705  007972  0E00               	movlw	0
  1706  007974                     u150:
  1707  007974  0012               	return		;funcret
  1708  007976                     __end_of_IsOptoR:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _IsOptoL *****************
  1712 ;; Defined at:
  1713 ;;		line 359 in file "main.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      _Bool 
  1720 ;; Registers used:
  1721 ;;		wreg
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1727 ;;      Params:         0       0       0       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0
  1730 ;;      Totals:         0       0       0       0       0       0       0
  1731 ;;Total ram usage:        0 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; This function calls:
  1734 ;;		Nothing
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           	psect	text15
  1741  00794E                     __ptext15:
  1742                           	callstack 0
  1743  00794E                     _IsOptoL:
  1744                           	callstack 30
  1745  00794E                     
  1746                           ;main.c: 362:     return (PORTBbits.RB2 == 0);
  1747  00794E  A481               	btfss	129,2,c	;volatile
  1748  007950  EFAC  F03C         	goto	u161
  1749  007954  EFAF  F03C         	goto	u160
  1750  007958                     u161:
  1751  007958  0E01               	movlw	1
  1752  00795A  EFB0  F03C         	goto	u170
  1753  00795E                     u160:
  1754  00795E  0E00               	movlw	0
  1755  007960                     u170:
  1756  007960  0012               	return		;funcret
  1757  007962                     __end_of_IsOptoL:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _IsBumperR *****************
  1761 ;; Defined at:
  1762 ;;		line 353 in file "main.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      _Bool 
  1769 ;; Registers used:
  1770 ;;		wreg
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1776 ;;      Params:         0       0       0       0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0
  1779 ;;      Totals:         0       0       0       0       0       0       0
  1780 ;;Total ram usage:        0 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_main
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text16
  1790  00793A                     __ptext16:
  1791                           	callstack 0
  1792  00793A                     _IsBumperR:
  1793                           	callstack 30
  1794  00793A                     
  1795                           ;main.c: 356:     return (PORTBbits.RB5 == 0);
  1796  00793A  AA81               	btfss	129,5,c	;volatile
  1797  00793C  EFA2  F03C         	goto	u181
  1798  007940  EFA5  F03C         	goto	u180
  1799  007944                     u181:
  1800  007944  0E01               	movlw	1
  1801  007946  EFA6  F03C         	goto	u190
  1802  00794A                     u180:
  1803  00794A  0E00               	movlw	0
  1804  00794C                     u190:
  1805  00794C  0012               	return		;funcret
  1806  00794E                     __end_of_IsBumperR:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _IsBumperL *****************
  1810 ;; Defined at:
  1811 ;;		line 347 in file "main.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      _Bool 
  1818 ;; Registers used:
  1819 ;;		wreg
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1825 ;;      Params:         0       0       0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0
  1828 ;;      Totals:         0       0       0       0       0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text17
  1839  007926                     __ptext17:
  1840                           	callstack 0
  1841  007926                     _IsBumperL:
  1842                           	callstack 30
  1843  007926                     
  1844                           ;main.c: 350:     return (PORTBbits.RB4 == 0);
  1845  007926  A881               	btfss	129,4,c	;volatile
  1846  007928  EF98  F03C         	goto	u201
  1847  00792C  EF9B  F03C         	goto	u200
  1848  007930                     u201:
  1849  007930  0E01               	movlw	1
  1850  007932  EF9C  F03C         	goto	u210
  1851  007936                     u200:
  1852  007936  0E00               	movlw	0
  1853  007938                     u210:
  1854  007938  0012               	return		;funcret
  1855  00793A                     __end_of_IsBumperL:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _I2C_Initialise *****************
  1859 ;; Defined at:
  1860 ;;		line 215 in file "main.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1874 ;;      Params:         0       0       0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text18
  1888  00798C                     __ptext18:
  1889                           	callstack 0
  1890  00798C                     _I2C_Initialise:
  1891                           	callstack 30
  1892  00798C                     
  1893                           ;main.c: 218:     SSP1STAT = 0x00;
  1894  00798C  0E00               	movlw	0
  1895  00798E  6EC7               	movwf	199,c	;volatile
  1896                           
  1897                           ;main.c: 219:     SSP1CON1 = 0x28;
  1898  007990  0E28               	movlw	40
  1899  007992  6EC6               	movwf	198,c	;volatile
  1900                           
  1901                           ;main.c: 220:     SSP1CON2 = 0x00;
  1902  007994  0E00               	movlw	0
  1903  007996  6EC5               	movwf	197,c	;volatile
  1904                           
  1905                           ;main.c: 221:     SSP1CON3 = 0x08;
  1906  007998  0E08               	movlw	8
  1907  00799A  6ECB               	movwf	203,c	;volatile
  1908                           
  1909                           ;main.c: 222:     SSP1ADD = 0x09;
  1910  00799C  0E09               	movlw	9
  1911  00799E  6EC8               	movwf	200,c	;volatile
  1912  0079A0  0012               	return		;funcret
  1913  0079A2                     __end_of_I2C_Initialise:
  1914                           	callstack 0
  1915                           
  1916 ;; *************** function _I2C *****************
  1917 ;; Defined at:
  1918 ;;		line 281 in file "main.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1932 ;;      Params:         0       0       0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0
  1934 ;;      Temps:          2       0       0       0       0       0       0
  1935 ;;      Totals:         2       0       0       0       0       0       0
  1936 ;;Total ram usage:        2 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    2
  1939 ;; This function calls:
  1940 ;;		_I2C_send_data
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text19
  1947  007BE0                     __ptext19:
  1948                           	callstack 0
  1949  007BE0                     _I2C:
  1950                           	callstack 28
  1951  007BE0                     
  1952                           ;main.c: 285:     {;main.c: 287:         I2C_send_data(0x40, 0x09, digits[10]);
  1953  007BE0  0E09               	movlw	9
  1954  007BE2  6E1A               	movwf	I2C_send_data@register_address^0,c
  1955  007BE4  C00B  F01B         	movff	_digits+10,I2C_send_data@register_data
  1956  007BE8  0E40               	movlw	64
  1957  007BEA  EC4C  F03D         	call	_I2C_send_data
  1958  007BEE                     
  1959                           ;main.c: 288:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1960  007BEE  0E06               	movlw	6
  1961  007BF0  6E1E               	movwf	(??_I2C+1)^0,c
  1962  007BF2  0E13               	movlw	19
  1963  007BF4  6E1D               	movwf	??_I2C^0,c
  1964  007BF6  0EAE               	movlw	174
  1965  007BF8                     u617:
  1966  007BF8  2EE8               	decfsz	wreg,f,c
  1967  007BFA  D7FE               	bra	u617
  1968  007BFC  2E1D               	decfsz	??_I2C^0,f,c
  1969  007BFE  D7FC               	bra	u617
  1970  007C00  2E1E               	decfsz	(??_I2C+1)^0,f,c
  1971  007C02  D7FA               	bra	u617
  1972  007C04                     
  1973                           ;main.c: 289:         I2C_send_data(0x40, 0x09, digits[UnLit]);
  1974  007C04  0E09               	movlw	9
  1975  007C06  6E1A               	movwf	I2C_send_data@register_address^0,c
  1976  007C08  0E01               	movlw	low _digits
  1977  007C0A  2413               	addwf	_UnLit^0,w,c
  1978  007C0C  6ED9               	movwf	fsr2l,c
  1979  007C0E  0E00               	movlw	high _digits
  1980  007C10  2014               	addwfc	(_UnLit+1)^0,w,c
  1981  007C12  6EDA               	movwf	fsr2h,c
  1982  007C14  50DF               	movf	indf2,w,c
  1983  007C16  6E1B               	movwf	I2C_send_data@register_data^0,c
  1984  007C18  0E40               	movlw	64
  1985  007C1A  EC4C  F03D         	call	_I2C_send_data
  1986  007C1E                     
  1987                           ;main.c: 290:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1988  007C1E  0E06               	movlw	6
  1989  007C20  6E1E               	movwf	(??_I2C+1)^0,c
  1990  007C22  0E13               	movlw	19
  1991  007C24  6E1D               	movwf	??_I2C^0,c
  1992  007C26  0EAE               	movlw	174
  1993  007C28                     u627:
  1994  007C28  2EE8               	decfsz	wreg,f,c
  1995  007C2A  D7FE               	bra	u627
  1996  007C2C  2E1D               	decfsz	??_I2C^0,f,c
  1997  007C2E  D7FC               	bra	u627
  1998  007C30  2E1E               	decfsz	(??_I2C+1)^0,f,c
  1999  007C32  D7FA               	bra	u627
  2000  007C34                     
  2001                           ;main.c: 291:         I2C_send_data(0x40, 0x09, digits[11]);
  2002  007C34  0E09               	movlw	9
  2003  007C36  6E1A               	movwf	I2C_send_data@register_address^0,c
  2004  007C38  C00C  F01B         	movff	_digits+11,I2C_send_data@register_data
  2005  007C3C  0E40               	movlw	64
  2006  007C3E  EC4C  F03D         	call	_I2C_send_data
  2007  007C42                     
  2008                           ;main.c: 292:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2009  007C42  0E06               	movlw	6
  2010  007C44  6E1E               	movwf	(??_I2C+1)^0,c
  2011  007C46  0E13               	movlw	19
  2012  007C48  6E1D               	movwf	??_I2C^0,c
  2013  007C4A  0EAE               	movlw	174
  2014  007C4C                     u637:
  2015  007C4C  2EE8               	decfsz	wreg,f,c
  2016  007C4E  D7FE               	bra	u637
  2017  007C50  2E1D               	decfsz	??_I2C^0,f,c
  2018  007C52  D7FC               	bra	u637
  2019  007C54  2E1E               	decfsz	(??_I2C+1)^0,f,c
  2020  007C56  D7FA               	bra	u637
  2021  007C58                     
  2022                           ;main.c: 293:         I2C_send_data(0x40, 0x09, digits[Lit]);
  2023  007C58  0E09               	movlw	9
  2024  007C5A  6E1A               	movwf	I2C_send_data@register_address^0,c
  2025  007C5C  0E01               	movlw	low _digits
  2026  007C5E  2411               	addwf	_Lit^0,w,c
  2027  007C60  6ED9               	movwf	fsr2l,c
  2028  007C62  0E00               	movlw	high _digits
  2029  007C64  2012               	addwfc	(_Lit+1)^0,w,c
  2030  007C66  6EDA               	movwf	fsr2h,c
  2031  007C68  50DF               	movf	indf2,w,c
  2032  007C6A  6E1B               	movwf	I2C_send_data@register_data^0,c
  2033  007C6C  0E40               	movlw	64
  2034  007C6E  EC4C  F03D         	call	_I2C_send_data
  2035                           
  2036                           ;main.c: 294:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2037  007C72  0E06               	movlw	6
  2038  007C74  6E1E               	movwf	(??_I2C+1)^0,c
  2039  007C76  0E13               	movlw	19
  2040  007C78  6E1D               	movwf	??_I2C^0,c
  2041  007C7A  0EAE               	movlw	174
  2042  007C7C                     u647:
  2043  007C7C  2EE8               	decfsz	wreg,f,c
  2044  007C7E  D7FE               	bra	u647
  2045  007C80  2E1D               	decfsz	??_I2C^0,f,c
  2046  007C82  D7FC               	bra	u647
  2047  007C84  2E1E               	decfsz	(??_I2C+1)^0,f,c
  2048  007C86  D7FA               	bra	u647
  2049  007C88  0012               	return		;funcret
  2050  007C8A                     __end_of_I2C:
  2051                           	callstack 0
  2052                           
  2053 ;; *************** function _I2C_send_data *****************
  2054 ;; Defined at:
  2055 ;;		line 239 in file "main.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  device_addre    1    wreg     unsigned char 
  2058 ;;  register_add    1    1[COMRAM] unsigned char 
  2059 ;;  register_dat    1    2[COMRAM] unsigned char 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  device_addre    1    3[COMRAM] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2071 ;;      Params:         2       0       0       0       0       0       0
  2072 ;;      Locals:         1       0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0
  2074 ;;      Totals:         3       0       0       0       0       0       0
  2075 ;;Total ram usage:        3 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		_IdleI2C
  2080 ;;		_StartI2C
  2081 ;;		_StopI2C
  2082 ;;		_WriteI2C
  2083 ;; This function is called by:
  2084 ;;		_MCP23008_Initialise
  2085 ;;		_I2C
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text20
  2090  007A98                     __ptext20:
  2091                           	callstack 0
  2092  007A98                     _I2C_send_data:
  2093                           	callstack 28
  2094                           
  2095                           ;incstack = 0
  2096                           ;I2C_send_data@device_address stored from wreg
  2097  007A98  6E1C               	movwf	I2C_send_data@device_address^0,c
  2098  007A9A                     
  2099                           ;main.c: 239: void I2C_send_data(unsigned char device_address, unsigned char register_ad
      +                          dress, unsigned char register_data);main.c: 240: {;main.c: 242:     StartI2C();
  2100  007A9A  EC61  F03D         	call	_StartI2C	;wreg free
  2101  007A9E                     
  2102                           ;main.c: 243:     WriteI2C(device_address);
  2103  007A9E  501C               	movf	I2C_send_data@device_address^0,w,c
  2104  007AA0  ECBB  F03C         	call	_WriteI2C
  2105  007AA4                     
  2106                           ;main.c: 244:     IdleI2C();
  2107  007AA4  EC39  F03D         	call	_IdleI2C	;wreg free
  2108                           
  2109                           ;main.c: 245:     WriteI2C(register_address);
  2110  007AA8  501A               	movf	I2C_send_data@register_address^0,w,c
  2111  007AAA  ECBB  F03C         	call	_WriteI2C
  2112  007AAE                     
  2113                           ;main.c: 246:     IdleI2C();
  2114  007AAE  EC39  F03D         	call	_IdleI2C	;wreg free
  2115  007AB2                     
  2116                           ;main.c: 247:     WriteI2C(register_data);
  2117  007AB2  501B               	movf	I2C_send_data@register_data^0,w,c
  2118  007AB4  ECBB  F03C         	call	_WriteI2C
  2119                           
  2120                           ;main.c: 248:     IdleI2C();
  2121  007AB8  EC39  F03D         	call	_IdleI2C	;wreg free
  2122  007ABC                     
  2123                           ;main.c: 249:     StopI2C();
  2124  007ABC  EC7C  F03C         	call	_StopI2C	;wreg free
  2125  007AC0  0012               	return		;funcret
  2126  007AC2                     __end_of_I2C_send_data:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _WriteI2C *****************
  2130 ;; Defined at:
  2131 ;;		line 268 in file "main.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  data            1    wreg     unsigned char 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  data            1    0[COMRAM] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2145 ;;      Params:         0       0       0       0       0       0       0
  2146 ;;      Locals:         1       0       0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0
  2148 ;;      Totals:         1       0       0       0       0       0       0
  2149 ;;Total ram usage:        1 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_I2C_send_data
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text21
  2159  007976                     __ptext21:
  2160                           	callstack 0
  2161  007976                     _WriteI2C:
  2162                           	callstack 28
  2163                           
  2164                           ;incstack = 0
  2165                           ;WriteI2C@data stored from wreg
  2166  007976  6E19               	movwf	WriteI2C@data^0,c
  2167  007978                     
  2168                           ;main.c: 268: void WriteI2C(unsigned char data);main.c: 269: {;main.c: 270:     SSP1BUF 
      +                          = data;
  2169  007978  C019  FFC9         	movff	WriteI2C@data,4041	;volatile
  2170  00797C                     l335:
  2171  00797C  B0C7               	btfsc	199,0,c	;volatile
  2172  00797E  EFC3  F03C         	goto	u51
  2173  007982  EFC5  F03C         	goto	u50
  2174  007986                     u51:
  2175  007986  EFBE  F03C         	goto	l335
  2176  00798A                     u50:
  2177  00798A  0012               	return		;funcret
  2178  00798C                     __end_of_WriteI2C:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _StopI2C *****************
  2182 ;; Defined at:
  2183 ;;		line 275 in file "main.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		None
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2197 ;;      Params:         0       0       0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_I2C_send_data
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text22
  2211  0078F8                     __ptext22:
  2212                           	callstack 0
  2213  0078F8                     _StopI2C:
  2214                           	callstack 28
  2215  0078F8                     
  2216                           ;main.c: 278:     SSP1CON2bits.PEN = 1;
  2217  0078F8  84C5               	bsf	197,2,c	;volatile
  2218  0078FA  0012               	return		;funcret
  2219  0078FC                     __end_of_StopI2C:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function _StartI2C *****************
  2223 ;; Defined at:
  2224 ;;		line 258 in file "main.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2238 ;;      Params:         0       0       0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0
  2240 ;;      Temps:          1       0       0       0       0       0       0
  2241 ;;      Totals:         1       0       0       0       0       0       0
  2242 ;;Total ram usage:        1 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_I2C_send_data
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text23
  2252  007AC2                     __ptext23:
  2253                           	callstack 0
  2254  007AC2                     _StartI2C:
  2255                           	callstack 28
  2256  007AC2                     
  2257                           ;main.c: 260:     PIR1bits.SSPIF = 0;
  2258  007AC2  969E               	bcf	158,3,c	;volatile
  2259                           
  2260                           ;main.c: 261:     SSP1CON2bits.SEN = 1;
  2261  007AC4  80C5               	bsf	197,0,c	;volatile
  2262  007AC6                     l329:
  2263  007AC6  B4C7               	btfsc	199,2,c	;volatile
  2264  007AC8  EF68  F03D         	goto	u31
  2265  007ACC  EF6A  F03D         	goto	u30
  2266  007AD0                     u31:
  2267  007AD0  EF63  F03D         	goto	l329
  2268  007AD4                     u30:
  2269  007AD4  CFC5 F019          	movff	4037,??_StartI2C	;volatile
  2270  007AD8  0E1F               	movlw	31
  2271  007ADA  1619               	andwf	??_StartI2C^0,f,c
  2272  007ADC  A4D8               	btfss	status,2,c
  2273  007ADE  EF73  F03D         	goto	u41
  2274  007AE2  EF75  F03D         	goto	u40
  2275  007AE6                     u41:
  2276  007AE6  EF63  F03D         	goto	l329
  2277  007AEA                     u40:
  2278  007AEA                     
  2279                           ;main.c: 265:     PIR1bits.SSPIF = 0;
  2280  007AEA  969E               	bcf	158,3,c	;volatile
  2281  007AEC  0012               	return		;funcret
  2282  007AEE                     __end_of_StartI2C:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _IdleI2C *****************
  2286 ;; Defined at:
  2287 ;;		line 252 in file "main.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2301 ;;      Params:         0       0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0
  2303 ;;      Temps:          1       0       0       0       0       0       0
  2304 ;;      Totals:         1       0       0       0       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_MCP23008_Initialise
  2311 ;;		_I2C_send_data
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text24
  2316  007A72                     __ptext24:
  2317                           	callstack 0
  2318  007A72                     _IdleI2C:
  2319                           	callstack 29
  2320  007A72                     l1049:
  2321  007A72  CFC5 F019          	movff	4037,??_IdleI2C	;volatile
  2322  007A76  0E1F               	movlw	31
  2323  007A78  1619               	andwf	??_IdleI2C^0,f,c
  2324  007A7A  A4D8               	btfss	status,2,c
  2325  007A7C  EF42  F03D         	goto	u11
  2326  007A80  EF44  F03D         	goto	u10
  2327  007A84                     u11:
  2328  007A84  EF39  F03D         	goto	l1049
  2329  007A88                     u10:
  2330  007A88  B2C7               	btfsc	199,1,c	;volatile
  2331  007A8A  EF49  F03D         	goto	u21
  2332  007A8E  EF4B  F03D         	goto	u20
  2333  007A92                     u21:
  2334  007A92  EF39  F03D         	goto	l1049
  2335  007A96                     u20:
  2336  007A96  0012               	return		;funcret
  2337  007A98                     __end_of_IdleI2C:
  2338                           	callstack 0
  2339  0000                     
  2340                           	psect	rparam
  2341  0000                     
  2342                           	psect	idloc
  2343                           
  2344                           ;Config register IDLOC0 @ 0x200000
  2345                           ;	unspecified, using default values
  2346  200000                     	org	2097152
  2347  200000  FF                 	db	255
  2348                           
  2349                           ;Config register IDLOC1 @ 0x200001
  2350                           ;	unspecified, using default values
  2351  200001                     	org	2097153
  2352  200001  FF                 	db	255
  2353                           
  2354                           ;Config register IDLOC2 @ 0x200002
  2355                           ;	unspecified, using default values
  2356  200002                     	org	2097154
  2357  200002  FF                 	db	255
  2358                           
  2359                           ;Config register IDLOC3 @ 0x200003
  2360                           ;	unspecified, using default values
  2361  200003                     	org	2097155
  2362  200003  FF                 	db	255
  2363                           
  2364                           ;Config register IDLOC4 @ 0x200004
  2365                           ;	unspecified, using default values
  2366  200004                     	org	2097156
  2367  200004  FF                 	db	255
  2368                           
  2369                           ;Config register IDLOC5 @ 0x200005
  2370                           ;	unspecified, using default values
  2371  200005                     	org	2097157
  2372  200005  FF                 	db	255
  2373                           
  2374                           ;Config register IDLOC6 @ 0x200006
  2375                           ;	unspecified, using default values
  2376  200006                     	org	2097158
  2377  200006  FF                 	db	255
  2378                           
  2379                           ;Config register IDLOC7 @ 0x200007
  2380                           ;	unspecified, using default values
  2381  200007                     	org	2097159
  2382  200007  FF                 	db	255
  2383                           
  2384                           	psect	config
  2385                           
  2386                           ; Padding undefined space
  2387  300000                     	org	3145728
  2388  300000  FF                 	db	255
  2389                           
  2390                           ;Config register CONFIG1H @ 0x300001
  2391                           ;	Oscillator Selection bits
  2392                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  2393                           ;	4X PLL Enable
  2394                           ;	PLLCFG = OFF, Oscillator used directly
  2395                           ;	Primary clock enable bit
  2396                           ;	PRICLKEN = ON, Primary clock enabled
  2397                           ;	Fail-Safe Clock Monitor Enable bit
  2398                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2399                           ;	Internal/External Oscillator Switchover bit
  2400                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2401  300001                     	org	3145729
  2402  300001  23                 	db	35
  2403                           
  2404                           ;Config register CONFIG2L @ 0x300002
  2405                           ;	Power-up Timer Enable bit
  2406                           ;	PWRTEN = OFF, Power up timer disabled
  2407                           ;	Brown-out Reset Enable bits
  2408                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2409                           ;	Brown Out Reset Voltage bits
  2410                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2411  300002                     	org	3145730
  2412  300002  1F                 	db	31
  2413                           
  2414                           ;Config register CONFIG2H @ 0x300003
  2415                           ;	Watchdog Timer Enable bits
  2416                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2417                           ;	Watchdog Timer Postscale Select bits
  2418                           ;	WDTPS = 32768, 1:32768
  2419  300003                     	org	3145731
  2420  300003  3C                 	db	60
  2421                           
  2422                           ; Padding undefined space
  2423  300004                     	org	3145732
  2424  300004  FF                 	db	255
  2425                           
  2426                           ;Config register CONFIG3H @ 0x300005
  2427                           ;	CCP2 MUX bit
  2428                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2429                           ;	PORTB A/D Enable bit
  2430                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2431                           ;	P3A/CCP3 Mux bit
  2432                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2433                           ;	HFINTOSC Fast Start-up
  2434                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2435                           ;	Timer3 Clock input mux bit
  2436                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2437                           ;	ECCP2 B output mux bit
  2438                           ;	P2BMX = PORTB5, P2B is on RB5
  2439                           ;	MCLR Pin Enable bit
  2440                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2441  300005                     	org	3145733
  2442  300005  BF                 	db	191
  2443                           
  2444                           ;Config register CONFIG4L @ 0x300006
  2445                           ;	Stack Full/Underflow Reset Enable bit
  2446                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2447                           ;	Single-Supply ICSP Enable bit
  2448                           ;	LVP = OFF, Single-Supply ICSP disabled
  2449                           ;	Extended Instruction Set Enable bit
  2450                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2451                           ;	Background Debug
  2452                           ;	DEBUG = OFF, Disabled
  2453  300006                     	org	3145734
  2454  300006  81                 	db	129
  2455                           
  2456                           ; Padding undefined space
  2457  300007                     	org	3145735
  2458  300007  FF                 	db	255
  2459                           
  2460                           ;Config register CONFIG5L @ 0x300008
  2461                           ;	Code Protection Block 0
  2462                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2463                           ;	Code Protection Block 1
  2464                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2465                           ;	Code Protection Block 2
  2466                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2467                           ;	Code Protection Block 3
  2468                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2469  300008                     	org	3145736
  2470  300008  0F                 	db	15
  2471                           
  2472                           ;Config register CONFIG5H @ 0x300009
  2473                           ;	Boot Block Code Protection bit
  2474                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2475                           ;	Data EEPROM Code Protection bit
  2476                           ;	CPD = OFF, Data EEPROM not code-protected
  2477  300009                     	org	3145737
  2478  300009  C0                 	db	192
  2479                           
  2480                           ;Config register CONFIG6L @ 0x30000A
  2481                           ;	Write Protection Block 0
  2482                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2483                           ;	Write Protection Block 1
  2484                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2485                           ;	Write Protection Block 2
  2486                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2487                           ;	Write Protection Block 3
  2488                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2489  30000A                     	org	3145738
  2490  30000A  0F                 	db	15
  2491                           
  2492                           ;Config register CONFIG6H @ 0x30000B
  2493                           ;	Configuration Register Write Protection bit
  2494                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2495                           ;	Boot Block Write Protection bit
  2496                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2497                           ;	Data EEPROM Write Protection bit
  2498                           ;	WRTD = OFF, Data EEPROM not write-protected
  2499  30000B                     	org	3145739
  2500  30000B  E0                 	db	224
  2501                           
  2502                           ;Config register CONFIG7L @ 0x30000C
  2503                           ;	Table Read Protection Block 0
  2504                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2505                           ;	Table Read Protection Block 1
  2506                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2507                           ;	Table Read Protection Block 2
  2508                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2509                           ;	Table Read Protection Block 3
  2510                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2511  30000C                     	org	3145740
  2512  30000C  0F                 	db	15
  2513                           
  2514                           ;Config register CONFIG7H @ 0x30000D
  2515                           ;	Boot Block Table Read Protection bit
  2516                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2517  30000D                     	org	3145741
  2518  30000D  40                 	db	64
  2519                           tosu	equ	0xFFF
  2520                           tosh	equ	0xFFE
  2521                           tosl	equ	0xFFD
  2522                           stkptr	equ	0xFFC
  2523                           pclatu	equ	0xFFB
  2524                           pclath	equ	0xFFA
  2525                           pcl	equ	0xFF9
  2526                           tblptru	equ	0xFF8
  2527                           tblptrh	equ	0xFF7
  2528                           tblptrl	equ	0xFF6
  2529                           tablat	equ	0xFF5
  2530                           prodh	equ	0xFF4
  2531                           prodl	equ	0xFF3
  2532                           indf0	equ	0xFEF
  2533                           postinc0	equ	0xFEE
  2534                           postdec0	equ	0xFED
  2535                           preinc0	equ	0xFEC
  2536                           plusw0	equ	0xFEB
  2537                           fsr0h	equ	0xFEA
  2538                           fsr0l	equ	0xFE9
  2539                           wreg	equ	0xFE8
  2540                           indf1	equ	0xFE7
  2541                           postinc1	equ	0xFE6
  2542                           postdec1	equ	0xFE5
  2543                           preinc1	equ	0xFE4
  2544                           plusw1	equ	0xFE3
  2545                           fsr1h	equ	0xFE2
  2546                           fsr1l	equ	0xFE1
  2547                           bsr	equ	0xFE0
  2548                           indf2	equ	0xFDF
  2549                           postinc2	equ	0xFDE
  2550                           postdec2	equ	0xFDD
  2551                           preinc2	equ	0xFDC
  2552                           plusw2	equ	0xFDB
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_I2C
    _MCP23008_Initialise->_I2C_send_data
    _I2C->_I2C_send_data
    _I2C_send_data->_IdleI2C
    _I2C_send_data->_StartI2C
    _I2C_send_data->_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5744
                                              6 COMRAM     2     2      0
                                _I2C
                     _I2C_Initialise
                          _IsBumperL
                          _IsBumperR
                            _IsOptoL
                            _IsOptoR
                _MCP23008_Initialise
                  _SYSTEM_Initialize
                        _adcFunction
                         _diagnostic
                       _leftPosition
                          _motor_fwd
                      _rightPosition
 ---------------------------------------------------------------------------------
 (1) _rightPosition                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motor_fwd                                            3     1      2    2846
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _leftPosition                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _diagnostic                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adcFunction                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP23008_Initialise                                  0     0      0    1449
                      _I2C_send_data
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (1) _IsOptoR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C                                                  2     2      0    1449
                                              4 COMRAM     2     2      0
                      _I2C_send_data
 ---------------------------------------------------------------------------------
 (2) _I2C_send_data                                        3     1      2    1449
                                              1 COMRAM     3     1      2
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
   _I2C_Initialise
   _IsBumperL
   _IsBumperR
   _IsOptoL
   _IsOptoR
   _MCP23008_Initialise
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
     _IdleI2C
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
   _adcFunction
   _diagnostic
   _leftPosition
   _motor_fwd
   _rightPosition

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      20       1       33.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20       9        0.0%
DATA                 0      0      20      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Dec 13 14:59:05 2020

                             l21 79E8                               l24 7908  
                             l51 7B1A                               l67 7916  
                             u10 7A88                               u11 7A84  
                             u20 7A96                               u21 7A92  
                             u30 7AD4                               u31 7AD0  
                             u40 7AEA                               u41 7AE6  
                             u50 798A                               u51 7986  
                             u60 7C9A                               u61 7C94  
                             u70 7CBE                               u71 7CB8  
                             u80 7CFC                               u81 7CF6  
                             u90 7D20                               u66 7C9C  
                             u91 7D1A                               u76 7CC0  
                             u86 7CFE                               u96 7D22  
                            l103 7A08                              l123 7A28  
                            l300 7CAE                              l311 7B50  
                            l320 7AC0                              l145 79B6  
                            l314 79A0                              l306 7D36  
                            l331 7AEA                              _I2C 7BE0  
                            l332 7AEC                              l341 78FA  
                            l317 7BDE                              l309 7B42  
                            l261 7DFA                              l326 7A96  
                            l350 7A4C                              l254 7E7E  
                            l335 797C                              l263 7DFC  
                            l344 7C88                              l329 7AC6  
                            l353 79BA                              l281 7F58  
                            l265 7E32                              l338 798A  
                            l362 794C                              l258 7DEC  
                            l355 79C8                              l347 7A70  
                            l283 7F5A                              l356 79CE  
                            l365 7960                              l285 7F90  
                            l269 7E60                              l278 7F4A  
                            l359 7938                              l368 7974  
                            l289 7FBE                              l298 7C8A  
                            u200 7936                              u201 7930  
                            u210 7938                              u130 79C8  
                            u131 79C4                              u140 7972  
                            u141 796C                              u150 7974  
                            u160 795E                              u400 7D98  
                            u161 7958                              u401 7D94  
                            u170 7960                              u410 7DCC  
                            u411 7DC8                              u180 794A  
                            u420 7DFA                              u181 7944  
                            u421 7DF6                              u190 794C  
                            u430 7E60                              _PR2 000FBB  
                            u431 7E5C                              u360 7B30  
                            u440 7E9A                              u361 7B2C  
                            u441 7E96                              u450 7EF6  
                            u451 7EF2                              u507 7E08  
                            u460 7F2A                              u461 7F26  
                            u517 7E38                              u470 7F58  
                            u390 7D84                              u607 7CDE  
                            u375 7B3C                              u471 7F54  
                            u527 7E70                              u391 7D80  
                            u376 7B3E                              u480 7FBE  
                            u617 7BF8                              u385 7B4E  
                            u481 7FBA                              u537 7F66  
                            u386 7B50                              u490 7FF8  
                            u627 7C28                              u491 7FF4  
                            u547 7F96                              u637 7C4C  
                            u557 7FCE                              u647 7C7C  
                            u567 7A56                              u577 7A66  
                            u587 7A32                              u597 7A42  
                            _Lit 0011                  _TMR2_Initialize 790A  
                            wreg 000FE8         __end_of_EPWM2_Initialize 7A2A  
                           ?_I2C 0019                             l1101 7CEC  
                           l1111 7962                             l1103 7D10  
                           l1051 7A88                             l1115 794E  
                           l1053 7AC2                             l1301 7B88  
                           l1061 7AEE                             l1109 79B8  
                           l1133 7A2A                             l1047 7A72  
                           l1055 7AD4                             l1311 7C04  
                           l1063 7B18                             l1071 790C  
                           l1135 7A2C                             l1303 7B1E  
                           l1143 7A4E                             l1049 7A72  
                           l1057 7978                             l1313 7C1E  
                           l1065 78FC                             l1073 7910  
                           l1137 7A3A                             l1305 7B30  
                           l1145 7A50                             l1401 7FDC  
                           l1321 7D38                             l1059 78F8  
                           l1315 7C34                             l1307 7BE0  
                           l1139 793A                             l1067 79EA  
                           l1075 7A0A                             l1091 79D0  
                           l1147 7A5E                             l1403 7FDE  
                           l1331 7D64                             l1323 7D40  
                           l1317 7C42                             l1309 7BEE  
                           l1093 798C                             l1149 7926  
                           l1077 79A2                             l1069 790A  
                           l1405 7FE6                             l1341 7DB8  
                           l1333 7D68                             l1325 7D44  
                           l1319 7C58                             l1351 7E24  
                           l1343 7DCC                             l1335 7D84  
                           l1327 7D48                             l1097 7C8A  
                           l1361 7E66                             l1353 7E40  
                           l1337 7D98                             l1329 7D56  
                           l1291 7A9E                             l1099 7CD4  
                           l1371 7EC6                             l1363 7E7C  
                           l1347 7DFE                             l1355 7E48  
                           l1293 7AA4                             l1381 7F2A  
                           l1373 7EE2                             l1365 7E9A  
                           l1357 7E4C                             l1349 7E16  
                           l1295 7AAE                             l1391 7F9E  
                           l1375 7EF6                             l1367 7EB6  
                           l1359 7E62                             l1297 7AB2  
                           l1289 7A9A                             l1385 7F5C  
                           l1393 7FA6                             l1369 7EBA  
                           l1299 7ABC                             l1395 7FAA  
                           l1387 7F74                             l1379 7F16  
                           l1397 7FC0                             l1389 7F82  
                           l1399 7FC4                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _TMR2 000FBC                             _WPUB 000F61  
                           _main 7D38                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           start 0000                  __end_of_IdleI2C 7A98  
                   ___param_bank 000000                  __end_of_IsOptoL 7962  
                __end_of_IsOptoR 7976                            ??_I2C 001D  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 790A  
                __end_of_StopI2C 78FC                            ?_main 0019  
                  ?_leftPosition 0019                            _T2CON 000FBA  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _UnLit 0013  
                          tablat 000FF5                            status 000FD8  
                __initialization 7B52                     __end_of_main 8000  
        __end_of_TMR2_Initialize 7918                   ??_leftPosition 0019  
                         ??_main 001F                    __activetblptr 000002  
             __size_of_IsBumperL 0014               __size_of_IsBumperR 0014  
               __end_of_StartI2C 7AEE                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR1H 000FBF                           _CCPR2H 000F68  
                         _CCPR1L 000FBE                           _CCPR2L 000F67  
               __end_of_WriteI2C 798C                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                         _LDRVAL 000D                        ??_IdleI2C 0019  
                         _OSCCON 000FD3            __end_of_rightPosition 7A72  
                      ??_IsOptoL 0019                        ??_IsOptoR 0019  
                   _CCPTMRS0bits 000F49                        ??_StopI2C 0019  
                         _digits 0001                           clear_0 7B78  
        __size_of_I2C_Initialise 0016                     WriteI2C@data 0019  
                   __pdataCOMRAM 0001                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
              _SYSTEM_Initialize 79D0                       __accesstop 0060  
        __end_of__initialization 7B7E               ?_SYSTEM_Initialize 0019  
                  ___rparam_used 000001           __size_of_I2C_send_data 002A  
              __end_of_IsBumperL 793A                __end_of_IsBumperR 794E  
              ?_EPWM1_Initialize 0019                   __pcstackCOMRAM 0019  
            ??_SYSTEM_Initialize 0019               ??_EPWM1_Initialize 0019  
               ?_TMR2_Initialize 0019                ?_EPWM2_Initialize 0019  
                  ??_adcFunction 0019        __end_of_SYSTEM_Initialize 79EA  
             ??_EPWM2_Initialize 0019             __end_of_leftPosition 7A4E  
   __size_of_MCP23008_Initialise 0058                       _diagnostic 7C8A  
    I2C_send_data@device_address 001C                        ?_StartI2C 0019  
                        _CCP1CON 000FBD                          _CCP2CON 000F66  
                        _ECCP1AS 000FB6                          _ECCP2AS 000F64  
                      ?_WriteI2C 0019          __size_of_ADC_Initialize 0016  
             __size_of_motor_fwd 0036                    _I2C_send_data 7A98  
                        _OSCCON2 000FD2    I2C_send_data@register_address 001A  
                        _OSCTUNE 000F9B                          _PWM1CON 000FB7  
                        _PWM2CON 000F65                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _IdleI2C 7A72  
                        _IsOptoL 794E                          _IsOptoR 7962  
            __end_of_adcFunction 79D0             _ADC_InterruptHandler 0017  
                        __Hparam 0000                          __Lparam 0000  
                        _StopI2C 78F8                       ??_StartI2C 0019  
                        __pcinit 7B52                       ??_WriteI2C 0019  
                 _I2C_Initialise 798C                          __ramtop 0600  
                        __ptext0 7D38                          __ptext1 7A4E  
                        __ptext2 7B1C                          __ptext3 7A2A  
                        __ptext4 7C8A                          __ptext5 79B8  
                        __ptext6 79D0                          __ptext7 790A  
                        __ptext8 7AEE                          __ptext9 78FC  
                   __size_of_I2C 00AA                   ?_I2C_send_data 001A  
          _OSCILLATOR_Initialize 78FC                        _T2CONbits 000FBA  
       ??_PIN_MANAGER_Initialize 0019       __size_of_SYSTEM_Initialize 001A  
           end_of_initialization 7B7E                    __Lmediumconst 0000  
              __end_of_motor_fwd 7B52                      ?_diagnostic 0019  
                        postdec1 000FE5                          postinc0 000FEE  
         __end_of_I2C_Initialise 79A2                        _PORTAbits 000F80  
                      _PORTBbits 000F81            __size_of_leftPosition 0024  
                    _adcFunction 79B8                  ?_I2C_Initialise 0019  
                      _IsBumperL 7926                        _IsBumperR 793A  
                  __pidataCOMRAM 7918                  ??_I2C_send_data 001C  
                 _ADC_Initialize 79A2           ?_OSCILLATOR_Initialize 0019  
                   _leftPosition 7A2A           __size_of_rightPosition 0024  
            start_initialization 7B52              _MCP23008_Initialise 7B88  
      __size_of_EPWM1_Initialize 0020                      __end_of_I2C 7C8A  
__size_of_PIN_MANAGER_Initialize 002E              __size_of_diagnostic 00AE  
           ?_MCP23008_Initialise 0019        __size_of_EPWM2_Initialize 0020  
         __end_of_ADC_Initialize 79B8                       ?_IsBumperL 0019  
                     ?_IsBumperR 0019                __size_of_StartI2C 002C  
              __size_of_WriteI2C 0016                      __pbssCOMRAM 000F  
                      _adcResult 0015         __size_of_TMR2_Initialize 000E  
                       ?_IdleI2C 0019                         ?_IsOptoL 0019  
                       ?_IsOptoR 0019                    _rightPosition 7A4E  
          ??_MCP23008_Initialise 001D           _PIN_MANAGER_Initialize 7AEE  
                       ?_StopI2C 0019                  ?_ADC_Initialize 0019  
                       _LATCbits 000F8B                   ?_rightPosition 0019  
                   ??_diagnostic 0019                         _PIR1bits 000F9E  
                      _motor_fwd 7B1C                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                         _SSP1CON3 000FCB  
                       _PSTR1CON 000FB9                         _PSTR2CON 000F63  
                       _SSP1STAT 000FC7                      ??_IsBumperL 0019  
                    ??_IsBumperR 0019                       _ADCON0bits 000FC2  
               _EPWM1_Initialize 79EA               __end_of_diagnostic 7D38  
                    _INTCON2bits 000FF1                     ?_adcFunction 0019  
                      copy_data0 7B66                ??_TMR2_Initialize 0019  
               __size_of_IdleI2C 0026                 ??_I2C_Initialise 0019  
               __size_of_IsOptoL 0014                 __size_of_IsOptoR 0014  
                       __Hrparam 0000                 _EPWM2_Initialize 7A0A  
                       __Lrparam 0000                       ?_motor_fwd 0019  
                       _StartI2C 7AC2                 __size_of_StopI2C 0004  
        ??_OSCILLATOR_Initialize 0019                         _WriteI2C 7976  
                       __ptext10 7A0A                         __ptext11 79EA  
                       __ptext20 7A98                         __ptext12 79A2  
                       __ptext21 7976                         __ptext13 7B88  
                       __ptext22 78F8                         __ptext14 7962  
                       __ptext23 7AC2                         __ptext15 794E  
                       __ptext24 7A72                         __ptext16 793A  
                       __ptext17 7926                         __ptext18 798C  
                       __ptext19 7BE0                     _SSP1CON2bits 000FC5  
                ??_rightPosition 0019                    __size_of_main 02C8  
                   _SSP1STATbits 000FC7                    motor_fwd@STAT 001A  
          __end_of_I2C_send_data 7AC2                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 0019                 ??_ADC_Initialize 0019  
                    ??_motor_fwd 001B                     motor_fwd@dir 001B  
                   motor_fwd@spd 0019                   _positionHolder 000F  
     I2C_send_data@register_data 001B      __end_of_MCP23008_Initialise 7BE0  
 __end_of_PIN_MANAGER_Initialize 7B1C             __size_of_adcFunction 0018  
       __end_of_EPWM1_Initialize 7A0A  
