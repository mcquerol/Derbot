

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Nov 28 22:20:44 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 05/05/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F25K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  00794A                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _digits
    80  00794A  3F                 	db	63
    81  00794B  06                 	db	6
    82  00794C  5B                 	db	91
    83  00794D  4F                 	db	79
    84  00794E  66                 	db	102
    85  00794F  6D                 	db	109
    86  007950  7D                 	db	125
    87  007951  07                 	db	7
    88  007952  7F                 	db	127
    89  007953  67                 	db	103
    90  007954  3E                 	db	62
    91  007955  38                 	db	56
    92                           
    93                           ;initializer for _debounceTime
    94  007956  0032               	dw	50
    95                           
    96                           ;initializer for _LDRVAL
    97  007958  003C               	dw	60
    98  0000                     _CCPTMRS0bits	set	3913
    99  0000                     _ANSELA	set	3896
   100  0000                     _ANSELB	set	3897
   101  0000                     _ANSELC	set	3898
   102  0000                     _SSP1STATbits	set	4039
   103  0000                     _SSP1BUF	set	4041
   104  0000                     _SSP1CON2bits	set	4037
   105  0000                     _SSP1ADD	set	4040
   106  0000                     _SSP1CON3	set	4043
   107  0000                     _SSP1CON2	set	4037
   108  0000                     _SSP1CON1	set	4038
   109  0000                     _SSP1STAT	set	4039
   110  0000                     _PORTAbits	set	3968
   111  0000                     _LATCbits	set	3979
   112  0000                     _PORTBbits	set	3969
   113  0000                     _ADCON0bits	set	4034
   114  0000                     _ADCON0	set	4034
   115  0000                     _ADRESH	set	4036
   116  0000                     _ADRESL	set	4035
   117  0000                     _ADCON2	set	4032
   118  0000                     _ADCON1	set	4033
   119  0000                     _CCPR2L	set	3943
   120  0000                     _CCPR2H	set	3944
   121  0000                     _PSTR2CON	set	3939
   122  0000                     _PWM2CON	set	3941
   123  0000                     _ECCP2AS	set	3940
   124  0000                     _CCP2CON	set	3942
   125  0000                     _CCPR1L	set	4030
   126  0000                     _CCPR1H	set	4031
   127  0000                     _PSTR1CON	set	4025
   128  0000                     _PWM1CON	set	4023
   129  0000                     _ECCP1AS	set	4022
   130  0000                     _CCP1CON	set	4029
   131  0000                     _T2CONbits	set	4026
   132  0000                     _T2CON	set	4026
   133  0000                     _PIR1bits	set	3998
   134  0000                     _TMR2	set	4028
   135  0000                     _PR2	set	4027
   136  0000                     _INTCONbits	set	4082
   137  0000                     _INTCON2bits	set	4081
   138  0000                     _WPUB	set	3937
   139  0000                     _TRISC	set	3988
   140  0000                     _TRISB	set	3987
   141  0000                     _TRISA	set	3986
   142  0000                     _LATC	set	3979
   143  0000                     _LATB	set	3978
   144  0000                     _LATA	set	3977
   145  0000                     _OSCTUNE	set	3995
   146  0000                     _OSCCON2	set	4050
   147  0000                     _OSCCON	set	4051
   148                           
   149                           ; #config settings
   150                           
   151                           	psect	cinit
   152  007B98                     __pcinit:
   153                           	callstack 0
   154  007B98                     start_initialization:
   155                           	callstack 0
   156  007B98                     __initialization:
   157                           	callstack 0
   158                           
   159                           ; Initialize objects allocated to COMRAM (16 bytes)
   160                           ; load TBLPTR registers with __pidataCOMRAM
   161  007B98  0E4A               	movlw	low __pidataCOMRAM
   162  007B9A  6EF6               	movwf	tblptrl,c
   163  007B9C  0E79               	movlw	high __pidataCOMRAM
   164  007B9E  6EF7               	movwf	tblptrh,c
   165  007BA0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   166  007BA2  6EF8               	movwf	tblptru,c
   167  007BA4  EE00  F013         	lfsr	0,__pdataCOMRAM
   168  007BA8  EE10 F010          	lfsr	1,16
   169  007BAC                     copy_data0:
   170  007BAC  0009               	tblrd		*+
   171  007BAE  CFF5 FFEE          	movff	tablat,postinc0
   172  007BB2  50E5               	movf	postdec1,w,c
   173  007BB4  50E1               	movf	fsr1l,w,c
   174  007BB6  E1FA               	bnz	copy_data0
   175                           
   176                           ; Clear objects allocated to COMRAM (18 bytes)
   177  007BB8  EE00  F001         	lfsr	0,__pbssCOMRAM
   178  007BBC  0E12               	movlw	18
   179  007BBE                     clear_0:
   180  007BBE  6AEE               	clrf	postinc0,c
   181  007BC0  06E8               	decf	wreg,f,c
   182  007BC2  E1FD               	bnz	clear_0
   183  007BC4                     end_of_initialization:
   184                           	callstack 0
   185  007BC4                     __end_of__initialization:
   186                           	callstack 0
   187  007BC4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   188  007BC6  6EF8               	movwf	tblptru,c
   189  007BC8  0100               	movlb	0
   190  007BCA  EFBF  F03E         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMRAM
   193  000001                     __pbssCOMRAM:
   194                           	callstack 0
   195  000001                     _time:
   196                           	callstack 0
   197  000001                     	ds	4
   198  000005                     _positionHolder:
   199                           	callstack 0
   200  000005                     	ds	2
   201  000007                     _Lit:
   202                           	callstack 0
   203  000007                     	ds	2
   204  000009                     _UnLit:
   205                           	callstack 0
   206  000009                     	ds	2
   207  00000B                     _time1:
   208                           	callstack 0
   209  00000B                     	ds	2
   210  00000D                     _intialResult:
   211                           	callstack 0
   212  00000D                     	ds	2
   213  00000F                     _adcResult:
   214                           	callstack 0
   215  00000F                     	ds	2
   216  000011                     _ADC_InterruptHandler:
   217                           	callstack 0
   218  000011                     	ds	2
   219                           
   220                           	psect	dataCOMRAM
   221  000013                     __pdataCOMRAM:
   222                           	callstack 0
   223  000013                     _digits:
   224                           	callstack 0
   225  000013                     	ds	12
   226  00001F                     _debounceTime:
   227                           	callstack 0
   228  00001F                     	ds	2
   229  000021                     _LDRVAL:
   230                           	callstack 0
   231  000021                     	ds	2
   232                           
   233                           	psect	cstackCOMRAM
   234  000023                     __pcstackCOMRAM:
   235                           	callstack 0
   236  000023                     ??_diagnostic:
   237  000023                     ??_leftPosition:
   238  000023                     ??_rightPosition:
   239  000023                     ??_IdleI2C:
   240  000023                     ??_StartI2C:
   241  000023                     motor_fwd@spd:
   242                           	callstack 0
   243  000023                     WriteI2C@data:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x0
   247  000023                     	ds	1
   248  000024                     motor_fwd@STAT:
   249                           	callstack 0
   250  000024                     I2C_send_data@register_address:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x1
   254  000024                     	ds	1
   255  000025                     motor_fwd@dir:
   256                           	callstack 0
   257  000025                     I2C_send_data@register_data:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x2
   261  000025                     	ds	1
   262  000026                     I2C_send_data@device_address:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x3
   266  000026                     	ds	1
   267  000027                     ??_I2C:
   268                           
   269                           ; 1 bytes @ 0x4
   270  000027                     	ds	2
   271  000029                     ??_main:
   272                           
   273                           ; 1 bytes @ 0x6
   274  000029                     	ds	2
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 66 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   295 ;;      Params:         0       0       0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0
   297 ;;      Temps:          2       0       0       0       0       0       0
   298 ;;      Totals:         2       0       0       0       0       0       0
   299 ;;Total ram usage:        2 bytes
   300 ;; Hardware stack levels required when called:    3
   301 ;; This function calls:
   302 ;;		_I2C
   303 ;;		_I2C_Initialise
   304 ;;		_IsBumperL
   305 ;;		_IsBumperR
   306 ;;		_IsOptoL
   307 ;;		_IsOptoR
   308 ;;		_MCP23008_Initialise
   309 ;;		_SYSTEM_Initialize
   310 ;;		_adcFunction
   311 ;;		_diagnostic
   312 ;;		_leftPosition
   313 ;;		_motor_fwd
   314 ;;		_rightPosition
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text0
   321  007D7E                     __ptext0:
   322                           	callstack 0
   323  007D7E                     _main:
   324                           	callstack 28
   325  007D7E                     
   326                           ;main.c: 69:     SYSTEM_Initialize();
   327  007D7E  ECF6  F03C         	call	_SYSTEM_Initialize	;wreg free
   328                           
   329                           ;main.c: 70:     I2C_Initialise();
   330  007D82  ECE0  F03C         	call	_I2C_Initialise	;wreg free
   331  007D86                     
   332                           ;main.c: 71:     MCP23008_Initialise();
   333  007D86  ECE7  F03D         	call	_MCP23008_Initialise	;wreg free
   334  007D8A                     
   335                           ;main.c: 72:     diagnostic();
   336  007D8A  EC68  F03E         	call	_diagnostic	;wreg free
   337  007D8E                     l1329:
   338                           
   339                           ;main.c: 75:     {;main.c: 77:         motor_fwd('L', 255, 1);
   340  007D8E  0EFF               	movlw	255
   341  007D90  6E23               	movwf	motor_fwd@spd^0,c
   342  007D92  0E01               	movlw	1
   343  007D94  6E24               	movwf	motor_fwd@STAT^0,c
   344  007D96  0E4C               	movlw	76
   345  007D98  ECB1  F03D         	call	_motor_fwd
   346  007D9C                     
   347                           ;main.c: 78:         motor_fwd('R', 250, 1);
   348  007D9C  0EFA               	movlw	250
   349  007D9E  6E23               	movwf	motor_fwd@spd^0,c
   350  007DA0  0E01               	movlw	1
   351  007DA2  6E24               	movwf	motor_fwd@STAT^0,c
   352  007DA4  0E52               	movlw	82
   353  007DA6  ECB1  F03D         	call	_motor_fwd
   354  007DAA                     
   355                           ;main.c: 80:         adcFunction();
   356  007DAA  EC23  F03D         	call	_adcFunction	;wreg free
   357  007DAE                     
   358                           ;main.c: 83:         if (adcResult > LDRVAL)
   359  007DAE  BE10               	btfsc	(_adcResult+1)^0,7,c
   360  007DB0  EFE3  F03E         	goto	u391
   361  007DB4  5010               	movf	(_adcResult+1)^0,w,c
   362  007DB6  E109               	bnz	u390
   363  007DB8  0E3D               	movlw	61
   364  007DBA  5C0F               	subwf	_adcResult^0,w,c
   365  007DBC  A0D8               	btfss	status,0,c
   366  007DBE  EFE3  F03E         	goto	u391
   367  007DC2  EFE5  F03E         	goto	u390
   368  007DC6                     u391:
   369  007DC6  EF62  F03F         	goto	l262
   370  007DCA                     u390:
   371  007DCA                     
   372                           ;main.c: 84:         {;main.c: 85:             if (IsOptoR())
   373  007DCA  ECCB  F03C         	call	_IsOptoR	;wreg free
   374  007DCE  0900               	iorlw	0
   375  007DD0  B4D8               	btfsc	status,2,c
   376  007DD2  EFED  F03E         	goto	u401
   377  007DD6  EFEF  F03E         	goto	u400
   378  007DDA                     u401:
   379  007DDA  EFFF  F03E         	goto	l1343
   380  007DDE                     u400:
   381  007DDE                     
   382                           ;main.c: 86:             {;main.c: 87:                 motor_fwd('L', 250, 1);
   383  007DDE  0EFA               	movlw	250
   384  007DE0  6E23               	movwf	motor_fwd@spd^0,c
   385  007DE2  0E01               	movlw	1
   386  007DE4  6E24               	movwf	motor_fwd@STAT^0,c
   387  007DE6  0E4C               	movlw	76
   388  007DE8  ECB1  F03D         	call	_motor_fwd
   389                           
   390                           ;main.c: 88:                 motor_fwd('R', 105, 1);
   391  007DEC  0E69               	movlw	105
   392  007DEE  6E23               	movwf	motor_fwd@spd^0,c
   393  007DF0  0E01               	movlw	1
   394  007DF2  6E24               	movwf	motor_fwd@STAT^0,c
   395  007DF4  0E52               	movlw	82
   396  007DF6  ECB1  F03D         	call	_motor_fwd
   397                           
   398                           ;main.c: 89:                 continue;
   399  007DFA  EFC7  F03E         	goto	l1329
   400  007DFE                     l1343:
   401  007DFE  ECC1  F03C         	call	_IsOptoL	;wreg free
   402  007E02  0900               	iorlw	0
   403  007E04  B4D8               	btfsc	status,2,c
   404  007E06  EF07  F03F         	goto	u411
   405  007E0A  EF09  F03F         	goto	u410
   406  007E0E                     u411:
   407  007E0E  EF19  F03F         	goto	l266
   408  007E12                     u410:
   409  007E12                     
   410                           ;main.c: 92:             {;main.c: 93:                 motor_fwd('L', 105, 1);
   411  007E12  0E69               	movlw	105
   412  007E14  6E23               	movwf	motor_fwd@spd^0,c
   413  007E16  0E01               	movlw	1
   414  007E18  6E24               	movwf	motor_fwd@STAT^0,c
   415  007E1A  0E4C               	movlw	76
   416  007E1C  ECB1  F03D         	call	_motor_fwd
   417                           
   418                           ;main.c: 94:                 motor_fwd('R', 250, 1);
   419  007E20  0EFA               	movlw	250
   420  007E22  6E23               	movwf	motor_fwd@spd^0,c
   421  007E24  0E01               	movlw	1
   422  007E26  6E24               	movwf	motor_fwd@STAT^0,c
   423  007E28  0E52               	movlw	82
   424  007E2A  ECB1  F03D         	call	_motor_fwd
   425                           
   426                           ;main.c: 95:                 continue;
   427  007E2E  EFC7  F03E         	goto	l1329
   428  007E32                     l266:
   429  007E32  B081               	btfsc	129,0,c	;volatile
   430  007E34  EF1E  F03F         	goto	u421
   431  007E38  EF20  F03F         	goto	u420
   432  007E3C                     u421:
   433  007E3C  EF47  F03F         	goto	l1357
   434  007E40                     u420:
   435  007E40  8A8B               	bsf	139,5,c	;volatile
   436  007E42  8C8B               	bsf	139,6,c	;volatile
   437  007E44                     
   438                           ;main.c: 102:                 _delay((unsigned long)((450)*(4000000/4000.0)));
   439  007E44  0E03               	movlw	3
   440  007E46  6E2A               	movwf	(??_main+1)^0,c
   441  007E48  0E49               	movlw	73
   442  007E4A  6E29               	movwf	??_main^0,c
   443  007E4C  0E66               	movlw	102
   444  007E4E                     u507:
   445  007E4E  2EE8               	decfsz	wreg,f,c
   446  007E50  D7FE               	bra	u507
   447  007E52  2E29               	decfsz	??_main^0,f,c
   448  007E54  D7FC               	bra	u507
   449  007E56  2E2A               	decfsz	(??_main+1)^0,f,c
   450  007E58  D7FA               	bra	u507
   451  007E5A  D000               	nop2	
   452  007E5C                     
   453                           ;main.c: 103:                 motor_fwd('L', 255, 0);
   454  007E5C  0EFF               	movlw	255
   455  007E5E  6E23               	movwf	motor_fwd@spd^0,c
   456  007E60  0E00               	movlw	0
   457  007E62  6E24               	movwf	motor_fwd@STAT^0,c
   458  007E64  0E4C               	movlw	76
   459  007E66  ECB1  F03D         	call	_motor_fwd
   460  007E6A                     
   461                           ;main.c: 104:                 motor_fwd('R', 255, 0);
   462  007E6A  0EFF               	movlw	255
   463  007E6C  6E23               	movwf	motor_fwd@spd^0,c
   464  007E6E  0E00               	movlw	0
   465  007E70  6E24               	movwf	motor_fwd@STAT^0,c
   466  007E72  0E52               	movlw	82
   467  007E74  ECB1  F03D         	call	_motor_fwd
   468  007E78                     l273:
   469                           
   470                           ;main.c: 106:                 {;main.c: 107:                     _delay((unsigned long)(
      +                          (100)*(4000000/4000.0)));
   471  007E78  0E82               	movlw	130
   472  007E7A  6E29               	movwf	??_main^0,c
   473  007E7C  0EDE               	movlw	222
   474  007E7E                     u517:
   475  007E7E  2EE8               	decfsz	wreg,f,c
   476  007E80  D7FE               	bra	u517
   477  007E82  2E29               	decfsz	??_main^0,f,c
   478  007E84  D7FC               	bra	u517
   479  007E86                     
   480                           ;main.c: 108:                     I2C();
   481  007E86  EC13  F03E         	call	_I2C	;wreg free
   482  007E8A  EF3C  F03F         	goto	l273
   483  007E8E                     l1357:
   484                           
   485                           ;main.c: 112:             leftPosition();
   486  007E8E  EC46  F03D         	call	_leftPosition	;wreg free
   487  007E92                     
   488                           ;main.c: 116:             if (IsBumperR())
   489  007E92  ECB7  F03C         	call	_IsBumperR	;wreg free
   490  007E96  0900               	iorlw	0
   491  007E98  B4D8               	btfsc	status,2,c
   492  007E9A  EF51  F03F         	goto	u431
   493  007E9E  EF53  F03F         	goto	u430
   494  007EA2                     u431:
   495  007EA2  EF62  F03F         	goto	l262
   496  007EA6                     u430:
   497  007EA6  8A8B               	bsf	139,5,c	;volatile
   498  007EA8                     
   499                           ;main.c: 120:                 UnLit++;
   500  007EA8  4A09               	infsnz	_UnLit^0,f,c
   501  007EAA  2A0A               	incf	(_UnLit+1)^0,f,c
   502  007EAC                     
   503                           ;main.c: 121:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   504  007EAC  0E06               	movlw	6
   505  007EAE  6E2A               	movwf	(??_main+1)^0,c
   506  007EB0  0E13               	movlw	19
   507  007EB2  6E29               	movwf	??_main^0,c
   508  007EB4  0EAE               	movlw	174
   509  007EB6                     u527:
   510  007EB6  2EE8               	decfsz	wreg,f,c
   511  007EB8  D7FE               	bra	u527
   512  007EBA  2E29               	decfsz	??_main^0,f,c
   513  007EBC  D7FC               	bra	u527
   514  007EBE  2E2A               	decfsz	(??_main+1)^0,f,c
   515  007EC0  D7FA               	bra	u527
   516  007EC2  9A8B               	bcf	139,5,c	;volatile
   517  007EC4                     l262:
   518                           
   519                           ;main.c: 129:         if (adcResult < LDRVAL)
   520  007EC4  BE10               	btfsc	(_adcResult+1)^0,7,c
   521  007EC6  EF70  F03F         	goto	u440
   522  007ECA  5010               	movf	(_adcResult+1)^0,w,c
   523  007ECC  E107               	bnz	u441
   524  007ECE  0E3C               	movlw	60
   525  007ED0  5C0F               	subwf	_adcResult^0,w,c
   526  007ED2  B0D8               	btfsc	status,0,c
   527  007ED4  EF6E  F03F         	goto	u441
   528  007ED8  EF70  F03F         	goto	u440
   529  007EDC                     u441:
   530  007EDC  EFC7  F03E         	goto	l1329
   531  007EE0                     u440:
   532  007EE0                     
   533                           ;main.c: 130:         {;main.c: 131:             positionHolder = 1;
   534  007EE0  0E00               	movlw	0
   535  007EE2  6E06               	movwf	(_positionHolder+1)^0,c
   536  007EE4  0E01               	movlw	1
   537  007EE6  6E05               	movwf	_positionHolder^0,c
   538                           
   539                           ;main.c: 132:             while (positionHolder == 1)
   540  007EE8  EFF3  F03F         	goto	l1399
   541  007EEC                     l1369:
   542                           
   543                           ;main.c: 133:             {;main.c: 135:                 if (IsOptoR())
   544  007EEC  ECCB  F03C         	call	_IsOptoR	;wreg free
   545  007EF0  0900               	iorlw	0
   546  007EF2  B4D8               	btfsc	status,2,c
   547  007EF4  EF7E  F03F         	goto	u451
   548  007EF8  EF80  F03F         	goto	u450
   549  007EFC                     u451:
   550  007EFC  EF8E  F03F         	goto	l1373
   551  007F00                     u450:
   552  007F00                     
   553                           ;main.c: 136:                 {;main.c: 137:                     motor_fwd('L', 250, 1);
   554  007F00  0EFA               	movlw	250
   555  007F02  6E23               	movwf	motor_fwd@spd^0,c
   556  007F04  0E01               	movlw	1
   557  007F06  6E24               	movwf	motor_fwd@STAT^0,c
   558  007F08  0E4C               	movlw	76
   559  007F0A  ECB1  F03D         	call	_motor_fwd
   560                           
   561                           ;main.c: 138:                     motor_fwd('R', 105, 1);
   562  007F0E  0E69               	movlw	105
   563  007F10  6E23               	movwf	motor_fwd@spd^0,c
   564  007F12  0E01               	movlw	1
   565  007F14  6E24               	movwf	motor_fwd@STAT^0,c
   566  007F16  0E52               	movlw	82
   567  007F18  ECB1  F03D         	call	_motor_fwd
   568  007F1C                     l1373:
   569                           
   570                           ;main.c: 141:                 if (IsOptoL())
   571  007F1C  ECC1  F03C         	call	_IsOptoL	;wreg free
   572  007F20  0900               	iorlw	0
   573  007F22  B4D8               	btfsc	status,2,c
   574  007F24  EF96  F03F         	goto	u461
   575  007F28  EF98  F03F         	goto	u460
   576  007F2C                     u461:
   577  007F2C  EFA6  F03F         	goto	l1377
   578  007F30                     u460:
   579  007F30                     
   580                           ;main.c: 142:                 {;main.c: 143:                     motor_fwd('L', 105, 1);
   581  007F30  0E69               	movlw	105
   582  007F32  6E23               	movwf	motor_fwd@spd^0,c
   583  007F34  0E01               	movlw	1
   584  007F36  6E24               	movwf	motor_fwd@STAT^0,c
   585  007F38  0E4C               	movlw	76
   586  007F3A  ECB1  F03D         	call	_motor_fwd
   587                           
   588                           ;main.c: 144:                     motor_fwd('R', 250, 1);
   589  007F3E  0EFA               	movlw	250
   590  007F40  6E23               	movwf	motor_fwd@spd^0,c
   591  007F42  0E01               	movlw	1
   592  007F44  6E24               	movwf	motor_fwd@STAT^0,c
   593  007F46  0E52               	movlw	82
   594  007F48  ECB1  F03D         	call	_motor_fwd
   595  007F4C                     l1377:
   596                           
   597                           ;main.c: 147:                 if (PORTBbits.RB0 == 0)
   598  007F4C  B081               	btfsc	129,0,c	;volatile
   599  007F4E  EFAB  F03F         	goto	u471
   600  007F52  EFAD  F03F         	goto	u470
   601  007F56                     u471:
   602  007F56  EFD4  F03F         	goto	l1387
   603  007F5A                     u470:
   604  007F5A  8A8B               	bsf	139,5,c	;volatile
   605  007F5C  8C8B               	bsf	139,6,c	;volatile
   606  007F5E                     
   607                           ;main.c: 151:                     _delay((unsigned long)((450)*(4000000/4000.0)));
   608  007F5E  0E03               	movlw	3
   609  007F60  6E2A               	movwf	(??_main+1)^0,c
   610  007F62  0E49               	movlw	73
   611  007F64  6E29               	movwf	??_main^0,c
   612  007F66  0E66               	movlw	102
   613  007F68                     u537:
   614  007F68  2EE8               	decfsz	wreg,f,c
   615  007F6A  D7FE               	bra	u537
   616  007F6C  2E29               	decfsz	??_main^0,f,c
   617  007F6E  D7FC               	bra	u537
   618  007F70  2E2A               	decfsz	(??_main+1)^0,f,c
   619  007F72  D7FA               	bra	u537
   620  007F74  D000               	nop2	
   621  007F76                     
   622                           ;main.c: 152:                     motor_fwd('L', 255, 0);
   623  007F76  0EFF               	movlw	255
   624  007F78  6E23               	movwf	motor_fwd@spd^0,c
   625  007F7A  0E00               	movlw	0
   626  007F7C  6E24               	movwf	motor_fwd@STAT^0,c
   627  007F7E  0E4C               	movlw	76
   628  007F80  ECB1  F03D         	call	_motor_fwd
   629  007F84                     
   630                           ;main.c: 153:                     motor_fwd('R', 255, 0);
   631  007F84  0EFF               	movlw	255
   632  007F86  6E23               	movwf	motor_fwd@spd^0,c
   633  007F88  0E00               	movlw	0
   634  007F8A  6E24               	movwf	motor_fwd@STAT^0,c
   635  007F8C  0E52               	movlw	82
   636  007F8E  ECB1  F03D         	call	_motor_fwd
   637  007F92                     l291:
   638                           
   639                           ;main.c: 155:                     {;main.c: 156:                         _delay((unsigne
      +                          d long)((100)*(4000000/4000.0)));
   640  007F92  0E82               	movlw	130
   641  007F94  6E29               	movwf	??_main^0,c
   642  007F96  0EDE               	movlw	222
   643  007F98                     u547:
   644  007F98  2EE8               	decfsz	wreg,f,c
   645  007F9A  D7FE               	bra	u547
   646  007F9C  2E29               	decfsz	??_main^0,f,c
   647  007F9E  D7FC               	bra	u547
   648  007FA0                     
   649                           ;main.c: 157:                         I2C();
   650  007FA0  EC13  F03E         	call	_I2C	;wreg free
   651  007FA4  EFC9  F03F         	goto	l291
   652  007FA8                     l1387:
   653                           
   654                           ;main.c: 161:                 rightPosition();
   655  007FA8  EC6F  F03D         	call	_rightPosition	;wreg free
   656  007FAC                     
   657                           ;main.c: 163:                 if (IsBumperL())
   658  007FAC  ECAD  F03C         	call	_IsBumperL	;wreg free
   659  007FB0  0900               	iorlw	0
   660  007FB2  B4D8               	btfsc	status,2,c
   661  007FB4  EFDE  F03F         	goto	u481
   662  007FB8  EFE0  F03F         	goto	u480
   663  007FBC                     u481:
   664  007FBC  EFF3  F03F         	goto	l1399
   665  007FC0                     u480:
   666  007FC0  8C8B               	bsf	139,6,c	;volatile
   667  007FC2                     
   668                           ;main.c: 166:                     Lit++;
   669  007FC2  4A07               	infsnz	_Lit^0,f,c
   670  007FC4  2A08               	incf	(_Lit+1)^0,f,c
   671  007FC6                     
   672                           ;main.c: 167:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
   673  007FC6  0E06               	movlw	6
   674  007FC8  6E2A               	movwf	(??_main+1)^0,c
   675  007FCA  0E13               	movlw	19
   676  007FCC  6E29               	movwf	??_main^0,c
   677  007FCE  0EAE               	movlw	174
   678  007FD0                     u557:
   679  007FD0  2EE8               	decfsz	wreg,f,c
   680  007FD2  D7FE               	bra	u557
   681  007FD4  2E29               	decfsz	??_main^0,f,c
   682  007FD6  D7FC               	bra	u557
   683  007FD8  2E2A               	decfsz	(??_main+1)^0,f,c
   684  007FDA  D7FA               	bra	u557
   685  007FDC  9C8B               	bcf	139,6,c	;volatile
   686  007FDE                     
   687                           ;main.c: 169:                     positionHolder = 0;
   688  007FDE  0E00               	movlw	0
   689  007FE0  6E06               	movwf	(_positionHolder+1)^0,c
   690  007FE2  0E00               	movlw	0
   691  007FE4  6E05               	movwf	_positionHolder^0,c
   692  007FE6                     l1399:
   693                           
   694                           ;main.c: 132:             while (positionHolder == 1)
   695  007FE6  0405               	decf	_positionHolder^0,w,c
   696  007FE8  1006               	iorwf	(_positionHolder+1)^0,w,c
   697  007FEA  B4D8               	btfsc	status,2,c
   698  007FEC  EFFA  F03F         	goto	u491
   699  007FF0  EFFC  F03F         	goto	u490
   700  007FF4                     u491:
   701  007FF4  EF76  F03F         	goto	l1369
   702  007FF8                     u490:
   703  007FF8  EFC7  F03E         	goto	l1329
   704  007FFC  EF00  F000         	goto	start
   705  008000                     __end_of_main:
   706                           	callstack 0
   707                           
   708 ;; *************** function _rightPosition *****************
   709 ;; Defined at:
   710 ;;		line 278 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   724 ;;      Params:         0       0       0       0       0       0       0
   725 ;;      Locals:         0       0       0       0       0       0       0
   726 ;;      Temps:          1       0       0       0       0       0       0
   727 ;;      Totals:         1       0       0       0       0       0       0
   728 ;;Total ram usage:        1 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; Hardware stack levels required when called:    1
   731 ;; This function calls:
   732 ;;		_adcFunction
   733 ;; This function is called by:
   734 ;;		_main
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text1
   739  007ADE                     __ptext1:
   740                           	callstack 0
   741  007ADE                     _rightPosition:
   742                           	callstack 29
   743  007ADE                     
   744                           ;main.c: 283:     PORTBbits.RB3 = 1;
   745  007ADE  8681               	bsf	129,3,c	;volatile
   746  007AE0                     
   747                           ;main.c: 284:     _delay((unsigned long)((2050)*(4000000/4000000.0)));
   748  007AE0  0E03               	movlw	3
   749  007AE2  6E23               	movwf	??_rightPosition^0,c
   750  007AE4  0EA8               	movlw	168
   751  007AE6                     u567:
   752  007AE6  2EE8               	decfsz	wreg,f,c
   753  007AE8  D7FE               	bra	u567
   754  007AEA  2E23               	decfsz	??_rightPosition^0,f,c
   755  007AEC  D7FC               	bra	u567
   756  007AEE  D000               	nop2	
   757  007AF0                     
   758                           ;main.c: 285:     PORTBbits.RB3 = 0;
   759  007AF0  9681               	bcf	129,3,c	;volatile
   760                           
   761                           ;main.c: 286:     _delay((unsigned long)((19250)*(4000000/4000000.0)));
   762  007AF2  0E19               	movlw	25
   763  007AF4  6E23               	movwf	??_rightPosition^0,c
   764  007AF6  0EFF               	movlw	255
   765  007AF8                     u577:
   766  007AF8  2EE8               	decfsz	wreg,f,c
   767  007AFA  D7FE               	bra	u577
   768  007AFC  2E23               	decfsz	??_rightPosition^0,f,c
   769  007AFE  D7FC               	bra	u577
   770  007B00  F000               	nop	
   771  007B02                     
   772                           ;main.c: 287:     adcFunction();
   773  007B02  EC23  F03D         	call	_adcFunction	;wreg free
   774  007B06  0012               	return		;funcret
   775  007B08                     __end_of_rightPosition:
   776                           	callstack 0
   777                           
   778 ;; *************** function _motor_fwd *****************
   779 ;; Defined at:
   780 ;;		line 186 in file "main.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  dir             1    wreg     unsigned char 
   783 ;;  spd             1    0[COMRAM] unsigned char 
   784 ;;  STAT            1    1[COMRAM] _Bool 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  dir             1    2[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   796 ;;      Params:         2       0       0       0       0       0       0
   797 ;;      Locals:         1       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0
   799 ;;      Totals:         3       0       0       0       0       0       0
   800 ;;Total ram usage:        3 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text2
   810  007B62                     __ptext2:
   811                           	callstack 0
   812  007B62                     _motor_fwd:
   813                           	callstack 30
   814                           
   815                           ;incstack = 0
   816                           ;motor_fwd@dir stored from wreg
   817  007B62  6E25               	movwf	motor_fwd@dir^0,c
   818  007B64                     
   819                           ;main.c: 186: void motor_fwd(unsigned char dir, unsigned char spd, _Bool STAT);main.c: 1
      +                          87: {;main.c: 188:     if (dir == 'L')
   820  007B64  0E4C               	movlw	76
   821  007B66  1825               	xorwf	motor_fwd@dir^0,w,c
   822  007B68  A4D8               	btfss	status,2,c
   823  007B6A  EFB9  F03D         	goto	u361
   824  007B6E  EFBB  F03D         	goto	u360
   825  007B72                     u361:
   826  007B72  EFC4  F03D         	goto	l315
   827  007B76                     u360:
   828  007B76                     
   829                           ;main.c: 189:     {;main.c: 190:         CCPR2L = spd;
   830  007B76  C023  FF67         	movff	motor_fwd@spd,3943	;volatile
   831                           
   832                           ;main.c: 191:         PORTAbits.RA5 = STAT;
   833  007B7A  B024               	btfsc	motor_fwd@STAT^0,0,c
   834  007B7C  D002               	bra	u375
   835  007B7E  9A80               	bcf	128,5,c	;volatile
   836  007B80  D001               	bra	u376
   837  007B82                     u375:
   838  007B82  8A80               	bsf	128,5,c	;volatile
   839  007B84                     u376:
   840                           
   841                           ;main.c: 192:     }
   842  007B84  EFCB  F03D         	goto	l317
   843  007B88                     l315:
   844                           
   845                           ;main.c: 194:     {;main.c: 195:         CCPR1L = spd;
   846  007B88  C023  FFBE         	movff	motor_fwd@spd,4030	;volatile
   847                           
   848                           ;main.c: 196:         PORTAbits.RA2 = STAT;
   849  007B8C  B024               	btfsc	motor_fwd@STAT^0,0,c
   850  007B8E  D002               	bra	u385
   851  007B90  9480               	bcf	128,2,c	;volatile
   852  007B92  D001               	bra	u386
   853  007B94                     u385:
   854  007B94  8480               	bsf	128,2,c	;volatile
   855  007B96                     u386:
   856  007B96                     l317:
   857  007B96  0012               	return		;funcret
   858  007B98                     __end_of_motor_fwd:
   859                           	callstack 0
   860                           
   861 ;; *************** function _leftPosition *****************
   862 ;; Defined at:
   863 ;;		line 293 in file "main.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   877 ;;      Params:         0       0       0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0
   879 ;;      Temps:          1       0       0       0       0       0       0
   880 ;;      Totals:         1       0       0       0       0       0       0
   881 ;;Total ram usage:        1 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    1
   884 ;; This function calls:
   885 ;;		_adcFunction
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text3
   892  007A8C                     __ptext3:
   893                           	callstack 0
   894  007A8C                     _leftPosition:
   895                           	callstack 29
   896  007A8C                     
   897                           ;main.c: 297:     {;main.c: 298:         PORTBbits.RB3 = 1;
   898  007A8C  8681               	bsf	129,3,c	;volatile
   899  007A8E                     
   900                           ;main.c: 299:         _delay((unsigned long)((2350)*(4000000/4000000.0)));
   901  007A8E  0E04               	movlw	4
   902  007A90  6E23               	movwf	??_leftPosition^0,c
   903  007A92  0E0C               	movlw	12
   904  007A94                     u587:
   905  007A94  2EE8               	decfsz	wreg,f,c
   906  007A96  D7FE               	bra	u587
   907  007A98  2E23               	decfsz	??_leftPosition^0,f,c
   908  007A9A  D7FC               	bra	u587
   909  007A9C                     
   910                           ;main.c: 300:         PORTBbits.RB3 = 0;
   911  007A9C  9681               	bcf	129,3,c	;volatile
   912                           
   913                           ;main.c: 301:         _delay((unsigned long)((19250)*(4000000/4000000.0)));
   914  007A9E  0E19               	movlw	25
   915  007AA0  6E23               	movwf	??_leftPosition^0,c
   916  007AA2  0EFF               	movlw	255
   917  007AA4                     u597:
   918  007AA4  2EE8               	decfsz	wreg,f,c
   919  007AA6  D7FE               	bra	u597
   920  007AA8  2E23               	decfsz	??_leftPosition^0,f,c
   921  007AAA  D7FC               	bra	u597
   922  007AAC  F000               	nop	
   923  007AAE                     
   924                           ;main.c: 302:         adcFunction();
   925  007AAE  EC23  F03D         	call	_adcFunction	;wreg free
   926  007AB2  0012               	return		;funcret
   927  007AB4                     __end_of_leftPosition:
   928                           	callstack 0
   929                           
   930 ;; *************** function _adcFunction *****************
   931 ;; Defined at:
   932 ;;		line 311 in file "main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		None
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   946 ;;      Params:         0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0
   949 ;;      Totals:         0       0       0       0       0       0       0
   950 ;;Total ram usage:        0 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_main
   956 ;;		_rightPosition
   957 ;;		_leftPosition
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text4
   962  007A46                     __ptext4:
   963                           	callstack 0
   964  007A46                     _adcFunction:
   965                           	callstack 29
   966  007A46                     
   967                           ;main.c: 313:     _delay((unsigned long)((7)*(4000000/4000000.0)));
   968  007A46  D000               	nop2		;2 cycle nop
   969  007A48  D000               	nop2		;2 cycle nop
   970  007A4A  D000               	nop2		;2 cycle nop
   971  007A4C  F000               	nop	
   972                           
   973                           ;main.c: 314:     ADCON0bits.GO = 1;
   974  007A4E  82C2               	bsf	194,1,c	;volatile
   975  007A50                     l359:
   976                           
   977                           ;main.c: 315:     while (ADCON0bits.GO == 1)
   978  007A50  B2C2               	btfsc	194,1,c	;volatile
   979  007A52  EF2D  F03D         	goto	u61
   980  007A56  EF2F  F03D         	goto	u60
   981  007A5A                     u61:
   982  007A5A  EF28  F03D         	goto	l359
   983  007A5E                     u60:
   984  007A5E                     
   985                           ;main.c: 320:     adcResult = ADRESH;
   986  007A5E  CFC4 F00F          	movff	4036,_adcResult	;volatile
   987  007A62  6A10               	clrf	(_adcResult+1)^0,c
   988  007A64  0012               	return		;funcret
   989  007A66                     __end_of_adcFunction:
   990                           	callstack 0
   991                           
   992 ;; *************** function _diagnostic *****************
   993 ;; Defined at:
   994 ;;		line 177 in file "main.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1008 ;;      Params:         0       0       0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0
  1010 ;;      Temps:          2       0       0       0       0       0       0
  1011 ;;      Totals:         2       0       0       0       0       0       0
  1012 ;;Total ram usage:        2 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text5
  1022  007CD0                     __ptext5:
  1023                           	callstack 0
  1024  007CD0                     _diagnostic:
  1025                           	callstack 30
  1026  007CD0  BA8B               	btfsc	139,5,c	;volatile
  1027  007CD2  EF6D  F03E         	goto	u71
  1028  007CD6  EF70  F03E         	goto	u70
  1029  007CDA                     u71:
  1030  007CDA  0E01               	movlw	1
  1031  007CDC  EF71  F03E         	goto	u76
  1032  007CE0                     u70:
  1033  007CE0  0E00               	movlw	0
  1034  007CE2                     u76:
  1035  007CE2  0AFF               	xorlw	255
  1036  007CE4  6E23               	movwf	??_diagnostic^0,c
  1037  007CE6  3A23               	swapf	??_diagnostic^0,f,c
  1038  007CE8  4623               	rlncf	??_diagnostic^0,f,c
  1039  007CEA  508B               	movf	139,w,c	;volatile
  1040  007CEC  1823               	xorwf	??_diagnostic^0,w,c
  1041  007CEE  0BDF               	andlw	-33
  1042  007CF0  1823               	xorwf	??_diagnostic^0,w,c
  1043  007CF2  6E8B               	movwf	139,c	;volatile
  1044  007CF4  BC8B               	btfsc	139,6,c	;volatile
  1045  007CF6  EF7F  F03E         	goto	u81
  1046  007CFA  EF82  F03E         	goto	u80
  1047  007CFE                     u81:
  1048  007CFE  0E01               	movlw	1
  1049  007D00  EF83  F03E         	goto	u86
  1050  007D04                     u80:
  1051  007D04  0E00               	movlw	0
  1052  007D06                     u86:
  1053  007D06  0AFF               	xorlw	255
  1054  007D08  6E23               	movwf	??_diagnostic^0,c
  1055  007D0A  3A23               	swapf	??_diagnostic^0,f,c
  1056  007D0C  4623               	rlncf	??_diagnostic^0,f,c
  1057  007D0E  4623               	rlncf	??_diagnostic^0,f,c
  1058  007D10  508B               	movf	139,w,c	;volatile
  1059  007D12  1823               	xorwf	??_diagnostic^0,w,c
  1060  007D14  0BBF               	andlw	-65
  1061  007D16  1823               	xorwf	??_diagnostic^0,w,c
  1062  007D18  6E8B               	movwf	139,c	;volatile
  1063  007D1A                     
  1064                           ;main.c: 181:     _delay((unsigned long)((300)*(4000000/4000.0)));
  1065  007D1A  0E02               	movlw	2
  1066  007D1C  6E24               	movwf	(??_diagnostic+1)^0,c
  1067  007D1E  0E86               	movlw	134
  1068  007D20  6E23               	movwf	??_diagnostic^0,c
  1069  007D22  0E99               	movlw	153
  1070  007D24                     u607:
  1071  007D24  2EE8               	decfsz	wreg,f,c
  1072  007D26  D7FE               	bra	u607
  1073  007D28  2E23               	decfsz	??_diagnostic^0,f,c
  1074  007D2A  D7FC               	bra	u607
  1075  007D2C  2E24               	decfsz	(??_diagnostic+1)^0,f,c
  1076  007D2E  D7FA               	bra	u607
  1077  007D30  F000               	nop	
  1078  007D32  BA8B               	btfsc	139,5,c	;volatile
  1079  007D34  EF9E  F03E         	goto	u91
  1080  007D38  EFA1  F03E         	goto	u90
  1081  007D3C                     u91:
  1082  007D3C  0E01               	movlw	1
  1083  007D3E  EFA2  F03E         	goto	u96
  1084  007D42                     u90:
  1085  007D42  0E00               	movlw	0
  1086  007D44                     u96:
  1087  007D44  0AFF               	xorlw	255
  1088  007D46  6E23               	movwf	??_diagnostic^0,c
  1089  007D48  3A23               	swapf	??_diagnostic^0,f,c
  1090  007D4A  4623               	rlncf	??_diagnostic^0,f,c
  1091  007D4C  508B               	movf	139,w,c	;volatile
  1092  007D4E  1823               	xorwf	??_diagnostic^0,w,c
  1093  007D50  0BDF               	andlw	-33
  1094  007D52  1823               	xorwf	??_diagnostic^0,w,c
  1095  007D54  6E8B               	movwf	139,c	;volatile
  1096  007D56  BC8B               	btfsc	139,6,c	;volatile
  1097  007D58  EFB0  F03E         	goto	u101
  1098  007D5C  EFB3  F03E         	goto	u100
  1099  007D60                     u101:
  1100  007D60  0E01               	movlw	1
  1101  007D62  EFB4  F03E         	goto	u106
  1102  007D66                     u100:
  1103  007D66  0E00               	movlw	0
  1104  007D68                     u106:
  1105  007D68  0AFF               	xorlw	255
  1106  007D6A  6E23               	movwf	??_diagnostic^0,c
  1107  007D6C  3A23               	swapf	??_diagnostic^0,f,c
  1108  007D6E  4623               	rlncf	??_diagnostic^0,f,c
  1109  007D70  4623               	rlncf	??_diagnostic^0,f,c
  1110  007D72  508B               	movf	139,w,c	;volatile
  1111  007D74  1823               	xorwf	??_diagnostic^0,w,c
  1112  007D76  0BBF               	andlw	-65
  1113  007D78  1823               	xorwf	??_diagnostic^0,w,c
  1114  007D7A  6E8B               	movwf	139,c	;volatile
  1115  007D7C  0012               	return		;funcret
  1116  007D7E                     __end_of_diagnostic:
  1117                           	callstack 0
  1118                           
  1119 ;; *************** function _SYSTEM_Initialize *****************
  1120 ;; Defined at:
  1121 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1135 ;;      Params:         0       0       0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    1
  1142 ;; This function calls:
  1143 ;;		_ADC_Initialize
  1144 ;;		_EPWM1_Initialize
  1145 ;;		_EPWM2_Initialize
  1146 ;;		_OSCILLATOR_Initialize
  1147 ;;		_PIN_MANAGER_Initialize
  1148 ;;		_TMR2_Initialize
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text6
  1155  0079EC                     __ptext6:
  1156                           	callstack 0
  1157  0079EC                     _SYSTEM_Initialize:
  1158                           	callstack 29
  1159  0079EC                     
  1160                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1161  0079EC  EC9A  F03D         	call	_PIN_MANAGER_Initialize	;wreg free
  1162                           
  1163                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1164  0079F0  EC97  F03C         	call	_OSCILLATOR_Initialize	;wreg free
  1165                           
  1166                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
  1167  0079F4  EC03  F03D         	call	_EPWM1_Initialize	;wreg free
  1168                           
  1169                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  1170  0079F8  EC9E  F03C         	call	_TMR2_Initialize	;wreg free
  1171                           
  1172                           ;mcc_generated_files/mcc.c: 57:     EPWM2_Initialize();
  1173  0079FC  EC13  F03D         	call	_EPWM2_Initialize	;wreg free
  1174                           
  1175                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1176  007A00  ECEB  F03C         	call	_ADC_Initialize	;wreg free
  1177  007A04  0012               	return		;funcret
  1178  007A06                     __end_of_SYSTEM_Initialize:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _TMR2_Initialize *****************
  1182 ;; Defined at:
  1183 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1197 ;;      Params:         0       0       0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0
  1200 ;;      Totals:         0       0       0       0       0       0       0
  1201 ;;Total ram usage:        0 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_SYSTEM_Initialize
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text7
  1211  00793C                     __ptext7:
  1212                           	callstack 0
  1213  00793C                     _TMR2_Initialize:
  1214                           	callstack 29
  1215  00793C                     
  1216                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  1217  00793C  68BB               	setf	187,c	;volatile
  1218  00793E                     
  1219                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  1220  00793E  0E00               	movlw	0
  1221  007940  6EBC               	movwf	188,c	;volatile
  1222  007942                     
  1223                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  1224  007942  929E               	bcf	158,1,c	;volatile
  1225                           
  1226                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  1227  007944  0E04               	movlw	4
  1228  007946  6EBA               	movwf	186,c	;volatile
  1229  007948  0012               	return		;funcret
  1230  00794A                     __end_of_TMR2_Initialize:
  1231                           	callstack 0
  1232                           
  1233 ;; *************** function _PIN_MANAGER_Initialize *****************
  1234 ;; Defined at:
  1235 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1249 ;;      Params:         0       0       0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_SYSTEM_Initialize
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text8
  1263  007B34                     __ptext8:
  1264                           	callstack 0
  1265  007B34                     _PIN_MANAGER_Initialize:
  1266                           	callstack 29
  1267  007B34                     
  1268                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1269  007B34  0E00               	movlw	0
  1270  007B36  6E89               	movwf	137,c	;volatile
  1271                           
  1272                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1273  007B38  0E00               	movlw	0
  1274  007B3A  6E8A               	movwf	138,c	;volatile
  1275                           
  1276                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1277  007B3C  0E00               	movlw	0
  1278  007B3E  6E8B               	movwf	139,c	;volatile
  1279                           
  1280                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDB;
  1281  007B40  0EDB               	movlw	219
  1282  007B42  6E92               	movwf	146,c	;volatile
  1283                           
  1284                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF7;
  1285  007B44  0EF7               	movlw	247
  1286  007B46  6E93               	movwf	147,c	;volatile
  1287                           
  1288                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0b00011000;
  1289  007B48  0E18               	movlw	24
  1290  007B4A  6E94               	movwf	148,c	;volatile
  1291                           
  1292                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  1293  007B4C  0E00               	movlw	0
  1294  007B4E  010F               	movlb	15	; () banked
  1295  007B50  6F3A               	movwf	58,b	;volatile
  1296                           
  1297                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1298  007B52  0E00               	movlw	0
  1299  007B54  6F39               	movwf	57,b	;volatile
  1300                           
  1301                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0B;
  1302  007B56  0E0B               	movlw	11
  1303  007B58  6F38               	movwf	56,b	;volatile
  1304                           
  1305                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1306  007B5A  0E00               	movlw	0
  1307  007B5C  6E61               	movwf	97,c	;volatile
  1308  007B5E                     
  1309                           ; BSR set to: 15
  1310                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1311  007B5E  8EF1               	bsf	241,7,c	;volatile
  1312  007B60                     
  1313                           ; BSR set to: 15
  1314  007B60  0012               	return		;funcret
  1315  007B62                     __end_of_PIN_MANAGER_Initialize:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function _OSCILLATOR_Initialize *****************
  1319 ;; Defined at:
  1320 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         0       0       0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_SYSTEM_Initialize
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text9
  1348  00792E                     __ptext9:
  1349                           	callstack 0
  1350  00792E                     _OSCILLATOR_Initialize:
  1351                           	callstack 29
  1352  00792E                     
  1353                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
  1354  00792E  0E30               	movlw	48
  1355  007930  6ED3               	movwf	211,c	;volatile
  1356                           
  1357                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  1358  007932  0E04               	movlw	4
  1359  007934  6ED2               	movwf	210,c	;volatile
  1360                           
  1361                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1362  007936  0E00               	movlw	0
  1363  007938  6E9B               	movwf	155,c	;volatile
  1364  00793A  0012               	return		;funcret
  1365  00793C                     __end_of_OSCILLATOR_Initialize:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _EPWM2_Initialize *****************
  1369 ;; Defined at:
  1370 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1384 ;;      Params:         0       0       0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_SYSTEM_Initialize
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text10
  1398  007A26                     __ptext10:
  1399                           	callstack 0
  1400  007A26                     _EPWM2_Initialize:
  1401                           	callstack 29
  1402  007A26                     
  1403                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  1404  007A26  0E3C               	movlw	60
  1405  007A28  6E66               	movwf	102,c	;volatile
  1406                           
  1407                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  1408  007A2A  0E00               	movlw	0
  1409  007A2C  6E64               	movwf	100,c	;volatile
  1410                           
  1411                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  1412  007A2E  0E80               	movlw	128
  1413  007A30  6E65               	movwf	101,c	;volatile
  1414                           
  1415                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  1416  007A32  0E01               	movlw	1
  1417  007A34  6E63               	movwf	99,c	;volatile
  1418                           
  1419                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  1420  007A36  0E00               	movlw	0
  1421  007A38  6E68               	movwf	104,c	;volatile
  1422                           
  1423                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x7F;
  1424  007A3A  0E7F               	movlw	127
  1425  007A3C  6E67               	movwf	103,c	;volatile
  1426                           
  1427                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  1428  007A3E  0EE7               	movlw	-25
  1429  007A40  010F               	movlb	15	; () banked
  1430  007A42  1749               	andwf	73,f,b	;volatile
  1431  007A44                     
  1432                           ; BSR set to: 15
  1433  007A44  0012               	return		;funcret
  1434  007A46                     __end_of_EPWM2_Initialize:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _EPWM1_Initialize *****************
  1438 ;; Defined at:
  1439 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1453 ;;      Params:         0       0       0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0
  1456 ;;      Totals:         0       0       0       0       0       0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_SYSTEM_Initialize
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text11
  1467  007A06                     __ptext11:
  1468                           	callstack 0
  1469  007A06                     _EPWM1_Initialize:
  1470                           	callstack 29
  1471  007A06                     
  1472                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  1473  007A06  0E3C               	movlw	60
  1474  007A08  6EBD               	movwf	189,c	;volatile
  1475                           
  1476                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  1477  007A0A  0E00               	movlw	0
  1478  007A0C  6EB6               	movwf	182,c	;volatile
  1479                           
  1480                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  1481  007A0E  0E80               	movlw	128
  1482  007A10  6EB7               	movwf	183,c	;volatile
  1483                           
  1484                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  1485  007A12  0E01               	movlw	1
  1486  007A14  6EB9               	movwf	185,c	;volatile
  1487                           
  1488                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  1489  007A16  0E00               	movlw	0
  1490  007A18  6EBF               	movwf	191,c	;volatile
  1491                           
  1492                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  1493  007A1A  0E7F               	movlw	127
  1494  007A1C  6EBE               	movwf	190,c	;volatile
  1495                           
  1496                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  1497  007A1E  0EFC               	movlw	-4
  1498  007A20  010F               	movlb	15	; () banked
  1499  007A22  1749               	andwf	73,f,b	;volatile
  1500  007A24                     
  1501                           ; BSR set to: 15
  1502  007A24  0012               	return		;funcret
  1503  007A26                     __end_of_EPWM1_Initialize:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _ADC_Initialize *****************
  1507 ;; Defined at:
  1508 ;;		line 62 in file "mcc_generated_files/adc.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1522 ;;      Params:         0       0       0       0       0       0       0
  1523 ;;      Locals:         0       0       0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0
  1525 ;;      Totals:         0       0       0       0       0       0       0
  1526 ;;Total ram usage:        0 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_SYSTEM_Initialize
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text12
  1536  0079D6                     __ptext12:
  1537                           	callstack 0
  1538  0079D6                     _ADC_Initialize:
  1539                           	callstack 29
  1540  0079D6                     
  1541                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1542  0079D6  0E00               	movlw	0
  1543  0079D8  6EC1               	movwf	193,c	;volatile
  1544                           
  1545                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  1546  0079DA  0E04               	movlw	4
  1547  0079DC  6EC0               	movwf	192,c	;volatile
  1548                           
  1549                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1550  0079DE  0E00               	movlw	0
  1551  0079E0  6EC3               	movwf	195,c	;volatile
  1552                           
  1553                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1554  0079E2  0E00               	movlw	0
  1555  0079E4  6EC4               	movwf	196,c	;volatile
  1556                           
  1557                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x0D;
  1558  0079E6  0E0D               	movlw	13
  1559  0079E8  6EC2               	movwf	194,c	;volatile
  1560  0079EA  0012               	return		;funcret
  1561  0079EC                     __end_of_ADC_Initialize:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function _MCP23008_Initialise *****************
  1565 ;; Defined at:
  1566 ;;		line 209 in file "main.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1580 ;;      Params:         0       0       0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0
  1583 ;;      Totals:         0       0       0       0       0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    2
  1587 ;; This function calls:
  1588 ;;		_I2C_send_data
  1589 ;;		_IdleI2C
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text13
  1596  007BCE                     __ptext13:
  1597                           	callstack 0
  1598  007BCE                     _MCP23008_Initialise:
  1599                           	callstack 28
  1600  007BCE                     
  1601                           ;main.c: 211:     I2C_send_data(0x40, 0x00, 0x00);
  1602  007BCE  0E00               	movlw	0
  1603  007BD0  6E24               	movwf	I2C_send_data@register_address^0,c
  1604  007BD2  0E00               	movlw	0
  1605  007BD4  6E25               	movwf	I2C_send_data@register_data^0,c
  1606  007BD6  0E40               	movlw	64
  1607  007BD8  EC5A  F03D         	call	_I2C_send_data
  1608                           
  1609                           ;main.c: 212:     IdleI2C();
  1610  007BDC  EC33  F03D         	call	_IdleI2C	;wreg free
  1611                           
  1612                           ;main.c: 213:     I2C_send_data(0x40, 0x01, 0x00);
  1613  007BE0  0E01               	movlw	1
  1614  007BE2  6E24               	movwf	I2C_send_data@register_address^0,c
  1615  007BE4  0E00               	movlw	0
  1616  007BE6  6E25               	movwf	I2C_send_data@register_data^0,c
  1617  007BE8  0E40               	movlw	64
  1618  007BEA  EC5A  F03D         	call	_I2C_send_data
  1619                           
  1620                           ;main.c: 214:     IdleI2C();
  1621  007BEE  EC33  F03D         	call	_IdleI2C	;wreg free
  1622                           
  1623                           ;main.c: 215:     I2C_send_data(0x40, 0x02, 0x00);
  1624  007BF2  0E02               	movlw	2
  1625  007BF4  6E24               	movwf	I2C_send_data@register_address^0,c
  1626  007BF6  0E00               	movlw	0
  1627  007BF8  6E25               	movwf	I2C_send_data@register_data^0,c
  1628  007BFA  0E40               	movlw	64
  1629  007BFC  EC5A  F03D         	call	_I2C_send_data
  1630                           
  1631                           ;main.c: 216:     IdleI2C();
  1632  007C00  EC33  F03D         	call	_IdleI2C	;wreg free
  1633                           
  1634                           ;main.c: 217:     I2C_send_data(0x40, 0x05, 0x3E);
  1635  007C04  0E05               	movlw	5
  1636  007C06  6E24               	movwf	I2C_send_data@register_address^0,c
  1637  007C08  0E3E               	movlw	62
  1638  007C0A  6E25               	movwf	I2C_send_data@register_data^0,c
  1639  007C0C  0E40               	movlw	64
  1640  007C0E  EC5A  F03D         	call	_I2C_send_data
  1641                           
  1642                           ;main.c: 218:     IdleI2C();
  1643  007C12  EC33  F03D         	call	_IdleI2C	;wreg free
  1644                           
  1645                           ;main.c: 219:     I2C_send_data(0x40, 0x06, 0x00);
  1646  007C16  0E06               	movlw	6
  1647  007C18  6E24               	movwf	I2C_send_data@register_address^0,c
  1648  007C1A  0E00               	movlw	0
  1649  007C1C  6E25               	movwf	I2C_send_data@register_data^0,c
  1650  007C1E  0E40               	movlw	64
  1651  007C20  EC5A  F03D         	call	_I2C_send_data
  1652  007C24  0012               	return		;funcret
  1653  007C26                     __end_of_MCP23008_Initialise:
  1654                           	callstack 0
  1655                           
  1656 ;; *************** function _IsOptoR *****************
  1657 ;; Defined at:
  1658 ;;		line 374 in file "main.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;		None
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;		None
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      _Bool 
  1665 ;; Registers used:
  1666 ;;		wreg
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1672 ;;      Params:         0       0       0       0       0       0       0
  1673 ;;      Locals:         0       0       0       0       0       0       0
  1674 ;;      Temps:          0       0       0       0       0       0       0
  1675 ;;      Totals:         0       0       0       0       0       0       0
  1676 ;;Total ram usage:        0 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text14
  1686  007996                     __ptext14:
  1687                           	callstack 0
  1688  007996                     _IsOptoR:
  1689                           	callstack 30
  1690  007996                     
  1691                           ;main.c: 376:     return (PORTBbits.RB1 == 0);
  1692  007996  A281               	btfss	129,1,c	;volatile
  1693  007998  EFD0  F03C         	goto	u141
  1694  00799C  EFD3  F03C         	goto	u140
  1695  0079A0                     u141:
  1696  0079A0  0E01               	movlw	1
  1697  0079A2  EFD4  F03C         	goto	u150
  1698  0079A6                     u140:
  1699  0079A6  0E00               	movlw	0
  1700  0079A8                     u150:
  1701  0079A8  0012               	return		;funcret
  1702  0079AA                     __end_of_IsOptoR:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _IsOptoL *****************
  1706 ;; Defined at:
  1707 ;;		line 369 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      _Bool 
  1714 ;; Registers used:
  1715 ;;		wreg
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1721 ;;      Params:         0       0       0       0       0       0       0
  1722 ;;      Locals:         0       0       0       0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0
  1724 ;;      Totals:         0       0       0       0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text15
  1735  007982                     __ptext15:
  1736                           	callstack 0
  1737  007982                     _IsOptoL:
  1738                           	callstack 30
  1739  007982                     
  1740                           ;main.c: 371:     return (PORTBbits.RB2 == 0);
  1741  007982  A481               	btfss	129,2,c	;volatile
  1742  007984  EFC6  F03C         	goto	u161
  1743  007988  EFC9  F03C         	goto	u160
  1744  00798C                     u161:
  1745  00798C  0E01               	movlw	1
  1746  00798E  EFCA  F03C         	goto	u170
  1747  007992                     u160:
  1748  007992  0E00               	movlw	0
  1749  007994                     u170:
  1750  007994  0012               	return		;funcret
  1751  007996                     __end_of_IsOptoL:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _IsBumperR *****************
  1755 ;; Defined at:
  1756 ;;		line 364 in file "main.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      _Bool 
  1763 ;; Registers used:
  1764 ;;		wreg
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text16
  1784  00796E                     __ptext16:
  1785                           	callstack 0
  1786  00796E                     _IsBumperR:
  1787                           	callstack 30
  1788  00796E                     
  1789                           ;main.c: 366:     return (PORTBbits.RB5 == 0);
  1790  00796E  AA81               	btfss	129,5,c	;volatile
  1791  007970  EFBC  F03C         	goto	u181
  1792  007974  EFBF  F03C         	goto	u180
  1793  007978                     u181:
  1794  007978  0E01               	movlw	1
  1795  00797A  EFC0  F03C         	goto	u190
  1796  00797E                     u180:
  1797  00797E  0E00               	movlw	0
  1798  007980                     u190:
  1799  007980  0012               	return		;funcret
  1800  007982                     __end_of_IsBumperR:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function _IsBumperL *****************
  1804 ;; Defined at:
  1805 ;;		line 324 in file "main.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      _Bool 
  1812 ;; Registers used:
  1813 ;;		wreg
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1819 ;;      Params:         0       0       0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text17
  1833  00795A                     __ptext17:
  1834                           	callstack 0
  1835  00795A                     _IsBumperL:
  1836                           	callstack 30
  1837  00795A                     
  1838                           ;main.c: 344:     return (PORTBbits.RB4 == 0);
  1839  00795A  A881               	btfss	129,4,c	;volatile
  1840  00795C  EFB2  F03C         	goto	u201
  1841  007960  EFB5  F03C         	goto	u200
  1842  007964                     u201:
  1843  007964  0E01               	movlw	1
  1844  007966  EFB6  F03C         	goto	u210
  1845  00796A                     u200:
  1846  00796A  0E00               	movlw	0
  1847  00796C                     u210:
  1848  00796C  0012               	return		;funcret
  1849  00796E                     __end_of_IsBumperL:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _I2C_Initialise *****************
  1853 ;; Defined at:
  1854 ;;		line 200 in file "main.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1868 ;;      Params:         0       0       0       0       0       0       0
  1869 ;;      Locals:         0       0       0       0       0       0       0
  1870 ;;      Temps:          0       0       0       0       0       0       0
  1871 ;;      Totals:         0       0       0       0       0       0       0
  1872 ;;Total ram usage:        0 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_main
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text18
  1882  0079C0                     __ptext18:
  1883                           	callstack 0
  1884  0079C0                     _I2C_Initialise:
  1885                           	callstack 30
  1886  0079C0                     
  1887                           ;main.c: 202:     SSP1STAT = 0x00;
  1888  0079C0  0E00               	movlw	0
  1889  0079C2  6EC7               	movwf	199,c	;volatile
  1890                           
  1891                           ;main.c: 203:     SSP1CON1 = 0x28;
  1892  0079C4  0E28               	movlw	40
  1893  0079C6  6EC6               	movwf	198,c	;volatile
  1894                           
  1895                           ;main.c: 204:     SSP1CON2 = 0x00;
  1896  0079C8  0E00               	movlw	0
  1897  0079CA  6EC5               	movwf	197,c	;volatile
  1898                           
  1899                           ;main.c: 205:     SSP1CON3 = 0x08;
  1900  0079CC  0E08               	movlw	8
  1901  0079CE  6ECB               	movwf	203,c	;volatile
  1902                           
  1903                           ;main.c: 206:     SSP1ADD = 0x09;
  1904  0079D0  0E09               	movlw	9
  1905  0079D2  6EC8               	movwf	200,c	;volatile
  1906  0079D4  0012               	return		;funcret
  1907  0079D6                     __end_of_I2C_Initialise:
  1908                           	callstack 0
  1909                           
  1910 ;; *************** function _I2C *****************
  1911 ;; Defined at:
  1912 ;;		line 259 in file "main.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1926 ;;      Params:         0       0       0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0
  1928 ;;      Temps:          2       0       0       0       0       0       0
  1929 ;;      Totals:         2       0       0       0       0       0       0
  1930 ;;Total ram usage:        2 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    2
  1933 ;; This function calls:
  1934 ;;		_I2C_send_data
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text19
  1941  007C26                     __ptext19:
  1942                           	callstack 0
  1943  007C26                     _I2C:
  1944                           	callstack 28
  1945  007C26                     
  1946                           ;main.c: 263:     {;main.c: 264:         I2C_send_data(0x40, 0x09, digits[10]);
  1947  007C26  0E09               	movlw	9
  1948  007C28  6E24               	movwf	I2C_send_data@register_address^0,c
  1949  007C2A  C01D  F025         	movff	_digits+10,I2C_send_data@register_data
  1950  007C2E  0E40               	movlw	64
  1951  007C30  EC5A  F03D         	call	_I2C_send_data
  1952  007C34                     
  1953                           ;main.c: 265:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1954  007C34  0E06               	movlw	6
  1955  007C36  6E28               	movwf	(??_I2C+1)^0,c
  1956  007C38  0E13               	movlw	19
  1957  007C3A  6E27               	movwf	??_I2C^0,c
  1958  007C3C  0EAE               	movlw	174
  1959  007C3E                     u617:
  1960  007C3E  2EE8               	decfsz	wreg,f,c
  1961  007C40  D7FE               	bra	u617
  1962  007C42  2E27               	decfsz	??_I2C^0,f,c
  1963  007C44  D7FC               	bra	u617
  1964  007C46  2E28               	decfsz	(??_I2C+1)^0,f,c
  1965  007C48  D7FA               	bra	u617
  1966  007C4A                     
  1967                           ;main.c: 266:         I2C_send_data(0x40, 0x09, digits[UnLit]);
  1968  007C4A  0E09               	movlw	9
  1969  007C4C  6E24               	movwf	I2C_send_data@register_address^0,c
  1970  007C4E  0E13               	movlw	low _digits
  1971  007C50  2409               	addwf	_UnLit^0,w,c
  1972  007C52  6ED9               	movwf	fsr2l,c
  1973  007C54  0E00               	movlw	high _digits
  1974  007C56  200A               	addwfc	(_UnLit+1)^0,w,c
  1975  007C58  6EDA               	movwf	fsr2h,c
  1976  007C5A  50DF               	movf	indf2,w,c
  1977  007C5C  6E25               	movwf	I2C_send_data@register_data^0,c
  1978  007C5E  0E40               	movlw	64
  1979  007C60  EC5A  F03D         	call	_I2C_send_data
  1980  007C64                     
  1981                           ;main.c: 267:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1982  007C64  0E06               	movlw	6
  1983  007C66  6E28               	movwf	(??_I2C+1)^0,c
  1984  007C68  0E13               	movlw	19
  1985  007C6A  6E27               	movwf	??_I2C^0,c
  1986  007C6C  0EAE               	movlw	174
  1987  007C6E                     u627:
  1988  007C6E  2EE8               	decfsz	wreg,f,c
  1989  007C70  D7FE               	bra	u627
  1990  007C72  2E27               	decfsz	??_I2C^0,f,c
  1991  007C74  D7FC               	bra	u627
  1992  007C76  2E28               	decfsz	(??_I2C+1)^0,f,c
  1993  007C78  D7FA               	bra	u627
  1994  007C7A                     
  1995                           ;main.c: 268:         I2C_send_data(0x40, 0x09, digits[11]);
  1996  007C7A  0E09               	movlw	9
  1997  007C7C  6E24               	movwf	I2C_send_data@register_address^0,c
  1998  007C7E  C01E  F025         	movff	_digits+11,I2C_send_data@register_data
  1999  007C82  0E40               	movlw	64
  2000  007C84  EC5A  F03D         	call	_I2C_send_data
  2001  007C88                     
  2002                           ;main.c: 269:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2003  007C88  0E06               	movlw	6
  2004  007C8A  6E28               	movwf	(??_I2C+1)^0,c
  2005  007C8C  0E13               	movlw	19
  2006  007C8E  6E27               	movwf	??_I2C^0,c
  2007  007C90  0EAE               	movlw	174
  2008  007C92                     u637:
  2009  007C92  2EE8               	decfsz	wreg,f,c
  2010  007C94  D7FE               	bra	u637
  2011  007C96  2E27               	decfsz	??_I2C^0,f,c
  2012  007C98  D7FC               	bra	u637
  2013  007C9A  2E28               	decfsz	(??_I2C+1)^0,f,c
  2014  007C9C  D7FA               	bra	u637
  2015  007C9E                     
  2016                           ;main.c: 270:         I2C_send_data(0x40, 0x09, digits[Lit]);
  2017  007C9E  0E09               	movlw	9
  2018  007CA0  6E24               	movwf	I2C_send_data@register_address^0,c
  2019  007CA2  0E13               	movlw	low _digits
  2020  007CA4  2407               	addwf	_Lit^0,w,c
  2021  007CA6  6ED9               	movwf	fsr2l,c
  2022  007CA8  0E00               	movlw	high _digits
  2023  007CAA  2008               	addwfc	(_Lit+1)^0,w,c
  2024  007CAC  6EDA               	movwf	fsr2h,c
  2025  007CAE  50DF               	movf	indf2,w,c
  2026  007CB0  6E25               	movwf	I2C_send_data@register_data^0,c
  2027  007CB2  0E40               	movlw	64
  2028  007CB4  EC5A  F03D         	call	_I2C_send_data
  2029                           
  2030                           ;main.c: 271:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2031  007CB8  0E06               	movlw	6
  2032  007CBA  6E28               	movwf	(??_I2C+1)^0,c
  2033  007CBC  0E13               	movlw	19
  2034  007CBE  6E27               	movwf	??_I2C^0,c
  2035  007CC0  0EAE               	movlw	174
  2036  007CC2                     u647:
  2037  007CC2  2EE8               	decfsz	wreg,f,c
  2038  007CC4  D7FE               	bra	u647
  2039  007CC6  2E27               	decfsz	??_I2C^0,f,c
  2040  007CC8  D7FC               	bra	u647
  2041  007CCA  2E28               	decfsz	(??_I2C+1)^0,f,c
  2042  007CCC  D7FA               	bra	u647
  2043  007CCE  0012               	return		;funcret
  2044  007CD0                     __end_of_I2C:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _I2C_send_data *****************
  2048 ;; Defined at:
  2049 ;;		line 222 in file "main.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  device_addre    1    wreg     unsigned char 
  2052 ;;  register_add    1    1[COMRAM] unsigned char 
  2053 ;;  register_dat    1    2[COMRAM] unsigned char 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  device_addre    1    3[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2065 ;;      Params:         2       0       0       0       0       0       0
  2066 ;;      Locals:         1       0       0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0
  2068 ;;      Totals:         3       0       0       0       0       0       0
  2069 ;;Total ram usage:        3 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    1
  2072 ;; This function calls:
  2073 ;;		_IdleI2C
  2074 ;;		_StartI2C
  2075 ;;		_StopI2C
  2076 ;;		_WriteI2C
  2077 ;; This function is called by:
  2078 ;;		_MCP23008_Initialise
  2079 ;;		_I2C
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text20
  2084  007AB4                     __ptext20:
  2085                           	callstack 0
  2086  007AB4                     _I2C_send_data:
  2087                           	callstack 28
  2088                           
  2089                           ;incstack = 0
  2090                           ;I2C_send_data@device_address stored from wreg
  2091  007AB4  6E26               	movwf	I2C_send_data@device_address^0,c
  2092  007AB6                     
  2093                           ;main.c: 222: void I2C_send_data(unsigned char device_address, unsigned char register_ad
      +                          dress, unsigned char register_data);main.c: 223: {;main.c: 224:     StartI2C();
  2094  007AB6  EC84  F03D         	call	_StartI2C	;wreg free
  2095  007ABA                     
  2096                           ;main.c: 225:     WriteI2C(device_address);
  2097  007ABA  5026               	movf	I2C_send_data@device_address^0,w,c
  2098  007ABC  ECD5  F03C         	call	_WriteI2C
  2099  007AC0                     
  2100                           ;main.c: 226:     IdleI2C();
  2101  007AC0  EC33  F03D         	call	_IdleI2C	;wreg free
  2102                           
  2103                           ;main.c: 227:     WriteI2C(register_address);
  2104  007AC4  5024               	movf	I2C_send_data@register_address^0,w,c
  2105  007AC6  ECD5  F03C         	call	_WriteI2C
  2106  007ACA                     
  2107                           ;main.c: 228:     IdleI2C();
  2108  007ACA  EC33  F03D         	call	_IdleI2C	;wreg free
  2109  007ACE                     
  2110                           ;main.c: 229:     WriteI2C(register_data);
  2111  007ACE  5025               	movf	I2C_send_data@register_data^0,w,c
  2112  007AD0  ECD5  F03C         	call	_WriteI2C
  2113                           
  2114                           ;main.c: 230:     IdleI2C();
  2115  007AD4  EC33  F03D         	call	_IdleI2C	;wreg free
  2116  007AD8                     
  2117                           ;main.c: 231:     StopI2C();
  2118  007AD8  EC95  F03C         	call	_StopI2C	;wreg free
  2119  007ADC  0012               	return		;funcret
  2120  007ADE                     __end_of_I2C_send_data:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function _WriteI2C *****************
  2124 ;; Defined at:
  2125 ;;		line 248 in file "main.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  data            1    wreg     unsigned char 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  data            1    0[COMRAM] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2139 ;;      Params:         0       0       0       0       0       0       0
  2140 ;;      Locals:         1       0       0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0
  2142 ;;      Totals:         1       0       0       0       0       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_I2C_send_data
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text21
  2153  0079AA                     __ptext21:
  2154                           	callstack 0
  2155  0079AA                     _WriteI2C:
  2156                           	callstack 28
  2157                           
  2158                           ;incstack = 0
  2159                           ;WriteI2C@data stored from wreg
  2160  0079AA  6E23               	movwf	WriteI2C@data^0,c
  2161  0079AC                     
  2162                           ;main.c: 248: void WriteI2C(unsigned char data);main.c: 249: {;main.c: 250:     SSP1BUF 
      +                          = data;
  2163  0079AC  C023  FFC9         	movff	WriteI2C@data,4041	;volatile
  2164  0079B0                     l341:
  2165  0079B0  B0C7               	btfsc	199,0,c	;volatile
  2166  0079B2  EFDD  F03C         	goto	u51
  2167  0079B6  EFDF  F03C         	goto	u50
  2168  0079BA                     u51:
  2169  0079BA  EFD8  F03C         	goto	l341
  2170  0079BE                     u50:
  2171  0079BE  0012               	return		;funcret
  2172  0079C0                     __end_of_WriteI2C:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _StopI2C *****************
  2176 ;; Defined at:
  2177 ;;		line 254 in file "main.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		None
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2191 ;;      Params:         0       0       0       0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0
  2194 ;;      Totals:         0       0       0       0       0       0       0
  2195 ;;Total ram usage:        0 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_I2C_send_data
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text22
  2205  00792A                     __ptext22:
  2206                           	callstack 0
  2207  00792A                     _StopI2C:
  2208                           	callstack 28
  2209  00792A                     
  2210                           ;main.c: 256:     SSP1CON2bits.PEN = 1;
  2211  00792A  84C5               	bsf	197,2,c	;volatile
  2212  00792C  0012               	return		;funcret
  2213  00792E                     __end_of_StopI2C:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _StartI2C *****************
  2217 ;; Defined at:
  2218 ;;		line 239 in file "main.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2232 ;;      Params:         0       0       0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0       0       0
  2234 ;;      Temps:          1       0       0       0       0       0       0
  2235 ;;      Totals:         1       0       0       0       0       0       0
  2236 ;;Total ram usage:        1 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		_I2C_send_data
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text23
  2246  007B08                     __ptext23:
  2247                           	callstack 0
  2248  007B08                     _StartI2C:
  2249                           	callstack 28
  2250  007B08                     
  2251                           ;main.c: 241:     PIR1bits.SSPIF = 0;
  2252  007B08  969E               	bcf	158,3,c	;volatile
  2253                           
  2254                           ;main.c: 242:     SSP1CON2bits.SEN = 1;
  2255  007B0A  80C5               	bsf	197,0,c	;volatile
  2256  007B0C                     l335:
  2257  007B0C  B4C7               	btfsc	199,2,c	;volatile
  2258  007B0E  EF8B  F03D         	goto	u31
  2259  007B12  EF8D  F03D         	goto	u30
  2260  007B16                     u31:
  2261  007B16  EF86  F03D         	goto	l335
  2262  007B1A                     u30:
  2263  007B1A  CFC5 F023          	movff	4037,??_StartI2C	;volatile
  2264  007B1E  0E1F               	movlw	31
  2265  007B20  1623               	andwf	??_StartI2C^0,f,c
  2266  007B22  A4D8               	btfss	status,2,c
  2267  007B24  EF96  F03D         	goto	u41
  2268  007B28  EF98  F03D         	goto	u40
  2269  007B2C                     u41:
  2270  007B2C  EF86  F03D         	goto	l335
  2271  007B30                     u40:
  2272  007B30                     
  2273                           ;main.c: 245:     PIR1bits.SSPIF = 0;
  2274  007B30  969E               	bcf	158,3,c	;volatile
  2275  007B32  0012               	return		;funcret
  2276  007B34                     __end_of_StartI2C:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _IdleI2C *****************
  2280 ;; Defined at:
  2281 ;;		line 234 in file "main.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2295 ;;      Params:         0       0       0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0
  2297 ;;      Temps:          1       0       0       0       0       0       0
  2298 ;;      Totals:         1       0       0       0       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_MCP23008_Initialise
  2305 ;;		_I2C_send_data
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text24
  2310  007A66                     __ptext24:
  2311                           	callstack 0
  2312  007A66                     _IdleI2C:
  2313                           	callstack 29
  2314  007A66                     l1055:
  2315  007A66  CFC5 F023          	movff	4037,??_IdleI2C	;volatile
  2316  007A6A  0E1F               	movlw	31
  2317  007A6C  1623               	andwf	??_IdleI2C^0,f,c
  2318  007A6E  A4D8               	btfss	status,2,c
  2319  007A70  EF3C  F03D         	goto	u11
  2320  007A74  EF3E  F03D         	goto	u10
  2321  007A78                     u11:
  2322  007A78  EF33  F03D         	goto	l1055
  2323  007A7C                     u10:
  2324  007A7C  B2C7               	btfsc	199,1,c	;volatile
  2325  007A7E  EF43  F03D         	goto	u21
  2326  007A82  EF45  F03D         	goto	u20
  2327  007A86                     u21:
  2328  007A86  EF33  F03D         	goto	l1055
  2329  007A8A                     u20:
  2330  007A8A  0012               	return		;funcret
  2331  007A8C                     __end_of_IdleI2C:
  2332                           	callstack 0
  2333  0000                     
  2334                           	psect	rparam
  2335  0000                     
  2336                           	psect	idloc
  2337                           
  2338                           ;Config register IDLOC0 @ 0x200000
  2339                           ;	unspecified, using default values
  2340  200000                     	org	2097152
  2341  200000  FF                 	db	255
  2342                           
  2343                           ;Config register IDLOC1 @ 0x200001
  2344                           ;	unspecified, using default values
  2345  200001                     	org	2097153
  2346  200001  FF                 	db	255
  2347                           
  2348                           ;Config register IDLOC2 @ 0x200002
  2349                           ;	unspecified, using default values
  2350  200002                     	org	2097154
  2351  200002  FF                 	db	255
  2352                           
  2353                           ;Config register IDLOC3 @ 0x200003
  2354                           ;	unspecified, using default values
  2355  200003                     	org	2097155
  2356  200003  FF                 	db	255
  2357                           
  2358                           ;Config register IDLOC4 @ 0x200004
  2359                           ;	unspecified, using default values
  2360  200004                     	org	2097156
  2361  200004  FF                 	db	255
  2362                           
  2363                           ;Config register IDLOC5 @ 0x200005
  2364                           ;	unspecified, using default values
  2365  200005                     	org	2097157
  2366  200005  FF                 	db	255
  2367                           
  2368                           ;Config register IDLOC6 @ 0x200006
  2369                           ;	unspecified, using default values
  2370  200006                     	org	2097158
  2371  200006  FF                 	db	255
  2372                           
  2373                           ;Config register IDLOC7 @ 0x200007
  2374                           ;	unspecified, using default values
  2375  200007                     	org	2097159
  2376  200007  FF                 	db	255
  2377                           
  2378                           	psect	config
  2379                           
  2380                           ; Padding undefined space
  2381  300000                     	org	3145728
  2382  300000  FF                 	db	255
  2383                           
  2384                           ;Config register CONFIG1H @ 0x300001
  2385                           ;	Oscillator Selection bits
  2386                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  2387                           ;	4X PLL Enable
  2388                           ;	PLLCFG = OFF, Oscillator used directly
  2389                           ;	Primary clock enable bit
  2390                           ;	PRICLKEN = ON, Primary clock enabled
  2391                           ;	Fail-Safe Clock Monitor Enable bit
  2392                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2393                           ;	Internal/External Oscillator Switchover bit
  2394                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2395  300001                     	org	3145729
  2396  300001  23                 	db	35
  2397                           
  2398                           ;Config register CONFIG2L @ 0x300002
  2399                           ;	Power-up Timer Enable bit
  2400                           ;	PWRTEN = OFF, Power up timer disabled
  2401                           ;	Brown-out Reset Enable bits
  2402                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2403                           ;	Brown Out Reset Voltage bits
  2404                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2405  300002                     	org	3145730
  2406  300002  1F                 	db	31
  2407                           
  2408                           ;Config register CONFIG2H @ 0x300003
  2409                           ;	Watchdog Timer Enable bits
  2410                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2411                           ;	Watchdog Timer Postscale Select bits
  2412                           ;	WDTPS = 32768, 1:32768
  2413  300003                     	org	3145731
  2414  300003  3C                 	db	60
  2415                           
  2416                           ; Padding undefined space
  2417  300004                     	org	3145732
  2418  300004  FF                 	db	255
  2419                           
  2420                           ;Config register CONFIG3H @ 0x300005
  2421                           ;	CCP2 MUX bit
  2422                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2423                           ;	PORTB A/D Enable bit
  2424                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2425                           ;	P3A/CCP3 Mux bit
  2426                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2427                           ;	HFINTOSC Fast Start-up
  2428                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2429                           ;	Timer3 Clock input mux bit
  2430                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2431                           ;	ECCP2 B output mux bit
  2432                           ;	P2BMX = PORTB5, P2B is on RB5
  2433                           ;	MCLR Pin Enable bit
  2434                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2435  300005                     	org	3145733
  2436  300005  BF                 	db	191
  2437                           
  2438                           ;Config register CONFIG4L @ 0x300006
  2439                           ;	Stack Full/Underflow Reset Enable bit
  2440                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2441                           ;	Single-Supply ICSP Enable bit
  2442                           ;	LVP = OFF, Single-Supply ICSP disabled
  2443                           ;	Extended Instruction Set Enable bit
  2444                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2445                           ;	Background Debug
  2446                           ;	DEBUG = OFF, Disabled
  2447  300006                     	org	3145734
  2448  300006  81                 	db	129
  2449                           
  2450                           ; Padding undefined space
  2451  300007                     	org	3145735
  2452  300007  FF                 	db	255
  2453                           
  2454                           ;Config register CONFIG5L @ 0x300008
  2455                           ;	Code Protection Block 0
  2456                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2457                           ;	Code Protection Block 1
  2458                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2459                           ;	Code Protection Block 2
  2460                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2461                           ;	Code Protection Block 3
  2462                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2463  300008                     	org	3145736
  2464  300008  0F                 	db	15
  2465                           
  2466                           ;Config register CONFIG5H @ 0x300009
  2467                           ;	Boot Block Code Protection bit
  2468                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2469                           ;	Data EEPROM Code Protection bit
  2470                           ;	CPD = OFF, Data EEPROM not code-protected
  2471  300009                     	org	3145737
  2472  300009  C0                 	db	192
  2473                           
  2474                           ;Config register CONFIG6L @ 0x30000A
  2475                           ;	Write Protection Block 0
  2476                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2477                           ;	Write Protection Block 1
  2478                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2479                           ;	Write Protection Block 2
  2480                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2481                           ;	Write Protection Block 3
  2482                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2483  30000A                     	org	3145738
  2484  30000A  0F                 	db	15
  2485                           
  2486                           ;Config register CONFIG6H @ 0x30000B
  2487                           ;	Configuration Register Write Protection bit
  2488                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2489                           ;	Boot Block Write Protection bit
  2490                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2491                           ;	Data EEPROM Write Protection bit
  2492                           ;	WRTD = OFF, Data EEPROM not write-protected
  2493  30000B                     	org	3145739
  2494  30000B  E0                 	db	224
  2495                           
  2496                           ;Config register CONFIG7L @ 0x30000C
  2497                           ;	Table Read Protection Block 0
  2498                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2499                           ;	Table Read Protection Block 1
  2500                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2501                           ;	Table Read Protection Block 2
  2502                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2503                           ;	Table Read Protection Block 3
  2504                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2505  30000C                     	org	3145740
  2506  30000C  0F                 	db	15
  2507                           
  2508                           ;Config register CONFIG7H @ 0x30000D
  2509                           ;	Boot Block Table Read Protection bit
  2510                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2511  30000D                     	org	3145741
  2512  30000D  40                 	db	64
  2513                           tosu	equ	0xFFF
  2514                           tosh	equ	0xFFE
  2515                           tosl	equ	0xFFD
  2516                           stkptr	equ	0xFFC
  2517                           pclatu	equ	0xFFB
  2518                           pclath	equ	0xFFA
  2519                           pcl	equ	0xFF9
  2520                           tblptru	equ	0xFF8
  2521                           tblptrh	equ	0xFF7
  2522                           tblptrl	equ	0xFF6
  2523                           tablat	equ	0xFF5
  2524                           prodh	equ	0xFF4
  2525                           prodl	equ	0xFF3
  2526                           indf0	equ	0xFEF
  2527                           postinc0	equ	0xFEE
  2528                           postdec0	equ	0xFED
  2529                           preinc0	equ	0xFEC
  2530                           plusw0	equ	0xFEB
  2531                           fsr0h	equ	0xFEA
  2532                           fsr0l	equ	0xFE9
  2533                           wreg	equ	0xFE8
  2534                           indf1	equ	0xFE7
  2535                           postinc1	equ	0xFE6
  2536                           postdec1	equ	0xFE5
  2537                           preinc1	equ	0xFE4
  2538                           plusw1	equ	0xFE3
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           bsr	equ	0xFE0
  2542                           indf2	equ	0xFDF
  2543                           postinc2	equ	0xFDE
  2544                           postdec2	equ	0xFDD
  2545                           preinc2	equ	0xFDC
  2546                           plusw2	equ	0xFDB
  2547                           fsr2h	equ	0xFDA
  2548                           fsr2l	equ	0xFD9
  2549                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_I2C
    _MCP23008_Initialise->_I2C_send_data
    _I2C->_I2C_send_data
    _I2C_send_data->_IdleI2C
    _I2C_send_data->_StartI2C
    _I2C_send_data->_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5136
                                              6 COMRAM     2     2      0
                                _I2C
                     _I2C_Initialise
                          _IsBumperL
                          _IsBumperR
                            _IsOptoL
                            _IsOptoR
                _MCP23008_Initialise
                  _SYSTEM_Initialize
                        _adcFunction
                         _diagnostic
                       _leftPosition
                          _motor_fwd
                      _rightPosition
 ---------------------------------------------------------------------------------
 (1) _rightPosition                                        1     1      0       0
                                              0 COMRAM     1     1      0
                        _adcFunction
 ---------------------------------------------------------------------------------
 (1) _motor_fwd                                            3     1      2    2238
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _leftPosition                                         1     1      0       0
                                              0 COMRAM     1     1      0
                        _adcFunction
 ---------------------------------------------------------------------------------
 (2) _adcFunction                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _diagnostic                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP23008_Initialise                                  0     0      0    1449
                      _I2C_send_data
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (1) _IsOptoR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C                                                  2     2      0    1449
                                              4 COMRAM     2     2      0
                      _I2C_send_data
 ---------------------------------------------------------------------------------
 (2) _I2C_send_data                                        3     1      2    1449
                                              1 COMRAM     3     1      2
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
   _I2C_Initialise
   _IsBumperL
   _IsBumperR
   _IsOptoL
   _IsOptoR
   _MCP23008_Initialise
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
     _IdleI2C
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
   _adcFunction
   _diagnostic
   _leftPosition
     _adcFunction
   _motor_fwd
   _rightPosition
     _adcFunction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      2A       1       44.2%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A       9        0.0%
DATA                 0      0      2A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Nov 28 22:20:44 2020

                             l21 7A04                               l24 793A  
                             l51 7B60                               l67 7948  
                             u10 7A7C                               u11 7A78  
                             u20 7A8A                               u21 7A86  
                             u30 7B1A                               u31 7B16  
                             u40 7B30                               u41 7B2C  
                             u50 79BE                               u51 79BA  
                             u60 7A5E                               u61 7A5A  
                             u70 7CE0                               u71 7CDA  
                             u80 7D04                               u81 7CFE  
                             u90 7D42                               u91 7D3C  
                             u76 7CE2                               u86 7D06  
                             u96 7D44                              l103 7A24  
                            l123 7A44                              l320 79D4  
                            l312 7D7C                              l304 7CD0  
                            l145 79EA                              l306 7CF4  
                            l323 7C24                              l315 7B88  
                            _I2C 7C26                              l332 7A8A  
                            l341 79B0                              l317 7B96  
                            l326 7ADC                              l350 7CCE  
                            l262 7EC4                              l335 7B0C  
                            l271 7E42                              l344 79BE  
                            l337 7B30                              l361 7A5E  
                            l353 7B06                              l273 7E78  
                            l338 7B32                              l362 7A64  
                            l266 7E32                              l347 792C  
                            l371 7994                              l291 7F92  
                            l356 7AB2                              l365 796C  
                            l277 7EA6                              l269 7E40  
                            l374 79A8                              l359 7A50  
                            l295 7FC0                              l287 7F5A  
                            l368 7980                              l289 7F5C  
                            u100 7D66                              u101 7D60  
                            u200 796A                              u201 7964  
                            u210 796C                              u106 7D68  
                            u140 79A6                              u141 79A0  
                            u150 79A8                              u160 7992  
                            u400 7DDE                              u161 798C  
                            u401 7DDA                              u170 7994  
                            u410 7E12                              u411 7E0E  
                            u180 797E                              u420 7E40  
                            u181 7978                              u421 7E3C  
                            u190 7980                              u430 7EA6  
                            _PR2 000FBB                              u431 7EA2  
                            u360 7B76                              u440 7EE0  
                            u361 7B72                              u441 7EDC  
                            u450 7F00                              u451 7EFC  
                            u507 7E4E                              u460 7F30  
                            u461 7F2C                              u517 7E7E  
                            u470 7F5A                              u390 7DCA  
                            u607 7D24                              u375 7B82  
                            u471 7F56                              u527 7EB6  
                            u391 7DC6                              u376 7B84  
                            u480 7FC0                              u617 7C3E  
                            u385 7B94                              u481 7FBC  
                            u537 7F68                              u386 7B96  
                            u490 7FF8                              u627 7C6E  
                            u491 7FF4                              u547 7F98  
                            u637 7C92                              u557 7FD0  
                            u647 7CC2                              u567 7AE6  
                            u577 7AF8                              u587 7A94  
                            u597 7AA4                              _Lit 0007  
                _TMR2_Initialize 793C                              wreg 000FE8  
       __end_of_EPWM2_Initialize 7A46                             ?_I2C 0023  
                           l1101 79C0                             l1111 7D56  
                           l1121 7982                             l1105 7CD0  
                           l1107 7D1A                             l1053 7A66  
                           l1061 7B1A                             l1301 7AD8  
                           l1117 7996                             l1109 7D32  
                           l1141 7A8E                             l1055 7A66  
                           l1063 79AC                             l1311 7C34  
                           l1303 7BCE                             l1071 792E  
                           l1143 7A9C                             l1151 7ADE  
                           l1057 7A7C                             l1065 792A  
                           l1321 7C9E                             l1313 7C4A  
                           l1073 7A06                             l1081 7A26  
                           l1145 7AAE                             l1305 7B64  
                           l1153 7AE0                             l1059 7B08  
                           l1315 7C64                             l1147 796E  
                           l1083 79D6                             l1067 7B34  
                           l1075 793C                             l1139 7A8C  
                           l1307 7B76                             l1155 7AF0  
                           l1331 7D9C                             l1323 7D7E  
                           l1317 7C7A                             l1309 7C26  
                           l1069 7B5E                             l1077 793E  
                           l1085 7A46                             l1157 7B02  
                           l1333 7DAA                             l1325 7D86  
                           l1319 7C88                             l1159 795A  
                           l1079 7942                             l1351 7E5C  
                           l1343 7DFE                             l1335 7DAE  
                           l1327 7D8A                             l1361 7EA8  
                           l1353 7E6A                             l1345 7E12  
                           l1337 7DCA                             l1329 7D8E  
                           l1291 7AB6                             l1099 79EC  
                           l1371 7F00                             l1363 7EAC  
                           l1355 7E86                             l1339 7DDE  
                           l1293 7ABA                             l1381 7F76  
                           l1373 7F1C                             l1365 7EC2  
                           l1349 7E44                             l1357 7E8E  
                           l1295 7AC0                             l1391 7FC2  
                           l1383 7F84                             l1375 7F30  
                           l1367 7EE0                             l1359 7E92  
                           l1297 7ACA                             l1393 7FC6  
                           l1385 7FA0                             l1377 7F4C  
                           l1369 7EEC                             l1299 7ACE  
                           l1395 7FDC                             l1379 7F5E  
                           l1387 7FA8                             l1397 7FDE  
                           l1389 7FAC                             l1399 7FE6  
                           _LATA 000F89                             _LATB 000F8A  
                           _LATC 000F8B                             _TMR2 000FBC  
                           _WPUB 000F61                             _main 7D7E  
                           _time 0001                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           start 0000                  __end_of_IdleI2C 7A8C  
                   ___param_bank 000000                  __end_of_IsOptoL 7996  
                __end_of_IsOptoR 79AA                            ??_I2C 0027  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 793C  
                __end_of_StopI2C 792E                            ?_main 0023  
                  ?_leftPosition 0023                            _T2CON 000FBA  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _UnLit 0009  
                          _time1 000B                            tablat 000FF5  
                          status 000FD8                  __initialization 7B98  
                   __end_of_main 8000          __end_of_TMR2_Initialize 794A  
                 ??_leftPosition 0023                           ??_main 0029  
                  __activetblptr 000002               __size_of_IsBumperL 0014  
             __size_of_IsBumperR 0014                 __end_of_StartI2C 7B34  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1H 000FBF  
                         _CCPR2H 000F68                           _CCPR1L 000FBE  
                         _CCPR2L 000F67                 __end_of_WriteI2C 79C0  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                           _LDRVAL 0021  
                      ??_IdleI2C 0023                           _OSCCON 000FD3  
          __end_of_rightPosition 7B08                        ??_IsOptoL 0023  
                      ??_IsOptoR 0023                     _CCPTMRS0bits 000F49  
                      ??_StopI2C 0023                           _digits 0013  
                         clear_0 7BBE          __size_of_I2C_Initialise 0016  
                   WriteI2C@data 0023                     __pdataCOMRAM 0013  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                _SYSTEM_Initialize 79EC  
                     __accesstop 0060          __end_of__initialization 7BC4  
             ?_SYSTEM_Initialize 0023                    ___rparam_used 000001  
         __size_of_I2C_send_data 002A                __end_of_IsBumperL 796E  
              __end_of_IsBumperR 7982                ?_EPWM1_Initialize 0023  
                 __pcstackCOMRAM 0023              ??_SYSTEM_Initialize 0023  
             ??_EPWM1_Initialize 0023                 ?_TMR2_Initialize 0023  
                   _debounceTime 001F                ?_EPWM2_Initialize 0023  
                  ??_adcFunction 0023        __end_of_SYSTEM_Initialize 7A06  
             ??_EPWM2_Initialize 0023             __end_of_leftPosition 7AB4  
   __size_of_MCP23008_Initialise 0058                       _diagnostic 7CD0  
    I2C_send_data@device_address 0026                        ?_StartI2C 0023  
                        _CCP1CON 000FBD                          _CCP2CON 000F66  
                        _ECCP1AS 000FB6                          _ECCP2AS 000F64  
                      ?_WriteI2C 0023          __size_of_ADC_Initialize 0016  
             __size_of_motor_fwd 0036                    _I2C_send_data 7AB4  
                        _OSCCON2 000FD2    I2C_send_data@register_address 0024  
                        _OSCTUNE 000F9B                          _PWM1CON 000FB7  
                        _PWM2CON 000F65                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _IdleI2C 7A66  
                        _IsOptoL 7982                          _IsOptoR 7996  
            __end_of_adcFunction 7A66             _ADC_InterruptHandler 0011  
                        __Hparam 0000                          __Lparam 0000  
                        _StopI2C 792A                       ??_StartI2C 0023  
                        __pcinit 7B98                       ??_WriteI2C 0023  
                 _I2C_Initialise 79C0                          __ramtop 0600  
                        __ptext0 7D7E                          __ptext1 7ADE  
                        __ptext2 7B62                          __ptext3 7A8C  
                        __ptext4 7A46                          __ptext5 7CD0  
                        __ptext6 79EC                          __ptext7 793C  
                        __ptext8 7B34                          __ptext9 792E  
                   __size_of_I2C 00AA                   ?_I2C_send_data 0024  
          _OSCILLATOR_Initialize 792E                        _T2CONbits 000FBA  
       ??_PIN_MANAGER_Initialize 0023       __size_of_SYSTEM_Initialize 001A  
           end_of_initialization 7BC4                    __Lmediumconst 0000  
              __end_of_motor_fwd 7B98                      ?_diagnostic 0023  
                        postdec1 000FE5                          postinc0 000FEE  
         __end_of_I2C_Initialise 79D6                        _PORTAbits 000F80  
                      _PORTBbits 000F81            __size_of_leftPosition 0028  
                    _adcFunction 7A46                  ?_I2C_Initialise 0023  
                      _IsBumperL 795A                        _IsBumperR 796E  
                  __pidataCOMRAM 794A                  ??_I2C_send_data 0026  
                 _ADC_Initialize 79D6           ?_OSCILLATOR_Initialize 0023  
                   _leftPosition 7A8C           __size_of_rightPosition 002A  
            start_initialization 7B98              _MCP23008_Initialise 7BCE  
      __size_of_EPWM1_Initialize 0020                      __end_of_I2C 7CD0  
__size_of_PIN_MANAGER_Initialize 002E              __size_of_diagnostic 00AE  
           ?_MCP23008_Initialise 0023        __size_of_EPWM2_Initialize 0020  
         __end_of_ADC_Initialize 79EC                       ?_IsBumperL 0023  
                     ?_IsBumperR 0023                __size_of_StartI2C 002C  
              __size_of_WriteI2C 0016                      __pbssCOMRAM 0001  
                      _adcResult 000F         __size_of_TMR2_Initialize 000E  
                       ?_IdleI2C 0023                         ?_IsOptoL 0023  
                       ?_IsOptoR 0023                    _rightPosition 7ADE  
          ??_MCP23008_Initialise 0027           _PIN_MANAGER_Initialize 7B34  
                       ?_StopI2C 0023                  ?_ADC_Initialize 0023  
                   _intialResult 000D                         _LATCbits 000F8B  
                 ?_rightPosition 0023                     ??_diagnostic 0023  
                       _PIR1bits 000F9E                        _motor_fwd 7B62  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                       _SSP1CON3 000FCB                         _PSTR1CON 000FB9  
                       _PSTR2CON 000F63                         _SSP1STAT 000FC7  
                    ??_IsBumperL 0023                      ??_IsBumperR 0023  
                     _ADCON0bits 000FC2                 _EPWM1_Initialize 7A06  
             __end_of_diagnostic 7D7E                      _INTCON2bits 000FF1  
                   ?_adcFunction 0023                        copy_data0 7BAC  
              ??_TMR2_Initialize 0023                 __size_of_IdleI2C 0026  
               ??_I2C_Initialise 0023                 __size_of_IsOptoL 0014  
               __size_of_IsOptoR 0014                         __Hrparam 0000  
               _EPWM2_Initialize 7A26                         __Lrparam 0000  
                     ?_motor_fwd 0023                         _StartI2C 7B08  
               __size_of_StopI2C 0004          ??_OSCILLATOR_Initialize 0023  
                       _WriteI2C 79AA                         __ptext10 7A26  
                       __ptext11 7A06                         __ptext20 7AB4  
                       __ptext12 79D6                         __ptext21 79AA  
                       __ptext13 7BCE                         __ptext22 792A  
                       __ptext14 7996                         __ptext23 7B08  
                       __ptext15 7982                         __ptext24 7A66  
                       __ptext16 796E                         __ptext17 795A  
                       __ptext18 79C0                         __ptext19 7C26  
                   _SSP1CON2bits 000FC5                  ??_rightPosition 0023  
                  __size_of_main 0282                     _SSP1STATbits 000FC7  
                  motor_fwd@STAT 0024            __end_of_I2C_send_data 7ADE  
                     _INTCONbits 000FF2          ?_PIN_MANAGER_Initialize 0023  
               ??_ADC_Initialize 0023                      ??_motor_fwd 0025  
                   motor_fwd@dir 0025                     motor_fwd@spd 0023  
                 _positionHolder 0005       I2C_send_data@register_data 0025  
    __end_of_MCP23008_Initialise 7C26   __end_of_PIN_MANAGER_Initialize 7B62  
           __size_of_adcFunction 0020         __end_of_EPWM1_Initialize 7A26  
