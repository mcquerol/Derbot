

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Nov 26 15:23:51 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 05/05/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F25K22 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  007A60                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _digits
    79  007A60  3E                 	db	62
    80  007A61  38                 	db	56
    81  007A62  3F                 	db	63
    82  007A63  06                 	db	6
    83  007A64  5B                 	db	91
    84  007A65  4F                 	db	79
    85  007A66  66                 	db	102
    86  007A67  6D                 	db	109
    87  007A68  7D                 	db	125
    88  007A69  07                 	db	7
    89  007A6A  7F                 	db	127
    90  007A6B  67                 	db	103
    91                           
    92                           ;initializer for _LDRVAL
    93  007A6C  0028               	dw	40
    94  0000                     _CCPTMRS0bits	set	3913
    95  0000                     _ANSELA	set	3896
    96  0000                     _ANSELB	set	3897
    97  0000                     _ANSELC	set	3898
    98  0000                     _SSP1STATbits	set	4039
    99  0000                     _SSP1BUF	set	4041
   100  0000                     _SSP1CON2bits	set	4037
   101  0000                     _SSP1ADD	set	4040
   102  0000                     _SSP1CON3	set	4043
   103  0000                     _SSP1CON2	set	4037
   104  0000                     _SSP1CON1	set	4038
   105  0000                     _SSP1STAT	set	4039
   106  0000                     _PORTAbits	set	3968
   107  0000                     _LATCbits	set	3979
   108  0000                     _PORTBbits	set	3969
   109  0000                     _ADCON0bits	set	4034
   110  0000                     _ADCON0	set	4034
   111  0000                     _ADRESH	set	4036
   112  0000                     _ADRESL	set	4035
   113  0000                     _ADCON2	set	4032
   114  0000                     _ADCON1	set	4033
   115  0000                     _CCPR2L	set	3943
   116  0000                     _CCPR2H	set	3944
   117  0000                     _PSTR2CON	set	3939
   118  0000                     _PWM2CON	set	3941
   119  0000                     _ECCP2AS	set	3940
   120  0000                     _CCP2CON	set	3942
   121  0000                     _CCPR1L	set	4030
   122  0000                     _CCPR1H	set	4031
   123  0000                     _PSTR1CON	set	4025
   124  0000                     _PWM1CON	set	4023
   125  0000                     _ECCP1AS	set	4022
   126  0000                     _CCP1CON	set	4029
   127  0000                     _T2CONbits	set	4026
   128  0000                     _T2CON	set	4026
   129  0000                     _PIR1bits	set	3998
   130  0000                     _TMR2	set	4028
   131  0000                     _PR2	set	4027
   132  0000                     _INTCONbits	set	4082
   133  0000                     _INTCON2bits	set	4081
   134  0000                     _WPUB	set	3937
   135  0000                     _TRISC	set	3988
   136  0000                     _TRISB	set	3987
   137  0000                     _TRISA	set	3986
   138  0000                     _LATC	set	3979
   139  0000                     _LATB	set	3978
   140  0000                     _LATA	set	3977
   141  0000                     _OSCTUNE	set	3995
   142  0000                     _OSCCON2	set	4050
   143  0000                     _OSCCON	set	4051
   144                           
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148  007C6E                     __pcinit:
   149                           	callstack 0
   150  007C6E                     start_initialization:
   151                           	callstack 0
   152  007C6E                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (14 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157  007C6E  0E60               	movlw	low __pidataCOMRAM
   158  007C70  6EF6               	movwf	tblptrl,c
   159  007C72  0E7A               	movlw	high __pidataCOMRAM
   160  007C74  6EF7               	movwf	tblptrh,c
   161  007C76  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162  007C78  6EF8               	movwf	tblptru,c
   163  007C7A  EE00  F001         	lfsr	0,__pdataCOMRAM
   164  007C7E  EE10 F00E          	lfsr	1,14
   165  007C82                     copy_data0:
   166  007C82  0009               	tblrd		*+
   167  007C84  CFF5 FFEE          	movff	tablat,postinc0
   168  007C88  50E5               	movf	postdec1,w,c
   169  007C8A  50E1               	movf	fsr1l,w,c
   170  007C8C  E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to COMRAM (12 bytes)
   173  007C8E  EE00  F00F         	lfsr	0,__pbssCOMRAM
   174  007C92  0E0C               	movlw	12
   175  007C94                     clear_0:
   176  007C94  6AEE               	clrf	postinc0,c
   177  007C96  06E8               	decf	wreg,f,c
   178  007C98  E1FD               	bnz	clear_0
   179  007C9A                     end_of_initialization:
   180                           	callstack 0
   181  007C9A                     __end_of__initialization:
   182                           	callstack 0
   183  007C9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  007C9C  6EF8               	movwf	tblptru,c
   185  007C9E  0100               	movlb	0
   186  007CA0  EF1F  F03F         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189  00000F                     __pbssCOMRAM:
   190                           	callstack 0
   191  00000F                     _Lit:
   192                           	callstack 0
   193  00000F                     	ds	2
   194  000011                     _UnLit:
   195                           	callstack 0
   196  000011                     	ds	2
   197  000013                     _test:
   198                           	callstack 0
   199  000013                     	ds	2
   200  000015                     _intialResult:
   201                           	callstack 0
   202  000015                     	ds	2
   203  000017                     _adcResult:
   204                           	callstack 0
   205  000017                     	ds	2
   206  000019                     _ADC_InterruptHandler:
   207                           	callstack 0
   208  000019                     	ds	2
   209                           
   210                           	psect	dataCOMRAM
   211  000001                     __pdataCOMRAM:
   212                           	callstack 0
   213  000001                     _digits:
   214                           	callstack 0
   215  000001                     	ds	12
   216  00000D                     _LDRVAL:
   217                           	callstack 0
   218  00000D                     	ds	2
   219                           
   220                           	psect	cstackCOMRAM
   221  00001B                     __pcstackCOMRAM:
   222                           	callstack 0
   223  00001B                     ??_diagnostic:
   224  00001B                     ??_IdleI2C:
   225  00001B                     ??_StartI2C:
   226  00001B                     motor_fwd@spd:
   227                           	callstack 0
   228  00001B                     WriteI2C@data:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x0
   232  00001B                     	ds	1
   233  00001C                     motor_fwd@STAT:
   234                           	callstack 0
   235  00001C                     I2C_send_data@register_address:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x1
   239  00001C                     	ds	1
   240  00001D                     motor_fwd@dir:
   241                           	callstack 0
   242  00001D                     I2C_send_data@register_data:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x2
   246  00001D                     	ds	1
   247  00001E                     I2C_send_data@device_address:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x3
   251  00001E                     	ds	1
   252  00001F                     ??_I2C:
   253                           
   254                           ; 1 bytes @ 0x4
   255  00001F                     	ds	2
   256  000021                     ??_main:
   257                           
   258                           ; 1 bytes @ 0x6
   259  000021                     	ds	2
   260                           
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 63 in file "main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   280 ;;      Params:         0       0       0       0       0       0       0
   281 ;;      Locals:         0       0       0       0       0       0       0
   282 ;;      Temps:          2       0       0       0       0       0       0
   283 ;;      Totals:         2       0       0       0       0       0       0
   284 ;;Total ram usage:        2 bytes
   285 ;; Hardware stack levels required when called:    3
   286 ;; This function calls:
   287 ;;		_I2C
   288 ;;		_I2C_Initialise
   289 ;;		_IsBumperL
   290 ;;		_IsBumperR
   291 ;;		_IsOptoFarR
   292 ;;		_IsOptoL
   293 ;;		_IsOptoR
   294 ;;		_MCP23008_Initialise
   295 ;;		_SYSTEM_Initialize
   296 ;;		_adcFunction
   297 ;;		_diagnostic
   298 ;;		_motor_fwd
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text0
   305  007E3E                     __ptext0:
   306                           	callstack 0
   307  007E3E                     _main:
   308                           	callstack 28
   309  007E3E                     
   310                           ;main.c: 66:     SYSTEM_Initialize();
   311  007E3E  EC8A  F03D         	call	_SYSTEM_Initialize	;wreg free
   312                           
   313                           ;main.c: 67:     I2C_Initialise();
   314  007E42  EC74  F03D         	call	_I2C_Initialise	;wreg free
   315  007E46                     
   316                           ;main.c: 68:     MCP23008_Initialise();
   317  007E46  EC52  F03E         	call	_MCP23008_Initialise	;wreg free
   318  007E4A                     
   319                           ;main.c: 69:     diagnostic();
   320  007E4A  ECC8  F03E         	call	_diagnostic	;wreg free
   321  007E4E                     l1267:
   322                           
   323                           ;main.c: 71:     {;main.c: 73:         motor_fwd('L', 255, 1);
   324  007E4E  0EFF               	movlw	255
   325  007E50  6E1B               	movwf	motor_fwd@spd^0,c
   326  007E52  0E01               	movlw	1
   327  007E54  6E1C               	movwf	motor_fwd@STAT^0,c
   328  007E56  0E4C               	movlw	76
   329  007E58  EC1C  F03E         	call	_motor_fwd
   330  007E5C                     
   331                           ;main.c: 74:         motor_fwd('R', 250, 1);
   332  007E5C  0EFA               	movlw	250
   333  007E5E  6E1B               	movwf	motor_fwd@spd^0,c
   334  007E60  0E01               	movlw	1
   335  007E62  6E1C               	movwf	motor_fwd@STAT^0,c
   336  007E64  0E52               	movlw	82
   337  007E66  EC1C  F03E         	call	_motor_fwd
   338  007E6A                     
   339                           ;main.c: 76:         adcFunction();
   340  007E6A  ECB7  F03D         	call	_adcFunction	;wreg free
   341  007E6E                     
   342                           ;main.c: 77:         if (adcResult > LDRVAL)
   343  007E6E  BE18               	btfsc	(_adcResult+1)^0,7,c
   344  007E70  EF43  F03F         	goto	u391
   345  007E74  5018               	movf	(_adcResult+1)^0,w,c
   346  007E76  E109               	bnz	u390
   347  007E78  0E29               	movlw	41
   348  007E7A  5C17               	subwf	_adcResult^0,w,c
   349  007E7C  A0D8               	btfss	status,0,c
   350  007E7E  EF43  F03F         	goto	u391
   351  007E82  EF45  F03F         	goto	u390
   352  007E86                     u391:
   353  007E86  EF5E  F03F         	goto	l261
   354  007E8A                     u390:
   355  007E8A                     
   356                           ;main.c: 78:         {;main.c: 92:             if (IsBumperR())
   357  007E8A  EC41  F03D         	call	_IsBumperR	;wreg free
   358  007E8E  0900               	iorlw	0
   359  007E90  B4D8               	btfsc	status,2,c
   360  007E92  EF4D  F03F         	goto	u401
   361  007E96  EF4F  F03F         	goto	u400
   362  007E9A                     u401:
   363  007E9A  EF85  F03F         	goto	l1293
   364  007E9E                     u400:
   365  007E9E                     
   366                           ;main.c: 93:             {;main.c: 94:                 PORTBbits.RB3 = 1;
   367  007E9E  8681               	bsf	129,3,c	;volatile
   368  007EA0  8A8B               	bsf	139,5,c	;volatile
   369  007EA2                     
   370                           ;main.c: 96:                 UnLit++;
   371  007EA2  4A11               	infsnz	_UnLit^0,f,c
   372  007EA4  2A12               	incf	(_UnLit+1)^0,f,c
   373  007EA6                     
   374                           ;main.c: 97:                 _delay((unsigned long)((100)*(4000000/4000.0)));
   375  007EA6  0E82               	movlw	130
   376  007EA8  6E21               	movwf	??_main^0,c
   377  007EAA  0EDE               	movlw	222
   378  007EAC                     u487:
   379  007EAC  2EE8               	decfsz	wreg,f,c
   380  007EAE  D7FE               	bra	u487
   381  007EB0  2E21               	decfsz	??_main^0,f,c
   382  007EB2  D7FC               	bra	u487
   383  007EB4                     
   384                           ;main.c: 98:                 PORTBbits.RB3 = 0;
   385  007EB4  9681               	bcf	129,3,c	;volatile
   386  007EB6  9A8B               	bcf	139,5,c	;volatile
   387  007EB8  EF85  F03F         	goto	l1293
   388  007EBC                     l261:
   389  007EBC  8C8B               	bsf	139,6,c	;volatile
   390  007EBE                     
   391                           ;main.c: 107:         if (IsBumperL())
   392  007EBE  EC37  F03D         	call	_IsBumperL	;wreg free
   393  007EC2  0900               	iorlw	0
   394  007EC4  B4D8               	btfsc	status,2,c
   395  007EC6  EF67  F03F         	goto	u411
   396  007ECA  EF69  F03F         	goto	u410
   397  007ECE                     u411:
   398  007ECE  EF85  F03F         	goto	l1293
   399  007ED2                     u410:
   400  007ED2  BC8B               	btfsc	139,6,c	;volatile
   401  007ED4  EF6E  F03F         	goto	u421
   402  007ED8  EF71  F03F         	goto	u420
   403  007EDC                     u421:
   404  007EDC  0E01               	movlw	1
   405  007EDE  EF72  F03F         	goto	u426
   406  007EE2                     u420:
   407  007EE2  0E00               	movlw	0
   408  007EE4                     u426:
   409  007EE4  0AFF               	xorlw	255
   410  007EE6  6E21               	movwf	??_main^0,c
   411  007EE8  3A21               	swapf	??_main^0,f,c
   412  007EEA  4621               	rlncf	??_main^0,f,c
   413  007EEC  4621               	rlncf	??_main^0,f,c
   414  007EEE  508B               	movf	139,w,c	;volatile
   415  007EF0  1821               	xorwf	??_main^0,w,c
   416  007EF2  0BBF               	andlw	-65
   417  007EF4  1821               	xorwf	??_main^0,w,c
   418  007EF6  6E8B               	movwf	139,c	;volatile
   419  007EF8                     
   420                           ;main.c: 113:             Lit++;
   421  007EF8  4A0F               	infsnz	_Lit^0,f,c
   422  007EFA  2A10               	incf	(_Lit+1)^0,f,c
   423                           
   424                           ;main.c: 114:             _delay((unsigned long)((100)*(4000000/4000.0)));
   425  007EFC  0E82               	movlw	130
   426  007EFE  6E21               	movwf	??_main^0,c
   427  007F00  0EDE               	movlw	222
   428  007F02                     u497:
   429  007F02  2EE8               	decfsz	wreg,f,c
   430  007F04  D7FE               	bra	u497
   431  007F06  2E21               	decfsz	??_main^0,f,c
   432  007F08  D7FC               	bra	u497
   433  007F0A                     l1293:
   434                           
   435                           ;main.c: 121:     if (IsOptoR())
   436  007F0A  EC5F  F03D         	call	_IsOptoR	;wreg free
   437  007F0E  0900               	iorlw	0
   438  007F10  B4D8               	btfsc	status,2,c
   439  007F12  EF8D  F03F         	goto	u431
   440  007F16  EF8F  F03F         	goto	u430
   441  007F1A                     u431:
   442  007F1A  EF9F  F03F         	goto	l1297
   443  007F1E                     u430:
   444  007F1E                     
   445                           ;main.c: 122:     {;main.c: 123:         motor_fwd('L', 250, 1);
   446  007F1E  0EFA               	movlw	250
   447  007F20  6E1B               	movwf	motor_fwd@spd^0,c
   448  007F22  0E01               	movlw	1
   449  007F24  6E1C               	movwf	motor_fwd@STAT^0,c
   450  007F26  0E4C               	movlw	76
   451  007F28  EC1C  F03E         	call	_motor_fwd
   452                           
   453                           ;main.c: 124:         motor_fwd('R', 105, 1);
   454  007F2C  0E69               	movlw	105
   455  007F2E  6E1B               	movwf	motor_fwd@spd^0,c
   456  007F30  0E01               	movlw	1
   457  007F32  6E1C               	movwf	motor_fwd@STAT^0,c
   458  007F34  0E52               	movlw	82
   459  007F36  EC1C  F03E         	call	_motor_fwd
   460                           
   461                           ;main.c: 126:     }
   462  007F3A  EF27  F03F         	goto	l1267
   463  007F3E                     l1297:
   464  007F3E  EC55  F03D         	call	_IsOptoL	;wreg free
   465  007F42  0900               	iorlw	0
   466  007F44  B4D8               	btfsc	status,2,c
   467  007F46  EFA7  F03F         	goto	u441
   468  007F4A  EFA9  F03F         	goto	u440
   469  007F4E                     u441:
   470  007F4E  EFB9  F03F         	goto	l1301
   471  007F52                     u440:
   472  007F52                     
   473                           ;main.c: 128:     {;main.c: 129:         motor_fwd('L', 105, 1);
   474  007F52  0E69               	movlw	105
   475  007F54  6E1B               	movwf	motor_fwd@spd^0,c
   476  007F56  0E01               	movlw	1
   477  007F58  6E1C               	movwf	motor_fwd@STAT^0,c
   478  007F5A  0E4C               	movlw	76
   479  007F5C  EC1C  F03E         	call	_motor_fwd
   480                           
   481                           ;main.c: 130:         motor_fwd('R', 250, 1);
   482  007F60  0EFA               	movlw	250
   483  007F62  6E1B               	movwf	motor_fwd@spd^0,c
   484  007F64  0E01               	movlw	1
   485  007F66  6E1C               	movwf	motor_fwd@STAT^0,c
   486  007F68  0E52               	movlw	82
   487  007F6A  EC1C  F03E         	call	_motor_fwd
   488                           
   489                           ;main.c: 132:     }
   490  007F6E  EF27  F03F         	goto	l1267
   491  007F72                     l1301:
   492  007F72  EC55  F03D         	call	_IsOptoL	;wreg free
   493  007F76  0900               	iorlw	0
   494  007F78  B4D8               	btfsc	status,2,c
   495  007F7A  EFC1  F03F         	goto	u451
   496  007F7E  EFC3  F03F         	goto	u450
   497  007F82                     u451:
   498  007F82  EFFC  F03F         	goto	l267
   499  007F86                     u450:
   500  007F86  EC5F  F03D         	call	_IsOptoR	;wreg free
   501  007F8A  0900               	iorlw	0
   502  007F8C  B4D8               	btfsc	status,2,c
   503  007F8E  EFCB  F03F         	goto	u461
   504  007F92  EFCD  F03F         	goto	u460
   505  007F96                     u461:
   506  007F96  EFFC  F03F         	goto	l267
   507  007F9A                     u460:
   508  007F9A  EC4B  F03D         	call	_IsOptoFarR	;wreg free
   509  007F9E  0900               	iorlw	0
   510  007FA0  B4D8               	btfsc	status,2,c
   511  007FA2  EFD5  F03F         	goto	u471
   512  007FA6  EFD7  F03F         	goto	u470
   513  007FAA                     u471:
   514  007FAA  EFFC  F03F         	goto	l267
   515  007FAE                     u470:
   516  007FAE                     
   517                           ;main.c: 134:     {;main.c: 135:         _delay((unsigned long)((450)*(4000000/4000.0)))
      +                          ;
   518  007FAE  0E03               	movlw	3
   519  007FB0  6E22               	movwf	(??_main+1)^0,c
   520  007FB2  0E49               	movlw	73
   521  007FB4  6E21               	movwf	??_main^0,c
   522  007FB6  0E66               	movlw	102
   523  007FB8                     u507:
   524  007FB8  2EE8               	decfsz	wreg,f,c
   525  007FBA  D7FE               	bra	u507
   526  007FBC  2E21               	decfsz	??_main^0,f,c
   527  007FBE  D7FC               	bra	u507
   528  007FC0  2E22               	decfsz	(??_main+1)^0,f,c
   529  007FC2  D7FA               	bra	u507
   530  007FC4  D000               	nop2	
   531  007FC6                     
   532                           ;main.c: 136:         motor_fwd('L', 255, 0);
   533  007FC6  0EFF               	movlw	255
   534  007FC8  6E1B               	movwf	motor_fwd@spd^0,c
   535  007FCA  0E00               	movlw	0
   536  007FCC  6E1C               	movwf	motor_fwd@STAT^0,c
   537  007FCE  0E4C               	movlw	76
   538  007FD0  EC1C  F03E         	call	_motor_fwd
   539  007FD4                     
   540                           ;main.c: 137:         motor_fwd('R', 255, 0);
   541  007FD4  0EFF               	movlw	255
   542  007FD6  6E1B               	movwf	motor_fwd@spd^0,c
   543  007FD8  0E00               	movlw	0
   544  007FDA  6E1C               	movwf	motor_fwd@STAT^0,c
   545  007FDC  0E52               	movlw	82
   546  007FDE  EC1C  F03E         	call	_motor_fwd
   547  007FE2                     l271:
   548                           
   549                           ;main.c: 139:         {;main.c: 140:             _delay((unsigned long)((100)*(4000000/4
      +                          000.0)));
   550  007FE2  0E82               	movlw	130
   551  007FE4  6E21               	movwf	??_main^0,c
   552  007FE6  0EDE               	movlw	222
   553  007FE8                     u517:
   554  007FE8  2EE8               	decfsz	wreg,f,c
   555  007FEA  D7FE               	bra	u517
   556  007FEC  2E21               	decfsz	??_main^0,f,c
   557  007FEE  D7FC               	bra	u517
   558  007FF0                     
   559                           ;main.c: 141:                             I2C();
   560  007FF0  EC7E  F03E         	call	_I2C	;wreg free
   561  007FF4  EFF1  F03F         	goto	l271
   562  007FF8                     l267:
   563  007FF8  EF27  F03F         	goto	l1267
   564  007FFC  EF00  F000         	goto	start
   565  008000                     __end_of_main:
   566                           	callstack 0
   567                           
   568 ;; *************** function _motor_fwd *****************
   569 ;; Defined at:
   570 ;;		line 156 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  dir             1    wreg     unsigned char 
   573 ;;  spd             1    0[COMRAM] unsigned char 
   574 ;;  STAT            1    1[COMRAM] _Bool 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  dir             1    2[COMRAM] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   586 ;;      Params:         2       0       0       0       0       0       0
   587 ;;      Locals:         1       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0
   589 ;;      Totals:         3       0       0       0       0       0       0
   590 ;;Total ram usage:        3 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text1
   600  007C38                     __ptext1:
   601                           	callstack 0
   602  007C38                     _motor_fwd:
   603                           	callstack 30
   604                           
   605                           ;incstack = 0
   606                           ;motor_fwd@dir stored from wreg
   607  007C38  6E1D               	movwf	motor_fwd@dir^0,c
   608  007C3A                     
   609                           ;main.c: 156: void motor_fwd(unsigned char dir, unsigned char spd, _Bool STAT);main.c: 1
      +                          57: {;main.c: 158:     if (dir == 'L')
   610  007C3A  0E4C               	movlw	76
   611  007C3C  181D               	xorwf	motor_fwd@dir^0,w,c
   612  007C3E  A4D8               	btfss	status,2,c
   613  007C40  EF24  F03E         	goto	u361
   614  007C44  EF26  F03E         	goto	u360
   615  007C48                     u361:
   616  007C48  EF2F  F03E         	goto	l290
   617  007C4C                     u360:
   618  007C4C                     
   619                           ;main.c: 159:     {;main.c: 160:         CCPR2L = spd;
   620  007C4C  C01B  FF67         	movff	motor_fwd@spd,3943	;volatile
   621                           
   622                           ;main.c: 161:         PORTAbits.RA5 = STAT;
   623  007C50  B01C               	btfsc	motor_fwd@STAT^0,0,c
   624  007C52  D002               	bra	u375
   625  007C54  9A80               	bcf	128,5,c	;volatile
   626  007C56  D001               	bra	u376
   627  007C58                     u375:
   628  007C58  8A80               	bsf	128,5,c	;volatile
   629  007C5A                     u376:
   630                           
   631                           ;main.c: 162:     }
   632  007C5A  EF36  F03E         	goto	l292
   633  007C5E                     l290:
   634                           
   635                           ;main.c: 164:     {;main.c: 165:         CCPR1L = spd;
   636  007C5E  C01B  FFBE         	movff	motor_fwd@spd,4030	;volatile
   637                           
   638                           ;main.c: 166:         PORTAbits.RA2 = STAT;
   639  007C62  B01C               	btfsc	motor_fwd@STAT^0,0,c
   640  007C64  D002               	bra	u385
   641  007C66  9480               	bcf	128,2,c	;volatile
   642  007C68  D001               	bra	u386
   643  007C6A                     u385:
   644  007C6A  8480               	bsf	128,2,c	;volatile
   645  007C6C                     u386:
   646  007C6C                     l292:
   647  007C6C  0012               	return		;funcret
   648  007C6E                     __end_of_motor_fwd:
   649                           	callstack 0
   650                           
   651 ;; *************** function _diagnostic *****************
   652 ;; Defined at:
   653 ;;		line 147 in file "main.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   667 ;;      Params:         0       0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0
   669 ;;      Temps:          2       0       0       0       0       0       0
   670 ;;      Totals:         2       0       0       0       0       0       0
   671 ;;Total ram usage:        2 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text2
   681  007D90                     __ptext2:
   682                           	callstack 0
   683  007D90                     _diagnostic:
   684                           	callstack 30
   685  007D90  BA8B               	btfsc	139,5,c	;volatile
   686  007D92  EFCD  F03E         	goto	u61
   687  007D96  EFD0  F03E         	goto	u60
   688  007D9A                     u61:
   689  007D9A  0E01               	movlw	1
   690  007D9C  EFD1  F03E         	goto	u66
   691  007DA0                     u60:
   692  007DA0  0E00               	movlw	0
   693  007DA2                     u66:
   694  007DA2  0AFF               	xorlw	255
   695  007DA4  6E1B               	movwf	??_diagnostic^0,c
   696  007DA6  3A1B               	swapf	??_diagnostic^0,f,c
   697  007DA8  461B               	rlncf	??_diagnostic^0,f,c
   698  007DAA  508B               	movf	139,w,c	;volatile
   699  007DAC  181B               	xorwf	??_diagnostic^0,w,c
   700  007DAE  0BDF               	andlw	-33
   701  007DB0  181B               	xorwf	??_diagnostic^0,w,c
   702  007DB2  6E8B               	movwf	139,c	;volatile
   703  007DB4  BC8B               	btfsc	139,6,c	;volatile
   704  007DB6  EFDF  F03E         	goto	u71
   705  007DBA  EFE2  F03E         	goto	u70
   706  007DBE                     u71:
   707  007DBE  0E01               	movlw	1
   708  007DC0  EFE3  F03E         	goto	u76
   709  007DC4                     u70:
   710  007DC4  0E00               	movlw	0
   711  007DC6                     u76:
   712  007DC6  0AFF               	xorlw	255
   713  007DC8  6E1B               	movwf	??_diagnostic^0,c
   714  007DCA  3A1B               	swapf	??_diagnostic^0,f,c
   715  007DCC  461B               	rlncf	??_diagnostic^0,f,c
   716  007DCE  461B               	rlncf	??_diagnostic^0,f,c
   717  007DD0  508B               	movf	139,w,c	;volatile
   718  007DD2  181B               	xorwf	??_diagnostic^0,w,c
   719  007DD4  0BBF               	andlw	-65
   720  007DD6  181B               	xorwf	??_diagnostic^0,w,c
   721  007DD8  6E8B               	movwf	139,c	;volatile
   722  007DDA                     
   723                           ;main.c: 151:     _delay((unsigned long)((300)*(4000000/4000.0)));
   724  007DDA  0E02               	movlw	2
   725  007DDC  6E1C               	movwf	(??_diagnostic+1)^0,c
   726  007DDE  0E86               	movlw	134
   727  007DE0  6E1B               	movwf	??_diagnostic^0,c
   728  007DE2  0E99               	movlw	153
   729  007DE4                     u527:
   730  007DE4  2EE8               	decfsz	wreg,f,c
   731  007DE6  D7FE               	bra	u527
   732  007DE8  2E1B               	decfsz	??_diagnostic^0,f,c
   733  007DEA  D7FC               	bra	u527
   734  007DEC  2E1C               	decfsz	(??_diagnostic+1)^0,f,c
   735  007DEE  D7FA               	bra	u527
   736  007DF0  F000               	nop	
   737  007DF2  BA8B               	btfsc	139,5,c	;volatile
   738  007DF4  EFFE  F03E         	goto	u81
   739  007DF8  EF01  F03F         	goto	u80
   740  007DFC                     u81:
   741  007DFC  0E01               	movlw	1
   742  007DFE  EF02  F03F         	goto	u86
   743  007E02                     u80:
   744  007E02  0E00               	movlw	0
   745  007E04                     u86:
   746  007E04  0AFF               	xorlw	255
   747  007E06  6E1B               	movwf	??_diagnostic^0,c
   748  007E08  3A1B               	swapf	??_diagnostic^0,f,c
   749  007E0A  461B               	rlncf	??_diagnostic^0,f,c
   750  007E0C  508B               	movf	139,w,c	;volatile
   751  007E0E  181B               	xorwf	??_diagnostic^0,w,c
   752  007E10  0BDF               	andlw	-33
   753  007E12  181B               	xorwf	??_diagnostic^0,w,c
   754  007E14  6E8B               	movwf	139,c	;volatile
   755  007E16  BC8B               	btfsc	139,6,c	;volatile
   756  007E18  EF10  F03F         	goto	u91
   757  007E1C  EF13  F03F         	goto	u90
   758  007E20                     u91:
   759  007E20  0E01               	movlw	1
   760  007E22  EF14  F03F         	goto	u96
   761  007E26                     u90:
   762  007E26  0E00               	movlw	0
   763  007E28                     u96:
   764  007E28  0AFF               	xorlw	255
   765  007E2A  6E1B               	movwf	??_diagnostic^0,c
   766  007E2C  3A1B               	swapf	??_diagnostic^0,f,c
   767  007E2E  461B               	rlncf	??_diagnostic^0,f,c
   768  007E30  461B               	rlncf	??_diagnostic^0,f,c
   769  007E32  508B               	movf	139,w,c	;volatile
   770  007E34  181B               	xorwf	??_diagnostic^0,w,c
   771  007E36  0BBF               	andlw	-65
   772  007E38  181B               	xorwf	??_diagnostic^0,w,c
   773  007E3A  6E8B               	movwf	139,c	;volatile
   774  007E3C  0012               	return		;funcret
   775  007E3E                     __end_of_diagnostic:
   776                           	callstack 0
   777                           
   778 ;; *************** function _adcFunction *****************
   779 ;; Defined at:
   780 ;;		line 273 in file "main.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		None
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   794 ;;      Params:         0       0       0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0
   797 ;;      Totals:         0       0       0       0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text3
   808  007B6E                     __ptext3:
   809                           	callstack 0
   810  007B6E                     _adcFunction:
   811                           	callstack 30
   812  007B6E                     
   813                           ;main.c: 275:     _delay((unsigned long)((7)*(4000000/4000000.0)));
   814  007B6E  D000               	nop2		;2 cycle nop
   815  007B70  D000               	nop2		;2 cycle nop
   816  007B72  D000               	nop2		;2 cycle nop
   817  007B74  F000               	nop	
   818                           
   819                           ;main.c: 276:     ADCON0bits.GO = 1;
   820  007B76  82C2               	bsf	194,1,c	;volatile
   821  007B78                     l331:
   822                           
   823                           ;main.c: 277:     while (ADCON0bits.GO == 1)
   824  007B78  B2C2               	btfsc	194,1,c	;volatile
   825  007B7A  EFC1  F03D         	goto	u131
   826  007B7E  EFC3  F03D         	goto	u130
   827  007B82                     u131:
   828  007B82  EFBC  F03D         	goto	l331
   829  007B86                     u130:
   830  007B86                     
   831                           ;main.c: 282:     adcResult = ADRESH;
   832  007B86  CFC4 F017          	movff	4036,_adcResult	;volatile
   833  007B8A  6A18               	clrf	(_adcResult+1)^0,c
   834  007B8C  0012               	return		;funcret
   835  007B8E                     __end_of_adcFunction:
   836                           	callstack 0
   837                           
   838 ;; *************** function _SYSTEM_Initialize *****************
   839 ;; Defined at:
   840 ;;		line 50 in file "mcc_generated_files/mcc.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, status,2, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   854 ;;      Params:         0       0       0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0
   857 ;;      Totals:         0       0       0       0       0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    1
   861 ;; This function calls:
   862 ;;		_ADC_Initialize
   863 ;;		_EPWM1_Initialize
   864 ;;		_EPWM2_Initialize
   865 ;;		_OSCILLATOR_Initialize
   866 ;;		_PIN_MANAGER_Initialize
   867 ;;		_TMR2_Initialize
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text4
   874  007B14                     __ptext4:
   875                           	callstack 0
   876  007B14                     _SYSTEM_Initialize:
   877                           	callstack 29
   878  007B14                     
   879                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   880  007B14  EC05  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
   881                           
   882                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   883  007B18  EC22  F03D         	call	_OSCILLATOR_Initialize	;wreg free
   884                           
   885                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
   886  007B1C  EC97  F03D         	call	_EPWM1_Initialize	;wreg free
   887                           
   888                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
   889  007B20  EC29  F03D         	call	_TMR2_Initialize	;wreg free
   890                           
   891                           ;mcc_generated_files/mcc.c: 57:     EPWM2_Initialize();
   892  007B24  ECA7  F03D         	call	_EPWM2_Initialize	;wreg free
   893                           
   894                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
   895  007B28  EC7F  F03D         	call	_ADC_Initialize	;wreg free
   896  007B2C  0012               	return		;funcret
   897  007B2E                     __end_of_SYSTEM_Initialize:
   898                           	callstack 0
   899                           
   900 ;; *************** function _TMR2_Initialize *****************
   901 ;; Defined at:
   902 ;;		line 62 in file "mcc_generated_files/tmr2.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   916 ;;      Params:         0       0       0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0       0       0
   918 ;;      Temps:          0       0       0       0       0       0       0
   919 ;;      Totals:         0       0       0       0       0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_SYSTEM_Initialize
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text5
   930  007A52                     __ptext5:
   931                           	callstack 0
   932  007A52                     _TMR2_Initialize:
   933                           	callstack 29
   934  007A52                     
   935                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
   936  007A52  68BB               	setf	187,c	;volatile
   937  007A54                     
   938                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
   939  007A54  0E00               	movlw	0
   940  007A56  6EBC               	movwf	188,c	;volatile
   941  007A58                     
   942                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
   943  007A58  929E               	bcf	158,1,c	;volatile
   944                           
   945                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
   946  007A5A  0E04               	movlw	4
   947  007A5C  6EBA               	movwf	186,c	;volatile
   948  007A5E  0012               	return		;funcret
   949  007A60                     __end_of_TMR2_Initialize:
   950                           	callstack 0
   951                           
   952 ;; *************** function _PIN_MANAGER_Initialize *****************
   953 ;; Defined at:
   954 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, status,2
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   968 ;;      Params:         0       0       0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0
   971 ;;      Totals:         0       0       0       0       0       0       0
   972 ;;Total ram usage:        0 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_SYSTEM_Initialize
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text6
   982  007C0A                     __ptext6:
   983                           	callstack 0
   984  007C0A                     _PIN_MANAGER_Initialize:
   985                           	callstack 29
   986  007C0A                     
   987                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   988  007C0A  0E00               	movlw	0
   989  007C0C  6E89               	movwf	137,c	;volatile
   990                           
   991                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   992  007C0E  0E00               	movlw	0
   993  007C10  6E8A               	movwf	138,c	;volatile
   994                           
   995                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   996  007C12  0E00               	movlw	0
   997  007C14  6E8B               	movwf	139,c	;volatile
   998                           
   999                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDB;
  1000  007C16  0EDB               	movlw	219
  1001  007C18  6E92               	movwf	146,c	;volatile
  1002                           
  1003                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF7;
  1004  007C1A  0EF7               	movlw	247
  1005  007C1C  6E93               	movwf	147,c	;volatile
  1006                           
  1007                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0b00011000;
  1008  007C1E  0E18               	movlw	24
  1009  007C20  6E94               	movwf	148,c	;volatile
  1010                           
  1011                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  1012  007C22  0E00               	movlw	0
  1013  007C24  010F               	movlb	15	; () banked
  1014  007C26  6F3A               	movwf	58,b	;volatile
  1015                           
  1016                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1017  007C28  0E00               	movlw	0
  1018  007C2A  6F39               	movwf	57,b	;volatile
  1019                           
  1020                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0B;
  1021  007C2C  0E0B               	movlw	11
  1022  007C2E  6F38               	movwf	56,b	;volatile
  1023                           
  1024                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1025  007C30  0E00               	movlw	0
  1026  007C32  6E61               	movwf	97,c	;volatile
  1027  007C34                     
  1028                           ; BSR set to: 15
  1029                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1030  007C34  8EF1               	bsf	241,7,c	;volatile
  1031  007C36                     
  1032                           ; BSR set to: 15
  1033  007C36  0012               	return		;funcret
  1034  007C38                     __end_of_PIN_MANAGER_Initialize:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _OSCILLATOR_Initialize *****************
  1038 ;; Defined at:
  1039 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1053 ;;      Params:         0       0       0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0
  1056 ;;      Totals:         0       0       0       0       0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_SYSTEM_Initialize
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text7
  1067  007A44                     __ptext7:
  1068                           	callstack 0
  1069  007A44                     _OSCILLATOR_Initialize:
  1070                           	callstack 29
  1071  007A44                     
  1072                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
  1073  007A44  0E30               	movlw	48
  1074  007A46  6ED3               	movwf	211,c	;volatile
  1075                           
  1076                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  1077  007A48  0E04               	movlw	4
  1078  007A4A  6ED2               	movwf	210,c	;volatile
  1079                           
  1080                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1081  007A4C  0E00               	movlw	0
  1082  007A4E  6E9B               	movwf	155,c	;volatile
  1083  007A50  0012               	return		;funcret
  1084  007A52                     __end_of_OSCILLATOR_Initialize:
  1085                           	callstack 0
  1086                           
  1087 ;; *************** function _EPWM2_Initialize *****************
  1088 ;; Defined at:
  1089 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1103 ;;      Params:         0       0       0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_SYSTEM_Initialize
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text8
  1117  007B4E                     __ptext8:
  1118                           	callstack 0
  1119  007B4E                     _EPWM2_Initialize:
  1120                           	callstack 29
  1121  007B4E                     
  1122                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  1123  007B4E  0E3C               	movlw	60
  1124  007B50  6E66               	movwf	102,c	;volatile
  1125                           
  1126                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  1127  007B52  0E00               	movlw	0
  1128  007B54  6E64               	movwf	100,c	;volatile
  1129                           
  1130                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  1131  007B56  0E80               	movlw	128
  1132  007B58  6E65               	movwf	101,c	;volatile
  1133                           
  1134                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  1135  007B5A  0E01               	movlw	1
  1136  007B5C  6E63               	movwf	99,c	;volatile
  1137                           
  1138                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  1139  007B5E  0E00               	movlw	0
  1140  007B60  6E68               	movwf	104,c	;volatile
  1141                           
  1142                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x7F;
  1143  007B62  0E7F               	movlw	127
  1144  007B64  6E67               	movwf	103,c	;volatile
  1145                           
  1146                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  1147  007B66  0EE7               	movlw	-25
  1148  007B68  010F               	movlb	15	; () banked
  1149  007B6A  1749               	andwf	73,f,b	;volatile
  1150  007B6C                     
  1151                           ; BSR set to: 15
  1152  007B6C  0012               	return		;funcret
  1153  007B6E                     __end_of_EPWM2_Initialize:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _EPWM1_Initialize *****************
  1157 ;; Defined at:
  1158 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1172 ;;      Params:         0       0       0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; This function calls:
  1179 ;;		Nothing
  1180 ;; This function is called by:
  1181 ;;		_SYSTEM_Initialize
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text9
  1186  007B2E                     __ptext9:
  1187                           	callstack 0
  1188  007B2E                     _EPWM1_Initialize:
  1189                           	callstack 29
  1190  007B2E                     
  1191                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  1192  007B2E  0E3C               	movlw	60
  1193  007B30  6EBD               	movwf	189,c	;volatile
  1194                           
  1195                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  1196  007B32  0E00               	movlw	0
  1197  007B34  6EB6               	movwf	182,c	;volatile
  1198                           
  1199                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  1200  007B36  0E80               	movlw	128
  1201  007B38  6EB7               	movwf	183,c	;volatile
  1202                           
  1203                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  1204  007B3A  0E01               	movlw	1
  1205  007B3C  6EB9               	movwf	185,c	;volatile
  1206                           
  1207                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  1208  007B3E  0E00               	movlw	0
  1209  007B40  6EBF               	movwf	191,c	;volatile
  1210                           
  1211                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  1212  007B42  0E7F               	movlw	127
  1213  007B44  6EBE               	movwf	190,c	;volatile
  1214                           
  1215                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  1216  007B46  0EFC               	movlw	-4
  1217  007B48  010F               	movlb	15	; () banked
  1218  007B4A  1749               	andwf	73,f,b	;volatile
  1219  007B4C                     
  1220                           ; BSR set to: 15
  1221  007B4C  0012               	return		;funcret
  1222  007B4E                     __end_of_EPWM1_Initialize:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _ADC_Initialize *****************
  1226 ;; Defined at:
  1227 ;;		line 62 in file "mcc_generated_files/adc.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1241 ;;      Params:         0       0       0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0
  1244 ;;      Totals:         0       0       0       0       0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_SYSTEM_Initialize
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text10
  1255  007AFE                     __ptext10:
  1256                           	callstack 0
  1257  007AFE                     _ADC_Initialize:
  1258                           	callstack 29
  1259  007AFE                     
  1260                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1261  007AFE  0E00               	movlw	0
  1262  007B00  6EC1               	movwf	193,c	;volatile
  1263                           
  1264                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  1265  007B02  0E04               	movlw	4
  1266  007B04  6EC0               	movwf	192,c	;volatile
  1267                           
  1268                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1269  007B06  0E00               	movlw	0
  1270  007B08  6EC3               	movwf	195,c	;volatile
  1271                           
  1272                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1273  007B0A  0E00               	movlw	0
  1274  007B0C  6EC4               	movwf	196,c	;volatile
  1275                           
  1276                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x0D;
  1277  007B0E  0E0D               	movlw	13
  1278  007B10  6EC2               	movwf	194,c	;volatile
  1279  007B12  0012               	return		;funcret
  1280  007B14                     __end_of_ADC_Initialize:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _MCP23008_Initialise *****************
  1284 ;; Defined at:
  1285 ;;		line 179 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1299 ;;      Params:         0       0       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    2
  1306 ;; This function calls:
  1307 ;;		_I2C_send_data
  1308 ;;		_IdleI2C
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text11
  1315  007CA4                     __ptext11:
  1316                           	callstack 0
  1317  007CA4                     _MCP23008_Initialise:
  1318                           	callstack 28
  1319  007CA4                     
  1320                           ;main.c: 181:     I2C_send_data(0x40, 0x00, 0x00);
  1321  007CA4  0E00               	movlw	0
  1322  007CA6  6E1C               	movwf	I2C_send_data@register_address^0,c
  1323  007CA8  0E00               	movlw	0
  1324  007CAA  6E1D               	movwf	I2C_send_data@register_data^0,c
  1325  007CAC  0E40               	movlw	64
  1326  007CAE  ECDA  F03D         	call	_I2C_send_data
  1327                           
  1328                           ;main.c: 182:     IdleI2C();
  1329  007CB2  ECC7  F03D         	call	_IdleI2C	;wreg free
  1330                           
  1331                           ;main.c: 183:     I2C_send_data(0x40, 0x01, 0x00);
  1332  007CB6  0E01               	movlw	1
  1333  007CB8  6E1C               	movwf	I2C_send_data@register_address^0,c
  1334  007CBA  0E00               	movlw	0
  1335  007CBC  6E1D               	movwf	I2C_send_data@register_data^0,c
  1336  007CBE  0E40               	movlw	64
  1337  007CC0  ECDA  F03D         	call	_I2C_send_data
  1338                           
  1339                           ;main.c: 184:     IdleI2C();
  1340  007CC4  ECC7  F03D         	call	_IdleI2C	;wreg free
  1341                           
  1342                           ;main.c: 185:     I2C_send_data(0x40, 0x02, 0x00);
  1343  007CC8  0E02               	movlw	2
  1344  007CCA  6E1C               	movwf	I2C_send_data@register_address^0,c
  1345  007CCC  0E00               	movlw	0
  1346  007CCE  6E1D               	movwf	I2C_send_data@register_data^0,c
  1347  007CD0  0E40               	movlw	64
  1348  007CD2  ECDA  F03D         	call	_I2C_send_data
  1349                           
  1350                           ;main.c: 186:     IdleI2C();
  1351  007CD6  ECC7  F03D         	call	_IdleI2C	;wreg free
  1352                           
  1353                           ;main.c: 187:     I2C_send_data(0x40, 0x05, 0x3E);
  1354  007CDA  0E05               	movlw	5
  1355  007CDC  6E1C               	movwf	I2C_send_data@register_address^0,c
  1356  007CDE  0E3E               	movlw	62
  1357  007CE0  6E1D               	movwf	I2C_send_data@register_data^0,c
  1358  007CE2  0E40               	movlw	64
  1359  007CE4  ECDA  F03D         	call	_I2C_send_data
  1360                           
  1361                           ;main.c: 188:     IdleI2C();
  1362  007CE8  ECC7  F03D         	call	_IdleI2C	;wreg free
  1363                           
  1364                           ;main.c: 189:     I2C_send_data(0x40, 0x06, 0x00);
  1365  007CEC  0E06               	movlw	6
  1366  007CEE  6E1C               	movwf	I2C_send_data@register_address^0,c
  1367  007CF0  0E00               	movlw	0
  1368  007CF2  6E1D               	movwf	I2C_send_data@register_data^0,c
  1369  007CF4  0E40               	movlw	64
  1370  007CF6  ECDA  F03D         	call	_I2C_send_data
  1371  007CFA  0012               	return		;funcret
  1372  007CFC                     __end_of_MCP23008_Initialise:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function _IsOptoR *****************
  1376 ;; Defined at:
  1377 ;;		line 301 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      _Bool 
  1384 ;; Registers used:
  1385 ;;		wreg
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1391 ;;      Params:         0       0       0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text12
  1405  007ABE                     __ptext12:
  1406                           	callstack 0
  1407  007ABE                     _IsOptoR:
  1408                           	callstack 30
  1409  007ABE                     
  1410                           ;main.c: 303:     return (PORTBbits.RB1 == 0);
  1411  007ABE  A281               	btfss	129,1,c	;volatile
  1412  007AC0  EF64  F03D         	goto	u181
  1413  007AC4  EF67  F03D         	goto	u180
  1414  007AC8                     u181:
  1415  007AC8  0E01               	movlw	1
  1416  007ACA  EF68  F03D         	goto	u190
  1417  007ACE                     u180:
  1418  007ACE  0E00               	movlw	0
  1419  007AD0                     u190:
  1420  007AD0  0012               	return		;funcret
  1421  007AD2                     __end_of_IsOptoR:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _IsOptoL *****************
  1425 ;; Defined at:
  1426 ;;		line 296 in file "main.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      _Bool 
  1433 ;; Registers used:
  1434 ;;		wreg
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1440 ;;      Params:         0       0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text13
  1454  007AAA                     __ptext13:
  1455                           	callstack 0
  1456  007AAA                     _IsOptoL:
  1457                           	callstack 30
  1458  007AAA                     
  1459                           ;main.c: 298:     return (PORTBbits.RB2 == 0);
  1460  007AAA  A481               	btfss	129,2,c	;volatile
  1461  007AAC  EF5A  F03D         	goto	u201
  1462  007AB0  EF5D  F03D         	goto	u200
  1463  007AB4                     u201:
  1464  007AB4  0E01               	movlw	1
  1465  007AB6  EF5E  F03D         	goto	u210
  1466  007ABA                     u200:
  1467  007ABA  0E00               	movlw	0
  1468  007ABC                     u210:
  1469  007ABC  0012               	return		;funcret
  1470  007ABE                     __end_of_IsOptoL:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _IsOptoFarR *****************
  1474 ;; Defined at:
  1475 ;;		line 306 in file "main.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      _Bool 
  1482 ;; Registers used:
  1483 ;;		wreg
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1489 ;;      Params:         0       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0
  1492 ;;      Totals:         0       0       0       0       0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text14
  1503  007A96                     __ptext14:
  1504                           	callstack 0
  1505  007A96                     _IsOptoFarR:
  1506                           	callstack 30
  1507  007A96                     
  1508                           ;main.c: 308:     return (PORTBbits.RB0 == 0);
  1509  007A96  A081               	btfss	129,0,c	;volatile
  1510  007A98  EF50  F03D         	goto	u221
  1511  007A9C  EF53  F03D         	goto	u220
  1512  007AA0                     u221:
  1513  007AA0  0E01               	movlw	1
  1514  007AA2  EF54  F03D         	goto	u230
  1515  007AA6                     u220:
  1516  007AA6  0E00               	movlw	0
  1517  007AA8                     u230:
  1518  007AA8  0012               	return		;funcret
  1519  007AAA                     __end_of_IsOptoFarR:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _IsBumperR *****************
  1523 ;; Defined at:
  1524 ;;		line 291 in file "main.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      _Bool 
  1531 ;; Registers used:
  1532 ;;		wreg
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1538 ;;      Params:         0       0       0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text15
  1552  007A82                     __ptext15:
  1553                           	callstack 0
  1554  007A82                     _IsBumperR:
  1555                           	callstack 30
  1556  007A82                     
  1557                           ;main.c: 293:     return (PORTBbits.RB5 == 0);
  1558  007A82  AA81               	btfss	129,5,c	;volatile
  1559  007A84  EF46  F03D         	goto	u141
  1560  007A88  EF49  F03D         	goto	u140
  1561  007A8C                     u141:
  1562  007A8C  0E01               	movlw	1
  1563  007A8E  EF4A  F03D         	goto	u150
  1564  007A92                     u140:
  1565  007A92  0E00               	movlw	0
  1566  007A94                     u150:
  1567  007A94  0012               	return		;funcret
  1568  007A96                     __end_of_IsBumperR:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _IsBumperL *****************
  1572 ;; Defined at:
  1573 ;;		line 286 in file "main.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      _Bool 
  1580 ;; Registers used:
  1581 ;;		wreg
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1587 ;;      Params:         0       0       0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0
  1590 ;;      Totals:         0       0       0       0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text16
  1601  007A6E                     __ptext16:
  1602                           	callstack 0
  1603  007A6E                     _IsBumperL:
  1604                           	callstack 30
  1605  007A6E                     
  1606                           ;main.c: 288:     return (PORTBbits.RB4 == 0);
  1607  007A6E  A881               	btfss	129,4,c	;volatile
  1608  007A70  EF3C  F03D         	goto	u161
  1609  007A74  EF3F  F03D         	goto	u160
  1610  007A78                     u161:
  1611  007A78  0E01               	movlw	1
  1612  007A7A  EF40  F03D         	goto	u170
  1613  007A7E                     u160:
  1614  007A7E  0E00               	movlw	0
  1615  007A80                     u170:
  1616  007A80  0012               	return		;funcret
  1617  007A82                     __end_of_IsBumperL:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _I2C_Initialise *****************
  1621 ;; Defined at:
  1622 ;;		line 170 in file "main.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1636 ;;      Params:         0       0       0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0
  1639 ;;      Totals:         0       0       0       0       0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text17
  1650  007AE8                     __ptext17:
  1651                           	callstack 0
  1652  007AE8                     _I2C_Initialise:
  1653                           	callstack 30
  1654  007AE8                     
  1655                           ;main.c: 172:     SSP1STAT = 0x00;
  1656  007AE8  0E00               	movlw	0
  1657  007AEA  6EC7               	movwf	199,c	;volatile
  1658                           
  1659                           ;main.c: 173:     SSP1CON1 = 0x28;
  1660  007AEC  0E28               	movlw	40
  1661  007AEE  6EC6               	movwf	198,c	;volatile
  1662                           
  1663                           ;main.c: 174:     SSP1CON2 = 0x00;
  1664  007AF0  0E00               	movlw	0
  1665  007AF2  6EC5               	movwf	197,c	;volatile
  1666                           
  1667                           ;main.c: 175:     SSP1CON3 = 0x08;
  1668  007AF4  0E08               	movlw	8
  1669  007AF6  6ECB               	movwf	203,c	;volatile
  1670                           
  1671                           ;main.c: 176:     SSP1ADD = 0x09;
  1672  007AF8  0E09               	movlw	9
  1673  007AFA  6EC8               	movwf	200,c	;volatile
  1674  007AFC  0012               	return		;funcret
  1675  007AFE                     __end_of_I2C_Initialise:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _I2C *****************
  1679 ;; Defined at:
  1680 ;;		line 229 in file "main.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1694 ;;      Params:         0       0       0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0
  1696 ;;      Temps:          2       0       0       0       0       0       0
  1697 ;;      Totals:         2       0       0       0       0       0       0
  1698 ;;Total ram usage:        2 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    2
  1701 ;; This function calls:
  1702 ;;		_I2C_send_data
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text18
  1709  007CFC                     __ptext18:
  1710                           	callstack 0
  1711  007CFC                     _I2C:
  1712                           	callstack 28
  1713  007CFC                     
  1714                           ;main.c: 232:     I2C_send_data(0x40, 0x09, digits[0]);
  1715  007CFC  0E09               	movlw	9
  1716  007CFE  6E1C               	movwf	I2C_send_data@register_address^0,c
  1717  007D00  C001  F01D         	movff	_digits,I2C_send_data@register_data
  1718  007D04  0E40               	movlw	64
  1719  007D06  ECDA  F03D         	call	_I2C_send_data
  1720  007D0A                     
  1721                           ;main.c: 233:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1722  007D0A  0E03               	movlw	3
  1723  007D0C  6E20               	movwf	(??_I2C+1)^0,c
  1724  007D0E  0E8A               	movlw	138
  1725  007D10  6E1F               	movwf	??_I2C^0,c
  1726  007D12  0E56               	movlw	86
  1727  007D14                     u537:
  1728  007D14  2EE8               	decfsz	wreg,f,c
  1729  007D16  D7FE               	bra	u537
  1730  007D18  2E1F               	decfsz	??_I2C^0,f,c
  1731  007D1A  D7FC               	bra	u537
  1732  007D1C  2E20               	decfsz	(??_I2C+1)^0,f,c
  1733  007D1E  D7FA               	bra	u537
  1734  007D20                     
  1735                           ;main.c: 234:     I2C_send_data(0x40, 0x09, digits[UnLit - 1]);
  1736  007D20  0E09               	movlw	9
  1737  007D22  6E1C               	movwf	I2C_send_data@register_address^0,c
  1738  007D24  0E00               	movlw	low (_digits+65535)
  1739  007D26  2411               	addwf	_UnLit^0,w,c
  1740  007D28  6ED9               	movwf	fsr2l,c
  1741  007D2A  0E00               	movlw	high (_digits+65535)
  1742  007D2C  2012               	addwfc	(_UnLit+1)^0,w,c
  1743  007D2E  6EDA               	movwf	fsr2h,c
  1744  007D30  50DF               	movf	indf2,w,c
  1745  007D32  6E1D               	movwf	I2C_send_data@register_data^0,c
  1746  007D34  0E40               	movlw	64
  1747  007D36  ECDA  F03D         	call	_I2C_send_data
  1748  007D3A                     
  1749                           ;main.c: 235:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1750  007D3A  0E03               	movlw	3
  1751  007D3C  6E20               	movwf	(??_I2C+1)^0,c
  1752  007D3E  0E8A               	movlw	138
  1753  007D40  6E1F               	movwf	??_I2C^0,c
  1754  007D42  0E56               	movlw	86
  1755  007D44                     u547:
  1756  007D44  2EE8               	decfsz	wreg,f,c
  1757  007D46  D7FE               	bra	u547
  1758  007D48  2E1F               	decfsz	??_I2C^0,f,c
  1759  007D4A  D7FC               	bra	u547
  1760  007D4C  2E20               	decfsz	(??_I2C+1)^0,f,c
  1761  007D4E  D7FA               	bra	u547
  1762  007D50                     
  1763                           ;main.c: 236:     I2C_send_data(0x40, 0x09, digits[1]);
  1764  007D50  0E09               	movlw	9
  1765  007D52  6E1C               	movwf	I2C_send_data@register_address^0,c
  1766  007D54  C002  F01D         	movff	_digits+1,I2C_send_data@register_data
  1767  007D58  0E40               	movlw	64
  1768  007D5A  ECDA  F03D         	call	_I2C_send_data
  1769  007D5E                     
  1770                           ;main.c: 237:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1771  007D5E  0E03               	movlw	3
  1772  007D60  6E20               	movwf	(??_I2C+1)^0,c
  1773  007D62  0E8A               	movlw	138
  1774  007D64  6E1F               	movwf	??_I2C^0,c
  1775  007D66  0E56               	movlw	86
  1776  007D68                     u557:
  1777  007D68  2EE8               	decfsz	wreg,f,c
  1778  007D6A  D7FE               	bra	u557
  1779  007D6C  2E1F               	decfsz	??_I2C^0,f,c
  1780  007D6E  D7FC               	bra	u557
  1781  007D70  2E20               	decfsz	(??_I2C+1)^0,f,c
  1782  007D72  D7FA               	bra	u557
  1783  007D74                     
  1784                           ;main.c: 238:     I2C_send_data(0x40, 0x09, digits[Lit - 1]);
  1785  007D74  0E09               	movlw	9
  1786  007D76  6E1C               	movwf	I2C_send_data@register_address^0,c
  1787  007D78  0E00               	movlw	low (_digits+65535)
  1788  007D7A  240F               	addwf	_Lit^0,w,c
  1789  007D7C  6ED9               	movwf	fsr2l,c
  1790  007D7E  0E00               	movlw	high (_digits+65535)
  1791  007D80  2010               	addwfc	(_Lit+1)^0,w,c
  1792  007D82  6EDA               	movwf	fsr2h,c
  1793  007D84  50DF               	movf	indf2,w,c
  1794  007D86  6E1D               	movwf	I2C_send_data@register_data^0,c
  1795  007D88  0E40               	movlw	64
  1796  007D8A  ECDA  F03D         	call	_I2C_send_data
  1797  007D8E  0012               	return		;funcret
  1798  007D90                     __end_of_I2C:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _I2C_send_data *****************
  1802 ;; Defined at:
  1803 ;;		line 192 in file "main.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  device_addre    1    wreg     unsigned char 
  1806 ;;  register_add    1    1[COMRAM] unsigned char 
  1807 ;;  register_dat    1    2[COMRAM] unsigned char 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  device_addre    1    3[COMRAM] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1819 ;;      Params:         2       0       0       0       0       0       0
  1820 ;;      Locals:         1       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0
  1822 ;;      Totals:         3       0       0       0       0       0       0
  1823 ;;Total ram usage:        3 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    1
  1826 ;; This function calls:
  1827 ;;		_IdleI2C
  1828 ;;		_StartI2C
  1829 ;;		_StopI2C
  1830 ;;		_WriteI2C
  1831 ;; This function is called by:
  1832 ;;		_MCP23008_Initialise
  1833 ;;		_I2C
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text19
  1838  007BB4                     __ptext19:
  1839                           	callstack 0
  1840  007BB4                     _I2C_send_data:
  1841                           	callstack 28
  1842                           
  1843                           ;incstack = 0
  1844                           ;I2C_send_data@device_address stored from wreg
  1845  007BB4  6E1E               	movwf	I2C_send_data@device_address^0,c
  1846  007BB6                     
  1847                           ;main.c: 192: void I2C_send_data(unsigned char device_address, unsigned char register_ad
      +                          dress, unsigned char register_data);main.c: 193: {;main.c: 194:     StartI2C();
  1848  007BB6  ECEF  F03D         	call	_StartI2C	;wreg free
  1849  007BBA                     
  1850                           ;main.c: 195:     WriteI2C(device_address);
  1851  007BBA  501E               	movf	I2C_send_data@device_address^0,w,c
  1852  007BBC  EC69  F03D         	call	_WriteI2C
  1853  007BC0                     
  1854                           ;main.c: 196:     IdleI2C();
  1855  007BC0  ECC7  F03D         	call	_IdleI2C	;wreg free
  1856                           
  1857                           ;main.c: 197:     WriteI2C(register_address);
  1858  007BC4  501C               	movf	I2C_send_data@register_address^0,w,c
  1859  007BC6  EC69  F03D         	call	_WriteI2C
  1860  007BCA                     
  1861                           ;main.c: 198:     IdleI2C();
  1862  007BCA  ECC7  F03D         	call	_IdleI2C	;wreg free
  1863  007BCE                     
  1864                           ;main.c: 199:     WriteI2C(register_data);
  1865  007BCE  501D               	movf	I2C_send_data@register_data^0,w,c
  1866  007BD0  EC69  F03D         	call	_WriteI2C
  1867                           
  1868                           ;main.c: 200:     IdleI2C();
  1869  007BD4  ECC7  F03D         	call	_IdleI2C	;wreg free
  1870  007BD8                     
  1871                           ;main.c: 201:     StopI2C();
  1872  007BD8  EC20  F03D         	call	_StopI2C	;wreg free
  1873  007BDC  0012               	return		;funcret
  1874  007BDE                     __end_of_I2C_send_data:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _WriteI2C *****************
  1878 ;; Defined at:
  1879 ;;		line 218 in file "main.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  data            1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  data            1    0[COMRAM] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1893 ;;      Params:         0       0       0       0       0       0       0
  1894 ;;      Locals:         1       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0
  1896 ;;      Totals:         1       0       0       0       0       0       0
  1897 ;;Total ram usage:        1 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_I2C_send_data
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text20
  1907  007AD2                     __ptext20:
  1908                           	callstack 0
  1909  007AD2                     _WriteI2C:
  1910                           	callstack 28
  1911                           
  1912                           ;incstack = 0
  1913                           ;WriteI2C@data stored from wreg
  1914  007AD2  6E1B               	movwf	WriteI2C@data^0,c
  1915  007AD4                     
  1916                           ;main.c: 218: void WriteI2C(unsigned char data);main.c: 219: {;main.c: 220:     SSP1BUF 
      +                          = data;
  1917  007AD4  C01B  FFC9         	movff	WriteI2C@data,4041	;volatile
  1918  007AD8                     l316:
  1919  007AD8  B0C7               	btfsc	199,0,c	;volatile
  1920  007ADA  EF71  F03D         	goto	u51
  1921  007ADE  EF73  F03D         	goto	u50
  1922  007AE2                     u51:
  1923  007AE2  EF6C  F03D         	goto	l316
  1924  007AE6                     u50:
  1925  007AE6  0012               	return		;funcret
  1926  007AE8                     __end_of_WriteI2C:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _StopI2C *****************
  1930 ;; Defined at:
  1931 ;;		line 224 in file "main.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		None
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1945 ;;      Params:         0       0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_I2C_send_data
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text21
  1959  007A40                     __ptext21:
  1960                           	callstack 0
  1961  007A40                     _StopI2C:
  1962                           	callstack 28
  1963  007A40                     
  1964                           ;main.c: 226:     SSP1CON2bits.PEN = 1;
  1965  007A40  84C5               	bsf	197,2,c	;volatile
  1966  007A42  0012               	return		;funcret
  1967  007A44                     __end_of_StopI2C:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _StartI2C *****************
  1971 ;; Defined at:
  1972 ;;		line 209 in file "main.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1986 ;;      Params:         0       0       0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0
  1988 ;;      Temps:          1       0       0       0       0       0       0
  1989 ;;      Totals:         1       0       0       0       0       0       0
  1990 ;;Total ram usage:        1 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_I2C_send_data
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text22
  2000  007BDE                     __ptext22:
  2001                           	callstack 0
  2002  007BDE                     _StartI2C:
  2003                           	callstack 28
  2004  007BDE                     
  2005                           ;main.c: 211:     PIR1bits.SSPIF = 0;
  2006  007BDE  969E               	bcf	158,3,c	;volatile
  2007                           
  2008                           ;main.c: 212:     SSP1CON2bits.SEN = 1;
  2009  007BE0  80C5               	bsf	197,0,c	;volatile
  2010  007BE2                     l310:
  2011  007BE2  B4C7               	btfsc	199,2,c	;volatile
  2012  007BE4  EFF6  F03D         	goto	u31
  2013  007BE8  EFF8  F03D         	goto	u30
  2014  007BEC                     u31:
  2015  007BEC  EFF1  F03D         	goto	l310
  2016  007BF0                     u30:
  2017  007BF0  CFC5 F01B          	movff	4037,??_StartI2C	;volatile
  2018  007BF4  0E1F               	movlw	31
  2019  007BF6  161B               	andwf	??_StartI2C^0,f,c
  2020  007BF8  A4D8               	btfss	status,2,c
  2021  007BFA  EF01  F03E         	goto	u41
  2022  007BFE  EF03  F03E         	goto	u40
  2023  007C02                     u41:
  2024  007C02  EFF1  F03D         	goto	l310
  2025  007C06                     u40:
  2026  007C06                     
  2027                           ;main.c: 215:     PIR1bits.SSPIF = 0;
  2028  007C06  969E               	bcf	158,3,c	;volatile
  2029  007C08  0012               	return		;funcret
  2030  007C0A                     __end_of_StartI2C:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _IdleI2C *****************
  2034 ;; Defined at:
  2035 ;;		line 204 in file "main.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2049 ;;      Params:         0       0       0       0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0
  2051 ;;      Temps:          1       0       0       0       0       0       0
  2052 ;;      Totals:         1       0       0       0       0       0       0
  2053 ;;Total ram usage:        1 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_MCP23008_Initialise
  2059 ;;		_I2C_send_data
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text23
  2064  007B8E                     __ptext23:
  2065                           	callstack 0
  2066  007B8E                     _IdleI2C:
  2067                           	callstack 29
  2068  007B8E                     l1027:
  2069  007B8E  CFC5 F01B          	movff	4037,??_IdleI2C	;volatile
  2070  007B92  0E1F               	movlw	31
  2071  007B94  161B               	andwf	??_IdleI2C^0,f,c
  2072  007B96  A4D8               	btfss	status,2,c
  2073  007B98  EFD0  F03D         	goto	u11
  2074  007B9C  EFD2  F03D         	goto	u10
  2075  007BA0                     u11:
  2076  007BA0  EFC7  F03D         	goto	l1027
  2077  007BA4                     u10:
  2078  007BA4  B2C7               	btfsc	199,1,c	;volatile
  2079  007BA6  EFD7  F03D         	goto	u21
  2080  007BAA  EFD9  F03D         	goto	u20
  2081  007BAE                     u21:
  2082  007BAE  EFC7  F03D         	goto	l1027
  2083  007BB2                     u20:
  2084  007BB2  0012               	return		;funcret
  2085  007BB4                     __end_of_IdleI2C:
  2086                           	callstack 0
  2087  0000                     
  2088                           	psect	rparam
  2089  0000                     
  2090                           	psect	idloc
  2091                           
  2092                           ;Config register IDLOC0 @ 0x200000
  2093                           ;	unspecified, using default values
  2094  200000                     	org	2097152
  2095  200000  FF                 	db	255
  2096                           
  2097                           ;Config register IDLOC1 @ 0x200001
  2098                           ;	unspecified, using default values
  2099  200001                     	org	2097153
  2100  200001  FF                 	db	255
  2101                           
  2102                           ;Config register IDLOC2 @ 0x200002
  2103                           ;	unspecified, using default values
  2104  200002                     	org	2097154
  2105  200002  FF                 	db	255
  2106                           
  2107                           ;Config register IDLOC3 @ 0x200003
  2108                           ;	unspecified, using default values
  2109  200003                     	org	2097155
  2110  200003  FF                 	db	255
  2111                           
  2112                           ;Config register IDLOC4 @ 0x200004
  2113                           ;	unspecified, using default values
  2114  200004                     	org	2097156
  2115  200004  FF                 	db	255
  2116                           
  2117                           ;Config register IDLOC5 @ 0x200005
  2118                           ;	unspecified, using default values
  2119  200005                     	org	2097157
  2120  200005  FF                 	db	255
  2121                           
  2122                           ;Config register IDLOC6 @ 0x200006
  2123                           ;	unspecified, using default values
  2124  200006                     	org	2097158
  2125  200006  FF                 	db	255
  2126                           
  2127                           ;Config register IDLOC7 @ 0x200007
  2128                           ;	unspecified, using default values
  2129  200007                     	org	2097159
  2130  200007  FF                 	db	255
  2131                           
  2132                           	psect	config
  2133                           
  2134                           ; Padding undefined space
  2135  300000                     	org	3145728
  2136  300000  FF                 	db	255
  2137                           
  2138                           ;Config register CONFIG1H @ 0x300001
  2139                           ;	Oscillator Selection bits
  2140                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  2141                           ;	4X PLL Enable
  2142                           ;	PLLCFG = OFF, Oscillator used directly
  2143                           ;	Primary clock enable bit
  2144                           ;	PRICLKEN = ON, Primary clock enabled
  2145                           ;	Fail-Safe Clock Monitor Enable bit
  2146                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2147                           ;	Internal/External Oscillator Switchover bit
  2148                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2149  300001                     	org	3145729
  2150  300001  23                 	db	35
  2151                           
  2152                           ;Config register CONFIG2L @ 0x300002
  2153                           ;	Power-up Timer Enable bit
  2154                           ;	PWRTEN = OFF, Power up timer disabled
  2155                           ;	Brown-out Reset Enable bits
  2156                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2157                           ;	Brown Out Reset Voltage bits
  2158                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2159  300002                     	org	3145730
  2160  300002  1F                 	db	31
  2161                           
  2162                           ;Config register CONFIG2H @ 0x300003
  2163                           ;	Watchdog Timer Enable bits
  2164                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2165                           ;	Watchdog Timer Postscale Select bits
  2166                           ;	WDTPS = 32768, 1:32768
  2167  300003                     	org	3145731
  2168  300003  3C                 	db	60
  2169                           
  2170                           ; Padding undefined space
  2171  300004                     	org	3145732
  2172  300004  FF                 	db	255
  2173                           
  2174                           ;Config register CONFIG3H @ 0x300005
  2175                           ;	CCP2 MUX bit
  2176                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2177                           ;	PORTB A/D Enable bit
  2178                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2179                           ;	P3A/CCP3 Mux bit
  2180                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2181                           ;	HFINTOSC Fast Start-up
  2182                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2183                           ;	Timer3 Clock input mux bit
  2184                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2185                           ;	ECCP2 B output mux bit
  2186                           ;	P2BMX = PORTB5, P2B is on RB5
  2187                           ;	MCLR Pin Enable bit
  2188                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2189  300005                     	org	3145733
  2190  300005  BF                 	db	191
  2191                           
  2192                           ;Config register CONFIG4L @ 0x300006
  2193                           ;	Stack Full/Underflow Reset Enable bit
  2194                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2195                           ;	Single-Supply ICSP Enable bit
  2196                           ;	LVP = OFF, Single-Supply ICSP disabled
  2197                           ;	Extended Instruction Set Enable bit
  2198                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2199                           ;	Background Debug
  2200                           ;	DEBUG = OFF, Disabled
  2201  300006                     	org	3145734
  2202  300006  81                 	db	129
  2203                           
  2204                           ; Padding undefined space
  2205  300007                     	org	3145735
  2206  300007  FF                 	db	255
  2207                           
  2208                           ;Config register CONFIG5L @ 0x300008
  2209                           ;	Code Protection Block 0
  2210                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2211                           ;	Code Protection Block 1
  2212                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2213                           ;	Code Protection Block 2
  2214                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2215                           ;	Code Protection Block 3
  2216                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2217  300008                     	org	3145736
  2218  300008  0F                 	db	15
  2219                           
  2220                           ;Config register CONFIG5H @ 0x300009
  2221                           ;	Boot Block Code Protection bit
  2222                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2223                           ;	Data EEPROM Code Protection bit
  2224                           ;	CPD = OFF, Data EEPROM not code-protected
  2225  300009                     	org	3145737
  2226  300009  C0                 	db	192
  2227                           
  2228                           ;Config register CONFIG6L @ 0x30000A
  2229                           ;	Write Protection Block 0
  2230                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2231                           ;	Write Protection Block 1
  2232                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2233                           ;	Write Protection Block 2
  2234                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2235                           ;	Write Protection Block 3
  2236                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2237  30000A                     	org	3145738
  2238  30000A  0F                 	db	15
  2239                           
  2240                           ;Config register CONFIG6H @ 0x30000B
  2241                           ;	Configuration Register Write Protection bit
  2242                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2243                           ;	Boot Block Write Protection bit
  2244                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2245                           ;	Data EEPROM Write Protection bit
  2246                           ;	WRTD = OFF, Data EEPROM not write-protected
  2247  30000B                     	org	3145739
  2248  30000B  E0                 	db	224
  2249                           
  2250                           ;Config register CONFIG7L @ 0x30000C
  2251                           ;	Table Read Protection Block 0
  2252                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2253                           ;	Table Read Protection Block 1
  2254                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2255                           ;	Table Read Protection Block 2
  2256                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2257                           ;	Table Read Protection Block 3
  2258                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2259  30000C                     	org	3145740
  2260  30000C  0F                 	db	15
  2261                           
  2262                           ;Config register CONFIG7H @ 0x30000D
  2263                           ;	Boot Block Table Read Protection bit
  2264                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2265  30000D                     	org	3145741
  2266  30000D  40                 	db	64
  2267                           tosu	equ	0xFFF
  2268                           tosh	equ	0xFFE
  2269                           tosl	equ	0xFFD
  2270                           stkptr	equ	0xFFC
  2271                           pclatu	equ	0xFFB
  2272                           pclath	equ	0xFFA
  2273                           pcl	equ	0xFF9
  2274                           tblptru	equ	0xFF8
  2275                           tblptrh	equ	0xFF7
  2276                           tblptrl	equ	0xFF6
  2277                           tablat	equ	0xFF5
  2278                           prodh	equ	0xFF4
  2279                           prodl	equ	0xFF3
  2280                           indf0	equ	0xFEF
  2281                           postinc0	equ	0xFEE
  2282                           postdec0	equ	0xFED
  2283                           preinc0	equ	0xFEC
  2284                           plusw0	equ	0xFEB
  2285                           fsr0h	equ	0xFEA
  2286                           fsr0l	equ	0xFE9
  2287                           wreg	equ	0xFE8
  2288                           indf1	equ	0xFE7
  2289                           postinc1	equ	0xFE6
  2290                           postdec1	equ	0xFE5
  2291                           preinc1	equ	0xFE4
  2292                           plusw1	equ	0xFE3
  2293                           fsr1h	equ	0xFE2
  2294                           fsr1l	equ	0xFE1
  2295                           bsr	equ	0xFE0
  2296                           indf2	equ	0xFDF
  2297                           postinc2	equ	0xFDE
  2298                           postdec2	equ	0xFDD
  2299                           preinc2	equ	0xFDC
  2300                           plusw2	equ	0xFDB
  2301                           fsr2h	equ	0xFDA
  2302                           fsr2l	equ	0xFD9
  2303                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_I2C
    _MCP23008_Initialise->_I2C_send_data
    _I2C->_I2C_send_data
    _I2C_send_data->_IdleI2C
    _I2C_send_data->_StartI2C
    _I2C_send_data->_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4224
                                              6 COMRAM     2     2      0
                                _I2C
                     _I2C_Initialise
                          _IsBumperL
                          _IsBumperR
                         _IsOptoFarR
                            _IsOptoL
                            _IsOptoR
                _MCP23008_Initialise
                  _SYSTEM_Initialize
                        _adcFunction
                         _diagnostic
                          _motor_fwd
 ---------------------------------------------------------------------------------
 (1) _motor_fwd                                            3     1      2    1326
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _diagnostic                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adcFunction                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP23008_Initialise                                  0     0      0    1449
                      _I2C_send_data
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (1) _IsOptoR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoFarR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C                                                  2     2      0    1449
                                              4 COMRAM     2     2      0
                      _I2C_send_data
 ---------------------------------------------------------------------------------
 (2) _I2C_send_data                                        3     1      2    1449
                                              1 COMRAM     3     1      2
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
   _I2C_Initialise
   _IsBumperL
   _IsBumperR
   _IsOptoFarR
   _IsOptoL
   _IsOptoR
   _MCP23008_Initialise
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
     _IdleI2C
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
   _adcFunction
   _diagnostic
   _motor_fwd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      22       1       35.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22       9        0.0%
DATA                 0      0      22      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Nov 26 15:23:51 2020

                             l21 7B2C                               l24 7A50  
                             l51 7C36                               l67 7A5E  
                             u10 7BA4                               u11 7BA0  
                             u20 7BB2                               u21 7BAE  
                             u30 7BF0                               u31 7BEC  
                             u40 7C06                               u41 7C02  
                             u50 7AE6                               u51 7AE2  
                             u60 7DA0                               u61 7D9A  
                             u70 7DC4                               u71 7DBE  
                             u80 7E02                               u81 7DFC  
                             u90 7E26                               u66 7DA2  
                             u91 7E20                               u76 7DC6  
                             u86 7E04                               u96 7E28  
                            l103 7B4C                              l123 7B6C  
                            l301 7BDC                              l310 7BE2  
                            l312 7C06                              l313 7C08  
                            l145 7B12                              l322 7A42  
                            l307 7BB2                              l331 7B78  
                            _I2C 7CFC                              l316 7AD8  
                            l340 7A94                              l325 7D8E  
                            l333 7B86                              l261 7EBC  
                            l334 7B8C                              l319 7AE6  
                            l343 7ABC                              l271 7FE2  
                            l256 7EA0                              l337 7A80  
                            l281 7DB4                              l346 7AD0  
                            l290 7C5E                              l267 7FF8  
                            l292 7C6C                              l349 7AA8  
                            l295 7AFC                              l287 7E3C  
                            l279 7D90                              l298 7CFA  
                            u200 7ABA                              u201 7AB4  
                            u210 7ABC                              u130 7B86  
                            u131 7B82                              u140 7A92  
                            u220 7AA6                              u141 7A8C  
                            u221 7AA0                              u150 7A94  
                            u230 7AA8                              u160 7A7E  
                            u400 7E9E                              u161 7A78  
                            u401 7E9A                              u170 7A80  
                            u410 7ED2                              u411 7ECE  
                            u180 7ACE                              u420 7EE2  
                            u181 7AC8                              u421 7EDC  
                            u190 7AD0                              u430 7F1E  
                            _PR2 000FBB                              u431 7F1A  
                            u360 7C4C                              u440 7F52  
                            u361 7C48                              u441 7F4E  
                            u450 7F86                              u426 7EE4  
                            u507 7FB8                              u451 7F82  
                            u460 7F9A                              u517 7FE8  
                            u461 7F96                              u470 7FAE  
                            u390 7E8A                              u527 7DE4  
                            u375 7C58                              u471 7FAA  
                            u391 7E86                              u376 7C5A  
                            u537 7D14                              u385 7C6A  
                            u386 7C6C                              u547 7D44  
                            u557 7D68                              u487 7EAC  
                            u497 7F02                              _Lit 000F  
                _TMR2_Initialize 7A52                              wreg 000FE8  
       __end_of_EPWM2_Initialize 7B6E                             ?_I2C 001B  
                           l1101 7AAA                             l1031 7BDE  
                           l1025 7B8E                             l1033 7BF0  
                           l1105 7A96                             l1041 7C34  
                           l1027 7B8E                             l1035 7AD4  
                           l1043 7A44                             l1051 7A58  
                           l1029 7BA4                             l1037 7A40  
                           l1045 7B2E                             l1053 7B4E  
                           l1301 7F72                             l1231 7BBA  
                           l1071 7AE8                             l1055 7AFE  
                           l1039 7C0A                             l1047 7A52  
                           l1311 7FD4                             l1303 7F86  
                           l1233 7BC0                             l1241 7CA4  
                           l1049 7A54                             l1081 7E16  
                           l1313 7FF0                             l1305 7F9A  
                           l1235 7BCA                             l1251 7D20  
                           l1075 7D90                             l1243 7C3A  
                           l1307 7FAE                             l1237 7BCE  
                           l1229 7BB6                             l1253 7D3A  
                           l1093 7A6E                             l1069 7B14  
                           l1077 7DDA                             l1245 7C4C  
                           l1309 7FC6                             l1261 7E3E  
                           l1239 7BD8                             l1255 7D50  
                           l1247 7CFC                             l1087 7B6E  
                           l1079 7DF2                             l1271 7E6A  
                           l1263 7E46                             l1257 7D5E  
                           l1249 7D0A                             l1089 7A82  
                           l1097 7ABE                             l1281 7EA6  
                           l1273 7E6E                             l1265 7E4A  
                           l1259 7D74                             l1291 7EF8  
                           l1283 7EB4                             l1275 7E8A  
                           l1267 7E4E                             l1285 7EB6  
                           l1277 7E9E                             l1293 7F0A  
                           l1269 7E5C                             l1295 7F1E  
                           l1287 7EBE                             l1279 7EA2  
                           l1297 7F3E                             l1289 7ED2  
                           l1299 7F52                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _TMR2 000FBC                             _WPUB 000F61  
                           _main 7E3E                             _test 0013  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             start 0000  
                __end_of_IdleI2C 7BB4                     ___param_bank 000000  
                __end_of_IsOptoL 7ABE                  __end_of_IsOptoR 7AD2  
                          ??_I2C 001F   __size_of_OSCILLATOR_Initialize 000E  
  __end_of_OSCILLATOR_Initialize 7A52                  __end_of_StopI2C 7A44  
                          ?_main 001B                            _T2CON 000FBA  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _UnLit 0011  
                     _IsOptoFarR 7A96                            tablat 000FF5  
                          status 000FD8                  __initialization 7C6E  
                   __end_of_main 8000          __end_of_TMR2_Initialize 7A60  
                         ??_main 0021                    __activetblptr 000002  
             __size_of_IsBumperL 0014               __size_of_IsBumperR 0014  
               __end_of_StartI2C 7C0A                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR1H 000FBF                           _CCPR2H 000F68  
                         _CCPR1L 000FBE                           _CCPR2L 000F67  
               __end_of_WriteI2C 7AE8                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                         _LDRVAL 000D                        ??_IdleI2C 001B  
                         _OSCCON 000FD3                        ??_IsOptoL 001B  
                      ??_IsOptoR 001B                     _CCPTMRS0bits 000F49  
                      ??_StopI2C 001B                           _digits 0001  
                         clear_0 7C94          __size_of_I2C_Initialise 0016  
                   WriteI2C@data 001B                     __pdataCOMRAM 0001  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      ?_IsOptoFarR 001B  
              _SYSTEM_Initialize 7B14                       __accesstop 0060  
        __end_of__initialization 7C9A               ?_SYSTEM_Initialize 001B  
                  ___rparam_used 000001           __size_of_I2C_send_data 002A  
              __end_of_IsBumperL 7A82                __end_of_IsBumperR 7A96  
              ?_EPWM1_Initialize 001B                   __pcstackCOMRAM 001B  
            ??_SYSTEM_Initialize 001B               ??_EPWM1_Initialize 001B  
               ?_TMR2_Initialize 001B                ?_EPWM2_Initialize 001B  
                  ??_adcFunction 001B        __end_of_SYSTEM_Initialize 7B2E  
             ??_EPWM2_Initialize 001B     __size_of_MCP23008_Initialise 0058  
                     _diagnostic 7D90      I2C_send_data@device_address 001E  
                      ?_StartI2C 001B                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          _ECCP1AS 000FB6  
                        _ECCP2AS 000F64                        ?_WriteI2C 001B  
            __size_of_IsOptoFarR 0014          __size_of_ADC_Initialize 0016  
             __size_of_motor_fwd 0036                    _I2C_send_data 7BB4  
                        _OSCCON2 000FD2    I2C_send_data@register_address 001C  
                        _OSCTUNE 000F9B                          _PWM1CON 000FB7  
                        _PWM2CON 000F65                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _IdleI2C 7B8E  
                        _IsOptoL 7AAA                          _IsOptoR 7ABE  
            __end_of_adcFunction 7B8E             _ADC_InterruptHandler 0019  
                        __Hparam 0000                          __Lparam 0000  
                        _StopI2C 7A40                       ??_StartI2C 001B  
                        __pcinit 7C6E                       ??_WriteI2C 001B  
                 _I2C_Initialise 7AE8                          __ramtop 0600  
                        __ptext0 7E3E                          __ptext1 7C38  
                        __ptext2 7D90                          __ptext3 7B6E  
                        __ptext4 7B14                          __ptext5 7A52  
                        __ptext6 7C0A                          __ptext7 7A44  
                        __ptext8 7B4E                          __ptext9 7B2E  
                   __size_of_I2C 0094                   ?_I2C_send_data 001C  
          _OSCILLATOR_Initialize 7A44                        _T2CONbits 000FBA  
       ??_PIN_MANAGER_Initialize 001B       __size_of_SYSTEM_Initialize 001A  
           end_of_initialization 7C9A                    __Lmediumconst 0000  
              __end_of_motor_fwd 7C6E                      ?_diagnostic 001B  
                        postdec1 000FE5                          postinc0 000FEE  
         __end_of_I2C_Initialise 7AFE                        _PORTAbits 000F80  
                      _PORTBbits 000F81                      _adcFunction 7B6E  
                   ??_IsOptoFarR 001B                  ?_I2C_Initialise 001B  
                      _IsBumperL 7A6E                        _IsBumperR 7A82  
                  __pidataCOMRAM 7A60                  ??_I2C_send_data 001E  
                 _ADC_Initialize 7AFE               __end_of_IsOptoFarR 7AAA  
         ?_OSCILLATOR_Initialize 001B              start_initialization 7C6E  
            _MCP23008_Initialise 7CA4        __size_of_EPWM1_Initialize 0020  
                    __end_of_I2C 7D90  __size_of_PIN_MANAGER_Initialize 002E  
            __size_of_diagnostic 00AE             ?_MCP23008_Initialise 001B  
      __size_of_EPWM2_Initialize 0020           __end_of_ADC_Initialize 7B14  
                     ?_IsBumperL 001B                       ?_IsBumperR 001B  
              __size_of_StartI2C 002C                __size_of_WriteI2C 0016  
                    __pbssCOMRAM 000F                        _adcResult 0017  
       __size_of_TMR2_Initialize 000E                         ?_IdleI2C 001B  
                       ?_IsOptoL 001B                         ?_IsOptoR 001B  
          ??_MCP23008_Initialise 001F           _PIN_MANAGER_Initialize 7C0A  
                       ?_StopI2C 001B                  ?_ADC_Initialize 001B  
                   _intialResult 0015                         _LATCbits 000F8B  
                   ??_diagnostic 001B                         _PIR1bits 000F9E  
                      _motor_fwd 7C38                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                         _SSP1CON3 000FCB  
                       _PSTR1CON 000FB9                         _PSTR2CON 000F63  
                       _SSP1STAT 000FC7                      ??_IsBumperL 001B  
                    ??_IsBumperR 001B                       _ADCON0bits 000FC2  
               _EPWM1_Initialize 7B2E               __end_of_diagnostic 7E3E  
                    _INTCON2bits 000FF1                     ?_adcFunction 001B  
                      copy_data0 7C82                ??_TMR2_Initialize 001B  
               __size_of_IdleI2C 0026                 ??_I2C_Initialise 001B  
               __size_of_IsOptoL 0014                 __size_of_IsOptoR 0014  
                       __Hrparam 0000                 _EPWM2_Initialize 7B4E  
                       __Lrparam 0000                       ?_motor_fwd 001B  
                       _StartI2C 7BDE                 __size_of_StopI2C 0004  
        ??_OSCILLATOR_Initialize 001B                         _WriteI2C 7AD2  
                       __ptext10 7AFE                         __ptext11 7CA4  
                       __ptext20 7AD2                         __ptext12 7ABE  
                       __ptext21 7A40                         __ptext13 7AAA  
                       __ptext22 7BDE                         __ptext14 7A96  
                       __ptext23 7B8E                         __ptext15 7A82  
                       __ptext16 7A6E                         __ptext17 7AE8  
                       __ptext18 7CFC                         __ptext19 7BB4  
                   _SSP1CON2bits 000FC5                    __size_of_main 01C2  
                   _SSP1STATbits 000FC7                    motor_fwd@STAT 001C  
          __end_of_I2C_send_data 7BDE                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 001B                 ??_ADC_Initialize 001B  
                    ??_motor_fwd 001D                     motor_fwd@dir 001D  
                   motor_fwd@spd 001B       I2C_send_data@register_data 001D  
    __end_of_MCP23008_Initialise 7CFC   __end_of_PIN_MANAGER_Initialize 7C38  
           __size_of_adcFunction 0020         __end_of_EPWM1_Initialize 7B4E  
