

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Nov 28 23:29:19 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 05/05/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F25K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  007906                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _digits
    80  007906  3F                 	db	63
    81  007907  06                 	db	6
    82  007908  5B                 	db	91
    83  007909  4F                 	db	79
    84  00790A  66                 	db	102
    85  00790B  6D                 	db	109
    86  00790C  7D                 	db	125
    87  00790D  07                 	db	7
    88  00790E  7F                 	db	127
    89  00790F  67                 	db	103
    90  007910  3E                 	db	62
    91  007911  38                 	db	56
    92                           
    93                           ;initializer for _debounceTime
    94  007912  0032               	dw	50
    95                           
    96                           ;initializer for _LDRVAL
    97  007914  003C               	dw	60
    98  0000                     _CCPTMRS0bits	set	3913
    99  0000                     _ANSELA	set	3896
   100  0000                     _ANSELB	set	3897
   101  0000                     _ANSELC	set	3898
   102  0000                     _SSP1STATbits	set	4039
   103  0000                     _SSP1BUF	set	4041
   104  0000                     _SSP1CON2bits	set	4037
   105  0000                     _SSP1ADD	set	4040
   106  0000                     _SSP1CON3	set	4043
   107  0000                     _SSP1CON2	set	4037
   108  0000                     _SSP1CON1	set	4038
   109  0000                     _SSP1STAT	set	4039
   110  0000                     _PORTAbits	set	3968
   111  0000                     _LATCbits	set	3979
   112  0000                     _PORTBbits	set	3969
   113  0000                     _ADCON0bits	set	4034
   114  0000                     _ADCON0	set	4034
   115  0000                     _ADRESH	set	4036
   116  0000                     _ADRESL	set	4035
   117  0000                     _ADCON2	set	4032
   118  0000                     _ADCON1	set	4033
   119  0000                     _CCPR2L	set	3943
   120  0000                     _CCPR2H	set	3944
   121  0000                     _PSTR2CON	set	3939
   122  0000                     _PWM2CON	set	3941
   123  0000                     _ECCP2AS	set	3940
   124  0000                     _CCP2CON	set	3942
   125  0000                     _CCPR1L	set	4030
   126  0000                     _CCPR1H	set	4031
   127  0000                     _PSTR1CON	set	4025
   128  0000                     _PWM1CON	set	4023
   129  0000                     _ECCP1AS	set	4022
   130  0000                     _CCP1CON	set	4029
   131  0000                     _T2CONbits	set	4026
   132  0000                     _T2CON	set	4026
   133  0000                     _PIR1bits	set	3998
   134  0000                     _TMR2	set	4028
   135  0000                     _PR2	set	4027
   136  0000                     _INTCONbits	set	4082
   137  0000                     _INTCON2bits	set	4081
   138  0000                     _WPUB	set	3937
   139  0000                     _TRISC	set	3988
   140  0000                     _TRISB	set	3987
   141  0000                     _TRISA	set	3986
   142  0000                     _LATC	set	3979
   143  0000                     _LATB	set	3978
   144  0000                     _LATA	set	3977
   145  0000                     _OSCTUNE	set	3995
   146  0000                     _OSCCON2	set	4050
   147  0000                     _OSCCON	set	4051
   148                           
   149                           ; #config settings
   150                           
   151                           	psect	cinit
   152  007B54                     __pcinit:
   153                           	callstack 0
   154  007B54                     start_initialization:
   155                           	callstack 0
   156  007B54                     __initialization:
   157                           	callstack 0
   158                           
   159                           ; Initialize objects allocated to COMRAM (16 bytes)
   160                           ; load TBLPTR registers with __pidataCOMRAM
   161  007B54  0E06               	movlw	low __pidataCOMRAM
   162  007B56  6EF6               	movwf	tblptrl,c
   163  007B58  0E79               	movlw	high __pidataCOMRAM
   164  007B5A  6EF7               	movwf	tblptrh,c
   165  007B5C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   166  007B5E  6EF8               	movwf	tblptru,c
   167  007B60  EE00  F013         	lfsr	0,__pdataCOMRAM
   168  007B64  EE10 F010          	lfsr	1,16
   169  007B68                     copy_data0:
   170  007B68  0009               	tblrd		*+
   171  007B6A  CFF5 FFEE          	movff	tablat,postinc0
   172  007B6E  50E5               	movf	postdec1,w,c
   173  007B70  50E1               	movf	fsr1l,w,c
   174  007B72  E1FA               	bnz	copy_data0
   175                           
   176                           ; Clear objects allocated to COMRAM (18 bytes)
   177  007B74  EE00  F001         	lfsr	0,__pbssCOMRAM
   178  007B78  0E12               	movlw	18
   179  007B7A                     clear_0:
   180  007B7A  6AEE               	clrf	postinc0,c
   181  007B7C  06E8               	decf	wreg,f,c
   182  007B7E  E1FD               	bnz	clear_0
   183  007B80                     end_of_initialization:
   184                           	callstack 0
   185  007B80                     __end_of__initialization:
   186                           	callstack 0
   187  007B80  0E00               	movlw	low (__Lmediumconst shr (0+16))
   188  007B82  6EF8               	movwf	tblptru,c
   189  007B84  0100               	movlb	0
   190  007B86  EF9D  F03E         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMRAM
   193  000001                     __pbssCOMRAM:
   194                           	callstack 0
   195  000001                     _time:
   196                           	callstack 0
   197  000001                     	ds	4
   198  000005                     _positionHolder:
   199                           	callstack 0
   200  000005                     	ds	2
   201  000007                     _Lit:
   202                           	callstack 0
   203  000007                     	ds	2
   204  000009                     _UnLit:
   205                           	callstack 0
   206  000009                     	ds	2
   207  00000B                     _time1:
   208                           	callstack 0
   209  00000B                     	ds	2
   210  00000D                     _intialResult:
   211                           	callstack 0
   212  00000D                     	ds	2
   213  00000F                     _adcResult:
   214                           	callstack 0
   215  00000F                     	ds	2
   216  000011                     _ADC_InterruptHandler:
   217                           	callstack 0
   218  000011                     	ds	2
   219                           
   220                           	psect	dataCOMRAM
   221  000013                     __pdataCOMRAM:
   222                           	callstack 0
   223  000013                     _digits:
   224                           	callstack 0
   225  000013                     	ds	12
   226  00001F                     _debounceTime:
   227                           	callstack 0
   228  00001F                     	ds	2
   229  000021                     _LDRVAL:
   230                           	callstack 0
   231  000021                     	ds	2
   232                           
   233                           	psect	cstackCOMRAM
   234  000023                     __pcstackCOMRAM:
   235                           	callstack 0
   236  000023                     ??_diagnostic:
   237  000023                     ??_leftPosition:
   238  000023                     ??_rightPosition:
   239  000023                     ??_IdleI2C:
   240  000023                     ??_StartI2C:
   241  000023                     motor_fwd@spd:
   242                           	callstack 0
   243  000023                     WriteI2C@data:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x0
   247  000023                     	ds	1
   248  000024                     motor_fwd@STAT:
   249                           	callstack 0
   250  000024                     I2C_send_data@register_address:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x1
   254  000024                     	ds	1
   255  000025                     motor_fwd@dir:
   256                           	callstack 0
   257  000025                     I2C_send_data@register_data:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x2
   261  000025                     	ds	1
   262  000026                     I2C_send_data@device_address:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x3
   266  000026                     	ds	1
   267  000027                     ??_I2C:
   268                           
   269                           ; 1 bytes @ 0x4
   270  000027                     	ds	2
   271  000029                     ??_main:
   272                           
   273                           ; 1 bytes @ 0x6
   274  000029                     	ds	2
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 66 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   295 ;;      Params:         0       0       0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0
   297 ;;      Temps:          2       0       0       0       0       0       0
   298 ;;      Totals:         2       0       0       0       0       0       0
   299 ;;Total ram usage:        2 bytes
   300 ;; Hardware stack levels required when called:    3
   301 ;; This function calls:
   302 ;;		_I2C
   303 ;;		_I2C_Initialise
   304 ;;		_IsBumperL
   305 ;;		_IsBumperR
   306 ;;		_IsOptoL
   307 ;;		_IsOptoR
   308 ;;		_MCP23008_Initialise
   309 ;;		_SYSTEM_Initialize
   310 ;;		_adcFunction
   311 ;;		_diagnostic
   312 ;;		_leftPosition
   313 ;;		_motor_fwd
   314 ;;		_rightPosition
   315 ;; This function is called by:
   316 ;;		Startup code after reset
   317 ;; This function uses a non-reentrant model
   318 ;;
   319                           
   320                           	psect	text0
   321  007D3A                     __ptext0:
   322                           	callstack 0
   323  007D3A                     _main:
   324                           	callstack 28
   325  007D3A                     
   326                           ;main.c: 69:     SYSTEM_Initialize();
   327  007D3A  ECD4  F03C         	call	_SYSTEM_Initialize	;wreg free
   328                           
   329                           ;main.c: 70:     I2C_Initialise();
   330  007D3E  ECBE  F03C         	call	_I2C_Initialise	;wreg free
   331  007D42                     
   332                           ;main.c: 71:     MCP23008_Initialise();
   333  007D42  ECC5  F03D         	call	_MCP23008_Initialise	;wreg free
   334  007D46                     
   335                           ;main.c: 72:     diagnostic();
   336  007D46  EC46  F03E         	call	_diagnostic	;wreg free
   337  007D4A                     l1339:
   338                           
   339                           ;main.c: 75:     {;main.c: 77:         motor_fwd('L', 255, 1);
   340  007D4A  0EFF               	movlw	255
   341  007D4C  6E23               	movwf	motor_fwd@spd^0,c
   342  007D4E  0E01               	movlw	1
   343  007D50  6E24               	movwf	motor_fwd@STAT^0,c
   344  007D52  0E4C               	movlw	76
   345  007D54  EC8F  F03D         	call	_motor_fwd
   346  007D58                     
   347                           ;main.c: 78:         motor_fwd('R', 250, 1);
   348  007D58  0EFA               	movlw	250
   349  007D5A  6E23               	movwf	motor_fwd@spd^0,c
   350  007D5C  0E01               	movlw	1
   351  007D5E  6E24               	movwf	motor_fwd@STAT^0,c
   352  007D60  0E52               	movlw	82
   353  007D62  EC8F  F03D         	call	_motor_fwd
   354  007D66                     
   355                           ;main.c: 80:         adcFunction();
   356  007D66  EC01  F03D         	call	_adcFunction	;wreg free
   357  007D6A                     
   358                           ;main.c: 83:         if (adcResult > LDRVAL)
   359  007D6A  BE10               	btfsc	(_adcResult+1)^0,7,c
   360  007D6C  EFC1  F03E         	goto	u391
   361  007D70  5010               	movf	(_adcResult+1)^0,w,c
   362  007D72  E109               	bnz	u390
   363  007D74  0E3D               	movlw	61
   364  007D76  5C0F               	subwf	_adcResult^0,w,c
   365  007D78  A0D8               	btfss	status,0,c
   366  007D7A  EFC1  F03E         	goto	u391
   367  007D7E  EFC3  F03E         	goto	u390
   368  007D82                     u391:
   369  007D82  EF40  F03F         	goto	l262
   370  007D86                     u390:
   371  007D86                     
   372                           ;main.c: 84:         {;main.c: 85:             if (IsOptoR())
   373  007D86  ECA9  F03C         	call	_IsOptoR	;wreg free
   374  007D8A  0900               	iorlw	0
   375  007D8C  B4D8               	btfsc	status,2,c
   376  007D8E  EFCB  F03E         	goto	u401
   377  007D92  EFCD  F03E         	goto	u400
   378  007D96                     u401:
   379  007D96  EFDD  F03E         	goto	l1353
   380  007D9A                     u400:
   381  007D9A                     
   382                           ;main.c: 86:             {;main.c: 87:                 motor_fwd('L', 250, 1);
   383  007D9A  0EFA               	movlw	250
   384  007D9C  6E23               	movwf	motor_fwd@spd^0,c
   385  007D9E  0E01               	movlw	1
   386  007DA0  6E24               	movwf	motor_fwd@STAT^0,c
   387  007DA2  0E4C               	movlw	76
   388  007DA4  EC8F  F03D         	call	_motor_fwd
   389                           
   390                           ;main.c: 88:                 motor_fwd('R', 105, 1);
   391  007DA8  0E69               	movlw	105
   392  007DAA  6E23               	movwf	motor_fwd@spd^0,c
   393  007DAC  0E01               	movlw	1
   394  007DAE  6E24               	movwf	motor_fwd@STAT^0,c
   395  007DB0  0E52               	movlw	82
   396  007DB2  EC8F  F03D         	call	_motor_fwd
   397                           
   398                           ;main.c: 89:                 continue;
   399  007DB6  EFA5  F03E         	goto	l1339
   400  007DBA                     l1353:
   401  007DBA  EC9F  F03C         	call	_IsOptoL	;wreg free
   402  007DBE  0900               	iorlw	0
   403  007DC0  B4D8               	btfsc	status,2,c
   404  007DC2  EFE5  F03E         	goto	u411
   405  007DC6  EFE7  F03E         	goto	u410
   406  007DCA                     u411:
   407  007DCA  EFF7  F03E         	goto	l266
   408  007DCE                     u410:
   409  007DCE                     
   410                           ;main.c: 92:             {;main.c: 93:                 motor_fwd('L', 105, 1);
   411  007DCE  0E69               	movlw	105
   412  007DD0  6E23               	movwf	motor_fwd@spd^0,c
   413  007DD2  0E01               	movlw	1
   414  007DD4  6E24               	movwf	motor_fwd@STAT^0,c
   415  007DD6  0E4C               	movlw	76
   416  007DD8  EC8F  F03D         	call	_motor_fwd
   417                           
   418                           ;main.c: 94:                 motor_fwd('R', 250, 1);
   419  007DDC  0EFA               	movlw	250
   420  007DDE  6E23               	movwf	motor_fwd@spd^0,c
   421  007DE0  0E01               	movlw	1
   422  007DE2  6E24               	movwf	motor_fwd@STAT^0,c
   423  007DE4  0E52               	movlw	82
   424  007DE6  EC8F  F03D         	call	_motor_fwd
   425                           
   426                           ;main.c: 95:                 continue;
   427  007DEA  EFA5  F03E         	goto	l1339
   428  007DEE                     l266:
   429  007DEE  B081               	btfsc	129,0,c	;volatile
   430  007DF0  EFFC  F03E         	goto	u421
   431  007DF4  EFFE  F03E         	goto	u420
   432  007DF8                     u421:
   433  007DF8  EF25  F03F         	goto	l1367
   434  007DFC                     u420:
   435  007DFC  8A8B               	bsf	139,5,c	;volatile
   436  007DFE  8C8B               	bsf	139,6,c	;volatile
   437  007E00                     
   438                           ;main.c: 102:                 _delay((unsigned long)((450)*(4000000/4000.0)));
   439  007E00  0E03               	movlw	3
   440  007E02  6E2A               	movwf	(??_main+1)^0,c
   441  007E04  0E49               	movlw	73
   442  007E06  6E29               	movwf	??_main^0,c
   443  007E08  0E66               	movlw	102
   444  007E0A                     u507:
   445  007E0A  2EE8               	decfsz	wreg,f,c
   446  007E0C  D7FE               	bra	u507
   447  007E0E  2E29               	decfsz	??_main^0,f,c
   448  007E10  D7FC               	bra	u507
   449  007E12  2E2A               	decfsz	(??_main+1)^0,f,c
   450  007E14  D7FA               	bra	u507
   451  007E16  D000               	nop2	
   452  007E18                     
   453                           ;main.c: 103:                 motor_fwd('L', 255, 0);
   454  007E18  0EFF               	movlw	255
   455  007E1A  6E23               	movwf	motor_fwd@spd^0,c
   456  007E1C  0E00               	movlw	0
   457  007E1E  6E24               	movwf	motor_fwd@STAT^0,c
   458  007E20  0E4C               	movlw	76
   459  007E22  EC8F  F03D         	call	_motor_fwd
   460  007E26                     
   461                           ;main.c: 104:                 motor_fwd('R', 255, 0);
   462  007E26  0EFF               	movlw	255
   463  007E28  6E23               	movwf	motor_fwd@spd^0,c
   464  007E2A  0E00               	movlw	0
   465  007E2C  6E24               	movwf	motor_fwd@STAT^0,c
   466  007E2E  0E52               	movlw	82
   467  007E30  EC8F  F03D         	call	_motor_fwd
   468  007E34                     l273:
   469                           
   470                           ;main.c: 106:                 {;main.c: 107:                     _delay((unsigned long)(
      +                          (100)*(4000000/4000.0)));
   471  007E34  0E82               	movlw	130
   472  007E36  6E29               	movwf	??_main^0,c
   473  007E38  0EDE               	movlw	222
   474  007E3A                     u517:
   475  007E3A  2EE8               	decfsz	wreg,f,c
   476  007E3C  D7FE               	bra	u517
   477  007E3E  2E29               	decfsz	??_main^0,f,c
   478  007E40  D7FC               	bra	u517
   479  007E42                     
   480                           ;main.c: 108:                     I2C();
   481  007E42  ECF1  F03D         	call	_I2C	;wreg free
   482  007E46  EF1A  F03F         	goto	l273
   483  007E4A                     l1367:
   484                           
   485                           ;main.c: 112:             leftPosition();
   486  007E4A  EC24  F03D         	call	_leftPosition	;wreg free
   487  007E4E                     
   488                           ;main.c: 116:             if (IsBumperR())
   489  007E4E  EC95  F03C         	call	_IsBumperR	;wreg free
   490  007E52  0900               	iorlw	0
   491  007E54  B4D8               	btfsc	status,2,c
   492  007E56  EF2F  F03F         	goto	u431
   493  007E5A  EF31  F03F         	goto	u430
   494  007E5E                     u431:
   495  007E5E  EF40  F03F         	goto	l262
   496  007E62                     u430:
   497  007E62  8A8B               	bsf	139,5,c	;volatile
   498  007E64                     
   499                           ;main.c: 120:                 UnLit++;
   500  007E64  4A09               	infsnz	_UnLit^0,f,c
   501  007E66  2A0A               	incf	(_UnLit+1)^0,f,c
   502  007E68                     
   503                           ;main.c: 121:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   504  007E68  0E06               	movlw	6
   505  007E6A  6E2A               	movwf	(??_main+1)^0,c
   506  007E6C  0E13               	movlw	19
   507  007E6E  6E29               	movwf	??_main^0,c
   508  007E70  0EAE               	movlw	174
   509  007E72                     u527:
   510  007E72  2EE8               	decfsz	wreg,f,c
   511  007E74  D7FE               	bra	u527
   512  007E76  2E29               	decfsz	??_main^0,f,c
   513  007E78  D7FC               	bra	u527
   514  007E7A  2E2A               	decfsz	(??_main+1)^0,f,c
   515  007E7C  D7FA               	bra	u527
   516  007E7E  9A8B               	bcf	139,5,c	;volatile
   517  007E80                     l262:
   518                           
   519                           ;main.c: 129:         if (adcResult < LDRVAL)
   520  007E80  BE10               	btfsc	(_adcResult+1)^0,7,c
   521  007E82  EF4E  F03F         	goto	u440
   522  007E86  5010               	movf	(_adcResult+1)^0,w,c
   523  007E88  E107               	bnz	u441
   524  007E8A  0E3C               	movlw	60
   525  007E8C  5C0F               	subwf	_adcResult^0,w,c
   526  007E8E  B0D8               	btfsc	status,0,c
   527  007E90  EF4C  F03F         	goto	u441
   528  007E94  EF4E  F03F         	goto	u440
   529  007E98                     u441:
   530  007E98  EFA5  F03E         	goto	l1339
   531  007E9C                     u440:
   532  007E9C                     
   533                           ;main.c: 130:         {;main.c: 131:             motor_fwd('L', 255, 1);
   534  007E9C  0EFF               	movlw	255
   535  007E9E  6E23               	movwf	motor_fwd@spd^0,c
   536  007EA0  0E01               	movlw	1
   537  007EA2  6E24               	movwf	motor_fwd@STAT^0,c
   538  007EA4  0E4C               	movlw	76
   539  007EA6  EC8F  F03D         	call	_motor_fwd
   540                           
   541                           ;main.c: 132:             motor_fwd('R', 250, 1);
   542  007EAA  0EFA               	movlw	250
   543  007EAC  6E23               	movwf	motor_fwd@spd^0,c
   544  007EAE  0E01               	movlw	1
   545  007EB0  6E24               	movwf	motor_fwd@STAT^0,c
   546  007EB2  0E52               	movlw	82
   547  007EB4  EC8F  F03D         	call	_motor_fwd
   548  007EB8                     
   549                           ;main.c: 134:             adcFunction();
   550  007EB8  EC01  F03D         	call	_adcFunction	;wreg free
   551  007EBC                     
   552                           ;main.c: 135:             positionHolder = 1;
   553  007EBC  0E00               	movlw	0
   554  007EBE  6E06               	movwf	(_positionHolder+1)^0,c
   555  007EC0  0E01               	movlw	1
   556  007EC2  6E05               	movwf	_positionHolder^0,c
   557                           
   558                           ;main.c: 137:             while (positionHolder == 1)
   559  007EC4  EFF3  F03F         	goto	l1417
   560  007EC8                     l1383:
   561                           
   562                           ;main.c: 138:             {;main.c: 139:                 motor_fwd('L', 255, 1);
   563  007EC8  0EFF               	movlw	255
   564  007ECA  6E23               	movwf	motor_fwd@spd^0,c
   565  007ECC  0E01               	movlw	1
   566  007ECE  6E24               	movwf	motor_fwd@STAT^0,c
   567  007ED0  0E4C               	movlw	76
   568  007ED2  EC8F  F03D         	call	_motor_fwd
   569                           
   570                           ;main.c: 140:                 motor_fwd('R', 250, 1);
   571  007ED6  0EFA               	movlw	250
   572  007ED8  6E23               	movwf	motor_fwd@spd^0,c
   573  007EDA  0E01               	movlw	1
   574  007EDC  6E24               	movwf	motor_fwd@STAT^0,c
   575  007EDE  0E52               	movlw	82
   576  007EE0  EC8F  F03D         	call	_motor_fwd
   577  007EE4                     
   578                           ;main.c: 142:                 if (IsOptoR())
   579  007EE4  ECA9  F03C         	call	_IsOptoR	;wreg free
   580  007EE8  0900               	iorlw	0
   581  007EEA  B4D8               	btfsc	status,2,c
   582  007EEC  EF7A  F03F         	goto	u451
   583  007EF0  EF7C  F03F         	goto	u450
   584  007EF4                     u451:
   585  007EF4  EF8C  F03F         	goto	l1391
   586  007EF8                     u450:
   587  007EF8                     
   588                           ;main.c: 143:                 {;main.c: 144:                     motor_fwd('L', 250, 1);
   589  007EF8  0EFA               	movlw	250
   590  007EFA  6E23               	movwf	motor_fwd@spd^0,c
   591  007EFC  0E01               	movlw	1
   592  007EFE  6E24               	movwf	motor_fwd@STAT^0,c
   593  007F00  0E4C               	movlw	76
   594  007F02  EC8F  F03D         	call	_motor_fwd
   595                           
   596                           ;main.c: 145:                     motor_fwd('R', 105, 1);
   597  007F06  0E69               	movlw	105
   598  007F08  6E23               	movwf	motor_fwd@spd^0,c
   599  007F0A  0E01               	movlw	1
   600  007F0C  6E24               	movwf	motor_fwd@STAT^0,c
   601  007F0E  0E52               	movlw	82
   602  007F10  EC8F  F03D         	call	_motor_fwd
   603                           
   604                           ;main.c: 146:                     continue;
   605  007F14  EFF3  F03F         	goto	l1417
   606  007F18                     l1391:
   607  007F18  EC9F  F03C         	call	_IsOptoL	;wreg free
   608  007F1C  0900               	iorlw	0
   609  007F1E  B4D8               	btfsc	status,2,c
   610  007F20  EF94  F03F         	goto	u461
   611  007F24  EF96  F03F         	goto	u460
   612  007F28                     u461:
   613  007F28  EFA6  F03F         	goto	l286
   614  007F2C                     u460:
   615  007F2C                     
   616                           ;main.c: 150:                 {;main.c: 151:                     motor_fwd('L', 105, 1);
   617  007F2C  0E69               	movlw	105
   618  007F2E  6E23               	movwf	motor_fwd@spd^0,c
   619  007F30  0E01               	movlw	1
   620  007F32  6E24               	movwf	motor_fwd@STAT^0,c
   621  007F34  0E4C               	movlw	76
   622  007F36  EC8F  F03D         	call	_motor_fwd
   623                           
   624                           ;main.c: 152:                     motor_fwd('R', 250, 1);
   625  007F3A  0EFA               	movlw	250
   626  007F3C  6E23               	movwf	motor_fwd@spd^0,c
   627  007F3E  0E01               	movlw	1
   628  007F40  6E24               	movwf	motor_fwd@STAT^0,c
   629  007F42  0E52               	movlw	82
   630  007F44  EC8F  F03D         	call	_motor_fwd
   631                           
   632                           ;main.c: 153:                     continue;
   633  007F48  EFF3  F03F         	goto	l1417
   634  007F4C                     l286:
   635  007F4C  B081               	btfsc	129,0,c	;volatile
   636  007F4E  EFAB  F03F         	goto	u471
   637  007F52  EFAD  F03F         	goto	u470
   638  007F56                     u471:
   639  007F56  EFD4  F03F         	goto	l1405
   640  007F5A                     u470:
   641  007F5A  8A8B               	bsf	139,5,c	;volatile
   642  007F5C  8C8B               	bsf	139,6,c	;volatile
   643  007F5E                     
   644                           ;main.c: 160:                     _delay((unsigned long)((450)*(4000000/4000.0)));
   645  007F5E  0E03               	movlw	3
   646  007F60  6E2A               	movwf	(??_main+1)^0,c
   647  007F62  0E49               	movlw	73
   648  007F64  6E29               	movwf	??_main^0,c
   649  007F66  0E66               	movlw	102
   650  007F68                     u537:
   651  007F68  2EE8               	decfsz	wreg,f,c
   652  007F6A  D7FE               	bra	u537
   653  007F6C  2E29               	decfsz	??_main^0,f,c
   654  007F6E  D7FC               	bra	u537
   655  007F70  2E2A               	decfsz	(??_main+1)^0,f,c
   656  007F72  D7FA               	bra	u537
   657  007F74  D000               	nop2	
   658  007F76                     
   659                           ;main.c: 161:                     motor_fwd('L', 255, 0);
   660  007F76  0EFF               	movlw	255
   661  007F78  6E23               	movwf	motor_fwd@spd^0,c
   662  007F7A  0E00               	movlw	0
   663  007F7C  6E24               	movwf	motor_fwd@STAT^0,c
   664  007F7E  0E4C               	movlw	76
   665  007F80  EC8F  F03D         	call	_motor_fwd
   666  007F84                     
   667                           ;main.c: 162:                     motor_fwd('R', 255, 0);
   668  007F84  0EFF               	movlw	255
   669  007F86  6E23               	movwf	motor_fwd@spd^0,c
   670  007F88  0E00               	movlw	0
   671  007F8A  6E24               	movwf	motor_fwd@STAT^0,c
   672  007F8C  0E52               	movlw	82
   673  007F8E  EC8F  F03D         	call	_motor_fwd
   674  007F92                     l293:
   675                           
   676                           ;main.c: 164:                     {;main.c: 165:                         _delay((unsigne
      +                          d long)((100)*(4000000/4000.0)));
   677  007F92  0E82               	movlw	130
   678  007F94  6E29               	movwf	??_main^0,c
   679  007F96  0EDE               	movlw	222
   680  007F98                     u547:
   681  007F98  2EE8               	decfsz	wreg,f,c
   682  007F9A  D7FE               	bra	u547
   683  007F9C  2E29               	decfsz	??_main^0,f,c
   684  007F9E  D7FC               	bra	u547
   685  007FA0                     
   686                           ;main.c: 166:                         I2C();
   687  007FA0  ECF1  F03D         	call	_I2C	;wreg free
   688  007FA4  EFC9  F03F         	goto	l293
   689  007FA8                     l1405:
   690                           
   691                           ;main.c: 171:                 rightPosition();
   692  007FA8  EC4D  F03D         	call	_rightPosition	;wreg free
   693  007FAC                     
   694                           ;main.c: 173:                 if (IsBumperL())
   695  007FAC  EC8B  F03C         	call	_IsBumperL	;wreg free
   696  007FB0  0900               	iorlw	0
   697  007FB2  B4D8               	btfsc	status,2,c
   698  007FB4  EFDE  F03F         	goto	u481
   699  007FB8  EFE0  F03F         	goto	u480
   700  007FBC                     u481:
   701  007FBC  EFF3  F03F         	goto	l1417
   702  007FC0                     u480:
   703  007FC0  8C8B               	bsf	139,6,c	;volatile
   704  007FC2                     
   705                           ;main.c: 177:                     Lit++;
   706  007FC2  4A07               	infsnz	_Lit^0,f,c
   707  007FC4  2A08               	incf	(_Lit+1)^0,f,c
   708  007FC6                     
   709                           ;main.c: 178:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
   710  007FC6  0E06               	movlw	6
   711  007FC8  6E2A               	movwf	(??_main+1)^0,c
   712  007FCA  0E13               	movlw	19
   713  007FCC  6E29               	movwf	??_main^0,c
   714  007FCE  0EAE               	movlw	174
   715  007FD0                     u557:
   716  007FD0  2EE8               	decfsz	wreg,f,c
   717  007FD2  D7FE               	bra	u557
   718  007FD4  2E29               	decfsz	??_main^0,f,c
   719  007FD6  D7FC               	bra	u557
   720  007FD8  2E2A               	decfsz	(??_main+1)^0,f,c
   721  007FDA  D7FA               	bra	u557
   722  007FDC  9C8B               	bcf	139,6,c	;volatile
   723  007FDE                     
   724                           ;main.c: 180:                     positionHolder = 0;
   725  007FDE  0E00               	movlw	0
   726  007FE0  6E06               	movwf	(_positionHolder+1)^0,c
   727  007FE2  0E00               	movlw	0
   728  007FE4  6E05               	movwf	_positionHolder^0,c
   729  007FE6                     l1417:
   730                           
   731                           ;main.c: 137:             while (positionHolder == 1)
   732  007FE6  0405               	decf	_positionHolder^0,w,c
   733  007FE8  1006               	iorwf	(_positionHolder+1)^0,w,c
   734  007FEA  B4D8               	btfsc	status,2,c
   735  007FEC  EFFA  F03F         	goto	u491
   736  007FF0  EFFC  F03F         	goto	u490
   737  007FF4                     u491:
   738  007FF4  EF64  F03F         	goto	l1383
   739  007FF8                     u490:
   740  007FF8  EFA5  F03E         	goto	l1339
   741  007FFC  EF00  F000         	goto	start
   742  008000                     __end_of_main:
   743                           	callstack 0
   744                           
   745 ;; *************** function _rightPosition *****************
   746 ;; Defined at:
   747 ;;		line 300 in file "main.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   761 ;;      Params:         0       0       0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0       0       0
   763 ;;      Temps:          1       0       0       0       0       0       0
   764 ;;      Totals:         1       0       0       0       0       0       0
   765 ;;Total ram usage:        1 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    1
   768 ;; This function calls:
   769 ;;		_adcFunction
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text1
   776  007A9A                     __ptext1:
   777                           	callstack 0
   778  007A9A                     _rightPosition:
   779                           	callstack 29
   780  007A9A                     
   781                           ;main.c: 305:     PORTBbits.RB3 = 1;
   782  007A9A  8681               	bsf	129,3,c	;volatile
   783  007A9C                     
   784                           ;main.c: 306:     _delay((unsigned long)((2050)*(4000000/4000000.0)));
   785  007A9C  0E03               	movlw	3
   786  007A9E  6E23               	movwf	??_rightPosition^0,c
   787  007AA0  0EA8               	movlw	168
   788  007AA2                     u567:
   789  007AA2  2EE8               	decfsz	wreg,f,c
   790  007AA4  D7FE               	bra	u567
   791  007AA6  2E23               	decfsz	??_rightPosition^0,f,c
   792  007AA8  D7FC               	bra	u567
   793  007AAA  D000               	nop2	
   794  007AAC                     
   795                           ;main.c: 307:     PORTBbits.RB3 = 0;
   796  007AAC  9681               	bcf	129,3,c	;volatile
   797                           
   798                           ;main.c: 308:     _delay((unsigned long)((19250)*(4000000/4000000.0)));
   799  007AAE  0E19               	movlw	25
   800  007AB0  6E23               	movwf	??_rightPosition^0,c
   801  007AB2  0EFF               	movlw	255
   802  007AB4                     u577:
   803  007AB4  2EE8               	decfsz	wreg,f,c
   804  007AB6  D7FE               	bra	u577
   805  007AB8  2E23               	decfsz	??_rightPosition^0,f,c
   806  007ABA  D7FC               	bra	u577
   807  007ABC  F000               	nop	
   808  007ABE                     
   809                           ;main.c: 309:     adcFunction();
   810  007ABE  EC01  F03D         	call	_adcFunction	;wreg free
   811  007AC2  0012               	return		;funcret
   812  007AC4                     __end_of_rightPosition:
   813                           	callstack 0
   814                           
   815 ;; *************** function _motor_fwd *****************
   816 ;; Defined at:
   817 ;;		line 199 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  dir             1    wreg     unsigned char 
   820 ;;  spd             1    0[COMRAM] unsigned char 
   821 ;;  STAT            1    1[COMRAM] _Bool 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  dir             1    2[COMRAM] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   833 ;;      Params:         2       0       0       0       0       0       0
   834 ;;      Locals:         1       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0
   836 ;;      Totals:         3       0       0       0       0       0       0
   837 ;;Total ram usage:        3 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; This function calls:
   840 ;;		Nothing
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text2
   847  007B1E                     __ptext2:
   848                           	callstack 0
   849  007B1E                     _motor_fwd:
   850                           	callstack 30
   851                           
   852                           ;incstack = 0
   853                           ;motor_fwd@dir stored from wreg
   854  007B1E  6E25               	movwf	motor_fwd@dir^0,c
   855  007B20                     
   856                           ;main.c: 199: void motor_fwd(unsigned char dir, unsigned char spd, _Bool STAT);main.c: 2
      +                          00: {;main.c: 201:     if (dir == 'L')
   857  007B20  0E4C               	movlw	76
   858  007B22  1825               	xorwf	motor_fwd@dir^0,w,c
   859  007B24  A4D8               	btfss	status,2,c
   860  007B26  EF97  F03D         	goto	u361
   861  007B2A  EF99  F03D         	goto	u360
   862  007B2E                     u361:
   863  007B2E  EFA2  F03D         	goto	l317
   864  007B32                     u360:
   865  007B32                     
   866                           ;main.c: 202:     {;main.c: 203:         CCPR2L = spd;
   867  007B32  C023  FF67         	movff	motor_fwd@spd,3943	;volatile
   868                           
   869                           ;main.c: 204:         PORTAbits.RA5 = STAT;
   870  007B36  B024               	btfsc	motor_fwd@STAT^0,0,c
   871  007B38  D002               	bra	u375
   872  007B3A  9A80               	bcf	128,5,c	;volatile
   873  007B3C  D001               	bra	u376
   874  007B3E                     u375:
   875  007B3E  8A80               	bsf	128,5,c	;volatile
   876  007B40                     u376:
   877                           
   878                           ;main.c: 205:     }
   879  007B40  EFA9  F03D         	goto	l319
   880  007B44                     l317:
   881                           
   882                           ;main.c: 207:     {;main.c: 209:         CCPR1L = spd;
   883  007B44  C023  FFBE         	movff	motor_fwd@spd,4030	;volatile
   884                           
   885                           ;main.c: 210:         PORTAbits.RA2 = STAT;
   886  007B48  B024               	btfsc	motor_fwd@STAT^0,0,c
   887  007B4A  D002               	bra	u385
   888  007B4C  9480               	bcf	128,2,c	;volatile
   889  007B4E  D001               	bra	u386
   890  007B50                     u385:
   891  007B50  8480               	bsf	128,2,c	;volatile
   892  007B52                     u386:
   893  007B52                     l319:
   894  007B52  0012               	return		;funcret
   895  007B54                     __end_of_motor_fwd:
   896                           	callstack 0
   897                           
   898 ;; *************** function _leftPosition *****************
   899 ;; Defined at:
   900 ;;		line 315 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         0       0       0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0
   916 ;;      Temps:          1       0       0       0       0       0       0
   917 ;;      Totals:         1       0       0       0       0       0       0
   918 ;;Total ram usage:        1 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    1
   921 ;; This function calls:
   922 ;;		_adcFunction
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text3
   929  007A48                     __ptext3:
   930                           	callstack 0
   931  007A48                     _leftPosition:
   932                           	callstack 29
   933  007A48                     
   934                           ;main.c: 319:     {;main.c: 321:         PORTBbits.RB3 = 1;
   935  007A48  8681               	bsf	129,3,c	;volatile
   936  007A4A                     
   937                           ;main.c: 322:         _delay((unsigned long)((2350)*(4000000/4000000.0)));
   938  007A4A  0E04               	movlw	4
   939  007A4C  6E23               	movwf	??_leftPosition^0,c
   940  007A4E  0E0C               	movlw	12
   941  007A50                     u587:
   942  007A50  2EE8               	decfsz	wreg,f,c
   943  007A52  D7FE               	bra	u587
   944  007A54  2E23               	decfsz	??_leftPosition^0,f,c
   945  007A56  D7FC               	bra	u587
   946  007A58                     
   947                           ;main.c: 323:         PORTBbits.RB3 = 0;
   948  007A58  9681               	bcf	129,3,c	;volatile
   949                           
   950                           ;main.c: 324:         _delay((unsigned long)((19250)*(4000000/4000000.0)));
   951  007A5A  0E19               	movlw	25
   952  007A5C  6E23               	movwf	??_leftPosition^0,c
   953  007A5E  0EFF               	movlw	255
   954  007A60                     u597:
   955  007A60  2EE8               	decfsz	wreg,f,c
   956  007A62  D7FE               	bra	u597
   957  007A64  2E23               	decfsz	??_leftPosition^0,f,c
   958  007A66  D7FC               	bra	u597
   959  007A68  F000               	nop	
   960  007A6A                     
   961                           ;main.c: 325:         adcFunction();
   962  007A6A  EC01  F03D         	call	_adcFunction	;wreg free
   963  007A6E  0012               	return		;funcret
   964  007A70                     __end_of_leftPosition:
   965                           	callstack 0
   966                           
   967 ;; *************** function _adcFunction *****************
   968 ;; Defined at:
   969 ;;		line 334 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		None
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   983 ;;      Params:         0       0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;;		_rightPosition
   994 ;;		_leftPosition
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text4
   999  007A02                     __ptext4:
  1000                           	callstack 0
  1001  007A02                     _adcFunction:
  1002                           	callstack 29
  1003  007A02                     
  1004                           ;main.c: 336:     _delay((unsigned long)((7)*(4000000/4000000.0)));
  1005  007A02  D000               	nop2		;2 cycle nop
  1006  007A04  D000               	nop2		;2 cycle nop
  1007  007A06  D000               	nop2		;2 cycle nop
  1008  007A08  F000               	nop	
  1009                           
  1010                           ;main.c: 337:     ADCON0bits.GO = 1;
  1011  007A0A  82C2               	bsf	194,1,c	;volatile
  1012  007A0C                     l361:
  1013                           
  1014                           ;main.c: 338:     while (ADCON0bits.GO == 1)
  1015  007A0C  B2C2               	btfsc	194,1,c	;volatile
  1016  007A0E  EF0B  F03D         	goto	u61
  1017  007A12  EF0D  F03D         	goto	u60
  1018  007A16                     u61:
  1019  007A16  EF06  F03D         	goto	l361
  1020  007A1A                     u60:
  1021  007A1A                     
  1022                           ;main.c: 342:     adcResult = ADRESH;
  1023  007A1A  CFC4 F00F          	movff	4036,_adcResult	;volatile
  1024  007A1E  6A10               	clrf	(_adcResult+1)^0,c
  1025  007A20  0012               	return		;funcret
  1026  007A22                     __end_of_adcFunction:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _diagnostic *****************
  1030 ;; Defined at:
  1031 ;;		line 189 in file "main.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1045 ;;      Params:         0       0       0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0
  1047 ;;      Temps:          2       0       0       0       0       0       0
  1048 ;;      Totals:         2       0       0       0       0       0       0
  1049 ;;Total ram usage:        2 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text5
  1059  007C8C                     __ptext5:
  1060                           	callstack 0
  1061  007C8C                     _diagnostic:
  1062                           	callstack 30
  1063  007C8C  BA8B               	btfsc	139,5,c	;volatile
  1064  007C8E  EF4B  F03E         	goto	u71
  1065  007C92  EF4E  F03E         	goto	u70
  1066  007C96                     u71:
  1067  007C96  0E01               	movlw	1
  1068  007C98  EF4F  F03E         	goto	u76
  1069  007C9C                     u70:
  1070  007C9C  0E00               	movlw	0
  1071  007C9E                     u76:
  1072  007C9E  0AFF               	xorlw	255
  1073  007CA0  6E23               	movwf	??_diagnostic^0,c
  1074  007CA2  3A23               	swapf	??_diagnostic^0,f,c
  1075  007CA4  4623               	rlncf	??_diagnostic^0,f,c
  1076  007CA6  508B               	movf	139,w,c	;volatile
  1077  007CA8  1823               	xorwf	??_diagnostic^0,w,c
  1078  007CAA  0BDF               	andlw	-33
  1079  007CAC  1823               	xorwf	??_diagnostic^0,w,c
  1080  007CAE  6E8B               	movwf	139,c	;volatile
  1081  007CB0  BC8B               	btfsc	139,6,c	;volatile
  1082  007CB2  EF5D  F03E         	goto	u81
  1083  007CB6  EF60  F03E         	goto	u80
  1084  007CBA                     u81:
  1085  007CBA  0E01               	movlw	1
  1086  007CBC  EF61  F03E         	goto	u86
  1087  007CC0                     u80:
  1088  007CC0  0E00               	movlw	0
  1089  007CC2                     u86:
  1090  007CC2  0AFF               	xorlw	255
  1091  007CC4  6E23               	movwf	??_diagnostic^0,c
  1092  007CC6  3A23               	swapf	??_diagnostic^0,f,c
  1093  007CC8  4623               	rlncf	??_diagnostic^0,f,c
  1094  007CCA  4623               	rlncf	??_diagnostic^0,f,c
  1095  007CCC  508B               	movf	139,w,c	;volatile
  1096  007CCE  1823               	xorwf	??_diagnostic^0,w,c
  1097  007CD0  0BBF               	andlw	-65
  1098  007CD2  1823               	xorwf	??_diagnostic^0,w,c
  1099  007CD4  6E8B               	movwf	139,c	;volatile
  1100  007CD6                     
  1101                           ;main.c: 194:     _delay((unsigned long)((300)*(4000000/4000.0)));
  1102  007CD6  0E02               	movlw	2
  1103  007CD8  6E24               	movwf	(??_diagnostic+1)^0,c
  1104  007CDA  0E86               	movlw	134
  1105  007CDC  6E23               	movwf	??_diagnostic^0,c
  1106  007CDE  0E99               	movlw	153
  1107  007CE0                     u607:
  1108  007CE0  2EE8               	decfsz	wreg,f,c
  1109  007CE2  D7FE               	bra	u607
  1110  007CE4  2E23               	decfsz	??_diagnostic^0,f,c
  1111  007CE6  D7FC               	bra	u607
  1112  007CE8  2E24               	decfsz	(??_diagnostic+1)^0,f,c
  1113  007CEA  D7FA               	bra	u607
  1114  007CEC  F000               	nop	
  1115  007CEE  BA8B               	btfsc	139,5,c	;volatile
  1116  007CF0  EF7C  F03E         	goto	u91
  1117  007CF4  EF7F  F03E         	goto	u90
  1118  007CF8                     u91:
  1119  007CF8  0E01               	movlw	1
  1120  007CFA  EF80  F03E         	goto	u96
  1121  007CFE                     u90:
  1122  007CFE  0E00               	movlw	0
  1123  007D00                     u96:
  1124  007D00  0AFF               	xorlw	255
  1125  007D02  6E23               	movwf	??_diagnostic^0,c
  1126  007D04  3A23               	swapf	??_diagnostic^0,f,c
  1127  007D06  4623               	rlncf	??_diagnostic^0,f,c
  1128  007D08  508B               	movf	139,w,c	;volatile
  1129  007D0A  1823               	xorwf	??_diagnostic^0,w,c
  1130  007D0C  0BDF               	andlw	-33
  1131  007D0E  1823               	xorwf	??_diagnostic^0,w,c
  1132  007D10  6E8B               	movwf	139,c	;volatile
  1133  007D12  BC8B               	btfsc	139,6,c	;volatile
  1134  007D14  EF8E  F03E         	goto	u101
  1135  007D18  EF91  F03E         	goto	u100
  1136  007D1C                     u101:
  1137  007D1C  0E01               	movlw	1
  1138  007D1E  EF92  F03E         	goto	u106
  1139  007D22                     u100:
  1140  007D22  0E00               	movlw	0
  1141  007D24                     u106:
  1142  007D24  0AFF               	xorlw	255
  1143  007D26  6E23               	movwf	??_diagnostic^0,c
  1144  007D28  3A23               	swapf	??_diagnostic^0,f,c
  1145  007D2A  4623               	rlncf	??_diagnostic^0,f,c
  1146  007D2C  4623               	rlncf	??_diagnostic^0,f,c
  1147  007D2E  508B               	movf	139,w,c	;volatile
  1148  007D30  1823               	xorwf	??_diagnostic^0,w,c
  1149  007D32  0BBF               	andlw	-65
  1150  007D34  1823               	xorwf	??_diagnostic^0,w,c
  1151  007D36  6E8B               	movwf	139,c	;volatile
  1152  007D38  0012               	return		;funcret
  1153  007D3A                     __end_of_diagnostic:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _SYSTEM_Initialize *****************
  1157 ;; Defined at:
  1158 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1172 ;;      Params:         0       0       0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    1
  1179 ;; This function calls:
  1180 ;;		_ADC_Initialize
  1181 ;;		_EPWM1_Initialize
  1182 ;;		_EPWM2_Initialize
  1183 ;;		_OSCILLATOR_Initialize
  1184 ;;		_PIN_MANAGER_Initialize
  1185 ;;		_TMR2_Initialize
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text6
  1192  0079A8                     __ptext6:
  1193                           	callstack 0
  1194  0079A8                     _SYSTEM_Initialize:
  1195                           	callstack 29
  1196  0079A8                     
  1197                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1198  0079A8  EC78  F03D         	call	_PIN_MANAGER_Initialize	;wreg free
  1199                           
  1200                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1201  0079AC  EC75  F03C         	call	_OSCILLATOR_Initialize	;wreg free
  1202                           
  1203                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
  1204  0079B0  ECE1  F03C         	call	_EPWM1_Initialize	;wreg free
  1205                           
  1206                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  1207  0079B4  EC7C  F03C         	call	_TMR2_Initialize	;wreg free
  1208                           
  1209                           ;mcc_generated_files/mcc.c: 57:     EPWM2_Initialize();
  1210  0079B8  ECF1  F03C         	call	_EPWM2_Initialize	;wreg free
  1211                           
  1212                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1213  0079BC  ECC9  F03C         	call	_ADC_Initialize	;wreg free
  1214  0079C0  0012               	return		;funcret
  1215  0079C2                     __end_of_SYSTEM_Initialize:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _TMR2_Initialize *****************
  1219 ;; Defined at:
  1220 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1234 ;;      Params:         0       0       0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_SYSTEM_Initialize
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text7
  1248  0078F8                     __ptext7:
  1249                           	callstack 0
  1250  0078F8                     _TMR2_Initialize:
  1251                           	callstack 29
  1252  0078F8                     
  1253                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  1254  0078F8  68BB               	setf	187,c	;volatile
  1255  0078FA                     
  1256                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  1257  0078FA  0E00               	movlw	0
  1258  0078FC  6EBC               	movwf	188,c	;volatile
  1259  0078FE                     
  1260                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  1261  0078FE  929E               	bcf	158,1,c	;volatile
  1262                           
  1263                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  1264  007900  0E04               	movlw	4
  1265  007902  6EBA               	movwf	186,c	;volatile
  1266  007904  0012               	return		;funcret
  1267  007906                     __end_of_TMR2_Initialize:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function _PIN_MANAGER_Initialize *****************
  1271 ;; Defined at:
  1272 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1286 ;;      Params:         0       0       0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0
  1289 ;;      Totals:         0       0       0       0       0       0       0
  1290 ;;Total ram usage:        0 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; This function calls:
  1293 ;;		Nothing
  1294 ;; This function is called by:
  1295 ;;		_SYSTEM_Initialize
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           	psect	text8
  1300  007AF0                     __ptext8:
  1301                           	callstack 0
  1302  007AF0                     _PIN_MANAGER_Initialize:
  1303                           	callstack 29
  1304  007AF0                     
  1305                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1306  007AF0  0E00               	movlw	0
  1307  007AF2  6E89               	movwf	137,c	;volatile
  1308                           
  1309                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1310  007AF4  0E00               	movlw	0
  1311  007AF6  6E8A               	movwf	138,c	;volatile
  1312                           
  1313                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1314  007AF8  0E00               	movlw	0
  1315  007AFA  6E8B               	movwf	139,c	;volatile
  1316                           
  1317                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDB;
  1318  007AFC  0EDB               	movlw	219
  1319  007AFE  6E92               	movwf	146,c	;volatile
  1320                           
  1321                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF7;
  1322  007B00  0EF7               	movlw	247
  1323  007B02  6E93               	movwf	147,c	;volatile
  1324                           
  1325                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0b00011000;
  1326  007B04  0E18               	movlw	24
  1327  007B06  6E94               	movwf	148,c	;volatile
  1328                           
  1329                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
  1330  007B08  0E00               	movlw	0
  1331  007B0A  010F               	movlb	15	; () banked
  1332  007B0C  6F3A               	movwf	58,b	;volatile
  1333                           
  1334                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1335  007B0E  0E00               	movlw	0
  1336  007B10  6F39               	movwf	57,b	;volatile
  1337                           
  1338                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0B;
  1339  007B12  0E0B               	movlw	11
  1340  007B14  6F38               	movwf	56,b	;volatile
  1341                           
  1342                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1343  007B16  0E00               	movlw	0
  1344  007B18  6E61               	movwf	97,c	;volatile
  1345  007B1A                     
  1346                           ; BSR set to: 15
  1347                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1348  007B1A  8EF1               	bsf	241,7,c	;volatile
  1349  007B1C                     
  1350                           ; BSR set to: 15
  1351  007B1C  0012               	return		;funcret
  1352  007B1E                     __end_of_PIN_MANAGER_Initialize:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _OSCILLATOR_Initialize *****************
  1356 ;; Defined at:
  1357 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1371 ;;      Params:         0       0       0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_SYSTEM_Initialize
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text9
  1385  0078EA                     __ptext9:
  1386                           	callstack 0
  1387  0078EA                     _OSCILLATOR_Initialize:
  1388                           	callstack 29
  1389  0078EA                     
  1390                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
  1391  0078EA  0E30               	movlw	48
  1392  0078EC  6ED3               	movwf	211,c	;volatile
  1393                           
  1394                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  1395  0078EE  0E04               	movlw	4
  1396  0078F0  6ED2               	movwf	210,c	;volatile
  1397                           
  1398                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1399  0078F2  0E00               	movlw	0
  1400  0078F4  6E9B               	movwf	155,c	;volatile
  1401  0078F6  0012               	return		;funcret
  1402  0078F8                     __end_of_OSCILLATOR_Initialize:
  1403                           	callstack 0
  1404                           
  1405 ;; *************** function _EPWM2_Initialize *****************
  1406 ;; Defined at:
  1407 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1421 ;;      Params:         0       0       0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0
  1424 ;;      Totals:         0       0       0       0       0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_SYSTEM_Initialize
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text10
  1435  0079E2                     __ptext10:
  1436                           	callstack 0
  1437  0079E2                     _EPWM2_Initialize:
  1438                           	callstack 29
  1439  0079E2                     
  1440                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  1441  0079E2  0E3C               	movlw	60
  1442  0079E4  6E66               	movwf	102,c	;volatile
  1443                           
  1444                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  1445  0079E6  0E00               	movlw	0
  1446  0079E8  6E64               	movwf	100,c	;volatile
  1447                           
  1448                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  1449  0079EA  0E80               	movlw	128
  1450  0079EC  6E65               	movwf	101,c	;volatile
  1451                           
  1452                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  1453  0079EE  0E01               	movlw	1
  1454  0079F0  6E63               	movwf	99,c	;volatile
  1455                           
  1456                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  1457  0079F2  0E00               	movlw	0
  1458  0079F4  6E68               	movwf	104,c	;volatile
  1459                           
  1460                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x7F;
  1461  0079F6  0E7F               	movlw	127
  1462  0079F8  6E67               	movwf	103,c	;volatile
  1463                           
  1464                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  1465  0079FA  0EE7               	movlw	-25
  1466  0079FC  010F               	movlb	15	; () banked
  1467  0079FE  1749               	andwf	73,f,b	;volatile
  1468  007A00                     
  1469                           ; BSR set to: 15
  1470  007A00  0012               	return		;funcret
  1471  007A02                     __end_of_EPWM2_Initialize:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _EPWM1_Initialize *****************
  1475 ;; Defined at:
  1476 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1490 ;;      Params:         0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_SYSTEM_Initialize
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text11
  1504  0079C2                     __ptext11:
  1505                           	callstack 0
  1506  0079C2                     _EPWM1_Initialize:
  1507                           	callstack 29
  1508  0079C2                     
  1509                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  1510  0079C2  0E3C               	movlw	60
  1511  0079C4  6EBD               	movwf	189,c	;volatile
  1512                           
  1513                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  1514  0079C6  0E00               	movlw	0
  1515  0079C8  6EB6               	movwf	182,c	;volatile
  1516                           
  1517                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  1518  0079CA  0E80               	movlw	128
  1519  0079CC  6EB7               	movwf	183,c	;volatile
  1520                           
  1521                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  1522  0079CE  0E01               	movlw	1
  1523  0079D0  6EB9               	movwf	185,c	;volatile
  1524                           
  1525                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  1526  0079D2  0E00               	movlw	0
  1527  0079D4  6EBF               	movwf	191,c	;volatile
  1528                           
  1529                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  1530  0079D6  0E7F               	movlw	127
  1531  0079D8  6EBE               	movwf	190,c	;volatile
  1532                           
  1533                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  1534  0079DA  0EFC               	movlw	-4
  1535  0079DC  010F               	movlb	15	; () banked
  1536  0079DE  1749               	andwf	73,f,b	;volatile
  1537  0079E0                     
  1538                           ; BSR set to: 15
  1539  0079E0  0012               	return		;funcret
  1540  0079E2                     __end_of_EPWM1_Initialize:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function _ADC_Initialize *****************
  1544 ;; Defined at:
  1545 ;;		line 62 in file "mcc_generated_files/adc.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1559 ;;      Params:         0       0       0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_SYSTEM_Initialize
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text12
  1573  007992                     __ptext12:
  1574                           	callstack 0
  1575  007992                     _ADC_Initialize:
  1576                           	callstack 29
  1577  007992                     
  1578                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1579  007992  0E00               	movlw	0
  1580  007994  6EC1               	movwf	193,c	;volatile
  1581                           
  1582                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  1583  007996  0E04               	movlw	4
  1584  007998  6EC0               	movwf	192,c	;volatile
  1585                           
  1586                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1587  00799A  0E00               	movlw	0
  1588  00799C  6EC3               	movwf	195,c	;volatile
  1589                           
  1590                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1591  00799E  0E00               	movlw	0
  1592  0079A0  6EC4               	movwf	196,c	;volatile
  1593                           
  1594                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x0D;
  1595  0079A2  0E0D               	movlw	13
  1596  0079A4  6EC2               	movwf	194,c	;volatile
  1597  0079A6  0012               	return		;funcret
  1598  0079A8                     __end_of_ADC_Initialize:
  1599                           	callstack 0
  1600                           
  1601 ;; *************** function _MCP23008_Initialise *****************
  1602 ;; Defined at:
  1603 ;;		line 224 in file "main.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1617 ;;      Params:         0       0       0       0       0       0       0
  1618 ;;      Locals:         0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0
  1620 ;;      Totals:         0       0       0       0       0       0       0
  1621 ;;Total ram usage:        0 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    2
  1624 ;; This function calls:
  1625 ;;		_I2C_send_data
  1626 ;;		_IdleI2C
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text13
  1633  007B8A                     __ptext13:
  1634                           	callstack 0
  1635  007B8A                     _MCP23008_Initialise:
  1636                           	callstack 28
  1637  007B8A                     
  1638                           ;main.c: 227:     I2C_send_data(0x40, 0x00, 0x00);
  1639  007B8A  0E00               	movlw	0
  1640  007B8C  6E24               	movwf	I2C_send_data@register_address^0,c
  1641  007B8E  0E00               	movlw	0
  1642  007B90  6E25               	movwf	I2C_send_data@register_data^0,c
  1643  007B92  0E40               	movlw	64
  1644  007B94  EC38  F03D         	call	_I2C_send_data
  1645                           
  1646                           ;main.c: 228:     IdleI2C();
  1647  007B98  EC11  F03D         	call	_IdleI2C	;wreg free
  1648                           
  1649                           ;main.c: 229:     I2C_send_data(0x40, 0x01, 0x00);
  1650  007B9C  0E01               	movlw	1
  1651  007B9E  6E24               	movwf	I2C_send_data@register_address^0,c
  1652  007BA0  0E00               	movlw	0
  1653  007BA2  6E25               	movwf	I2C_send_data@register_data^0,c
  1654  007BA4  0E40               	movlw	64
  1655  007BA6  EC38  F03D         	call	_I2C_send_data
  1656                           
  1657                           ;main.c: 230:     IdleI2C();
  1658  007BAA  EC11  F03D         	call	_IdleI2C	;wreg free
  1659                           
  1660                           ;main.c: 231:     I2C_send_data(0x40, 0x02, 0x00);
  1661  007BAE  0E02               	movlw	2
  1662  007BB0  6E24               	movwf	I2C_send_data@register_address^0,c
  1663  007BB2  0E00               	movlw	0
  1664  007BB4  6E25               	movwf	I2C_send_data@register_data^0,c
  1665  007BB6  0E40               	movlw	64
  1666  007BB8  EC38  F03D         	call	_I2C_send_data
  1667                           
  1668                           ;main.c: 232:     IdleI2C();
  1669  007BBC  EC11  F03D         	call	_IdleI2C	;wreg free
  1670                           
  1671                           ;main.c: 233:     I2C_send_data(0x40, 0x05, 0x3E);
  1672  007BC0  0E05               	movlw	5
  1673  007BC2  6E24               	movwf	I2C_send_data@register_address^0,c
  1674  007BC4  0E3E               	movlw	62
  1675  007BC6  6E25               	movwf	I2C_send_data@register_data^0,c
  1676  007BC8  0E40               	movlw	64
  1677  007BCA  EC38  F03D         	call	_I2C_send_data
  1678                           
  1679                           ;main.c: 234:     IdleI2C();
  1680  007BCE  EC11  F03D         	call	_IdleI2C	;wreg free
  1681                           
  1682                           ;main.c: 235:     I2C_send_data(0x40, 0x06, 0x00);
  1683  007BD2  0E06               	movlw	6
  1684  007BD4  6E24               	movwf	I2C_send_data@register_address^0,c
  1685  007BD6  0E00               	movlw	0
  1686  007BD8  6E25               	movwf	I2C_send_data@register_data^0,c
  1687  007BDA  0E40               	movlw	64
  1688  007BDC  EC38  F03D         	call	_I2C_send_data
  1689  007BE0  0012               	return		;funcret
  1690  007BE2                     __end_of_MCP23008_Initialise:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _IsOptoR *****************
  1694 ;; Defined at:
  1695 ;;		line 364 in file "main.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      _Bool 
  1702 ;; Registers used:
  1703 ;;		wreg
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1709 ;;      Params:         0       0       0       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0
  1712 ;;      Totals:         0       0       0       0       0       0       0
  1713 ;;Total ram usage:        0 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text14
  1723  007952                     __ptext14:
  1724                           	callstack 0
  1725  007952                     _IsOptoR:
  1726                           	callstack 30
  1727  007952                     
  1728                           ;main.c: 367:     return (PORTBbits.RB1 == 0);
  1729  007952  A281               	btfss	129,1,c	;volatile
  1730  007954  EFAE  F03C         	goto	u141
  1731  007958  EFB1  F03C         	goto	u140
  1732  00795C                     u141:
  1733  00795C  0E01               	movlw	1
  1734  00795E  EFB2  F03C         	goto	u150
  1735  007962                     u140:
  1736  007962  0E00               	movlw	0
  1737  007964                     u150:
  1738  007964  0012               	return		;funcret
  1739  007966                     __end_of_IsOptoR:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _IsOptoL *****************
  1743 ;; Defined at:
  1744 ;;		line 358 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      _Bool 
  1751 ;; Registers used:
  1752 ;;		wreg
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1758 ;;      Params:         0       0       0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0
  1761 ;;      Totals:         0       0       0       0       0       0       0
  1762 ;;Total ram usage:        0 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text15
  1772  00793E                     __ptext15:
  1773                           	callstack 0
  1774  00793E                     _IsOptoL:
  1775                           	callstack 30
  1776  00793E                     
  1777                           ;main.c: 361:     return (PORTBbits.RB2 == 0);
  1778  00793E  A481               	btfss	129,2,c	;volatile
  1779  007940  EFA4  F03C         	goto	u161
  1780  007944  EFA7  F03C         	goto	u160
  1781  007948                     u161:
  1782  007948  0E01               	movlw	1
  1783  00794A  EFA8  F03C         	goto	u170
  1784  00794E                     u160:
  1785  00794E  0E00               	movlw	0
  1786  007950                     u170:
  1787  007950  0012               	return		;funcret
  1788  007952                     __end_of_IsOptoL:
  1789                           	callstack 0
  1790                           
  1791 ;; *************** function _IsBumperR *****************
  1792 ;; Defined at:
  1793 ;;		line 352 in file "main.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      _Bool 
  1800 ;; Registers used:
  1801 ;;		wreg
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1807 ;;      Params:         0       0       0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_main
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text16
  1821  00792A                     __ptext16:
  1822                           	callstack 0
  1823  00792A                     _IsBumperR:
  1824                           	callstack 30
  1825  00792A                     
  1826                           ;main.c: 355:     return (PORTBbits.RB5 == 0);
  1827  00792A  AA81               	btfss	129,5,c	;volatile
  1828  00792C  EF9A  F03C         	goto	u181
  1829  007930  EF9D  F03C         	goto	u180
  1830  007934                     u181:
  1831  007934  0E01               	movlw	1
  1832  007936  EF9E  F03C         	goto	u190
  1833  00793A                     u180:
  1834  00793A  0E00               	movlw	0
  1835  00793C                     u190:
  1836  00793C  0012               	return		;funcret
  1837  00793E                     __end_of_IsBumperR:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _IsBumperL *****************
  1841 ;; Defined at:
  1842 ;;		line 346 in file "main.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      _Bool 
  1849 ;; Registers used:
  1850 ;;		wreg
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1856 ;;      Params:         0       0       0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text17
  1870  007916                     __ptext17:
  1871                           	callstack 0
  1872  007916                     _IsBumperL:
  1873                           	callstack 30
  1874  007916                     
  1875                           ;main.c: 349:     return (PORTBbits.RB4 == 0);
  1876  007916  A881               	btfss	129,4,c	;volatile
  1877  007918  EF90  F03C         	goto	u201
  1878  00791C  EF93  F03C         	goto	u200
  1879  007920                     u201:
  1880  007920  0E01               	movlw	1
  1881  007922  EF94  F03C         	goto	u210
  1882  007926                     u200:
  1883  007926  0E00               	movlw	0
  1884  007928                     u210:
  1885  007928  0012               	return		;funcret
  1886  00792A                     __end_of_IsBumperL:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _I2C_Initialise *****************
  1890 ;; Defined at:
  1891 ;;		line 214 in file "main.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1905 ;;      Params:         0       0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text18
  1919  00797C                     __ptext18:
  1920                           	callstack 0
  1921  00797C                     _I2C_Initialise:
  1922                           	callstack 30
  1923  00797C                     
  1924                           ;main.c: 217:     SSP1STAT = 0x00;
  1925  00797C  0E00               	movlw	0
  1926  00797E  6EC7               	movwf	199,c	;volatile
  1927                           
  1928                           ;main.c: 218:     SSP1CON1 = 0x28;
  1929  007980  0E28               	movlw	40
  1930  007982  6EC6               	movwf	198,c	;volatile
  1931                           
  1932                           ;main.c: 219:     SSP1CON2 = 0x00;
  1933  007984  0E00               	movlw	0
  1934  007986  6EC5               	movwf	197,c	;volatile
  1935                           
  1936                           ;main.c: 220:     SSP1CON3 = 0x08;
  1937  007988  0E08               	movlw	8
  1938  00798A  6ECB               	movwf	203,c	;volatile
  1939                           
  1940                           ;main.c: 221:     SSP1ADD = 0x09;
  1941  00798C  0E09               	movlw	9
  1942  00798E  6EC8               	movwf	200,c	;volatile
  1943  007990  0012               	return		;funcret
  1944  007992                     __end_of_I2C_Initialise:
  1945                           	callstack 0
  1946                           
  1947 ;; *************** function _I2C *****************
  1948 ;; Defined at:
  1949 ;;		line 280 in file "main.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1963 ;;      Params:         0       0       0       0       0       0       0
  1964 ;;      Locals:         0       0       0       0       0       0       0
  1965 ;;      Temps:          2       0       0       0       0       0       0
  1966 ;;      Totals:         2       0       0       0       0       0       0
  1967 ;;Total ram usage:        2 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    2
  1970 ;; This function calls:
  1971 ;;		_I2C_send_data
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text19
  1978  007BE2                     __ptext19:
  1979                           	callstack 0
  1980  007BE2                     _I2C:
  1981                           	callstack 28
  1982  007BE2                     
  1983                           ;main.c: 284:     {;main.c: 286:         I2C_send_data(0x40, 0x09, digits[10]);
  1984  007BE2  0E09               	movlw	9
  1985  007BE4  6E24               	movwf	I2C_send_data@register_address^0,c
  1986  007BE6  C01D  F025         	movff	_digits+10,I2C_send_data@register_data
  1987  007BEA  0E40               	movlw	64
  1988  007BEC  EC38  F03D         	call	_I2C_send_data
  1989  007BF0                     
  1990                           ;main.c: 287:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1991  007BF0  0E06               	movlw	6
  1992  007BF2  6E28               	movwf	(??_I2C+1)^0,c
  1993  007BF4  0E13               	movlw	19
  1994  007BF6  6E27               	movwf	??_I2C^0,c
  1995  007BF8  0EAE               	movlw	174
  1996  007BFA                     u617:
  1997  007BFA  2EE8               	decfsz	wreg,f,c
  1998  007BFC  D7FE               	bra	u617
  1999  007BFE  2E27               	decfsz	??_I2C^0,f,c
  2000  007C00  D7FC               	bra	u617
  2001  007C02  2E28               	decfsz	(??_I2C+1)^0,f,c
  2002  007C04  D7FA               	bra	u617
  2003  007C06                     
  2004                           ;main.c: 288:         I2C_send_data(0x40, 0x09, digits[UnLit]);
  2005  007C06  0E09               	movlw	9
  2006  007C08  6E24               	movwf	I2C_send_data@register_address^0,c
  2007  007C0A  0E13               	movlw	low _digits
  2008  007C0C  2409               	addwf	_UnLit^0,w,c
  2009  007C0E  6ED9               	movwf	fsr2l,c
  2010  007C10  0E00               	movlw	high _digits
  2011  007C12  200A               	addwfc	(_UnLit+1)^0,w,c
  2012  007C14  6EDA               	movwf	fsr2h,c
  2013  007C16  50DF               	movf	indf2,w,c
  2014  007C18  6E25               	movwf	I2C_send_data@register_data^0,c
  2015  007C1A  0E40               	movlw	64
  2016  007C1C  EC38  F03D         	call	_I2C_send_data
  2017  007C20                     
  2018                           ;main.c: 289:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2019  007C20  0E06               	movlw	6
  2020  007C22  6E28               	movwf	(??_I2C+1)^0,c
  2021  007C24  0E13               	movlw	19
  2022  007C26  6E27               	movwf	??_I2C^0,c
  2023  007C28  0EAE               	movlw	174
  2024  007C2A                     u627:
  2025  007C2A  2EE8               	decfsz	wreg,f,c
  2026  007C2C  D7FE               	bra	u627
  2027  007C2E  2E27               	decfsz	??_I2C^0,f,c
  2028  007C30  D7FC               	bra	u627
  2029  007C32  2E28               	decfsz	(??_I2C+1)^0,f,c
  2030  007C34  D7FA               	bra	u627
  2031  007C36                     
  2032                           ;main.c: 290:         I2C_send_data(0x40, 0x09, digits[11]);
  2033  007C36  0E09               	movlw	9
  2034  007C38  6E24               	movwf	I2C_send_data@register_address^0,c
  2035  007C3A  C01E  F025         	movff	_digits+11,I2C_send_data@register_data
  2036  007C3E  0E40               	movlw	64
  2037  007C40  EC38  F03D         	call	_I2C_send_data
  2038  007C44                     
  2039                           ;main.c: 291:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2040  007C44  0E06               	movlw	6
  2041  007C46  6E28               	movwf	(??_I2C+1)^0,c
  2042  007C48  0E13               	movlw	19
  2043  007C4A  6E27               	movwf	??_I2C^0,c
  2044  007C4C  0EAE               	movlw	174
  2045  007C4E                     u637:
  2046  007C4E  2EE8               	decfsz	wreg,f,c
  2047  007C50  D7FE               	bra	u637
  2048  007C52  2E27               	decfsz	??_I2C^0,f,c
  2049  007C54  D7FC               	bra	u637
  2050  007C56  2E28               	decfsz	(??_I2C+1)^0,f,c
  2051  007C58  D7FA               	bra	u637
  2052  007C5A                     
  2053                           ;main.c: 292:         I2C_send_data(0x40, 0x09, digits[Lit]);
  2054  007C5A  0E09               	movlw	9
  2055  007C5C  6E24               	movwf	I2C_send_data@register_address^0,c
  2056  007C5E  0E13               	movlw	low _digits
  2057  007C60  2407               	addwf	_Lit^0,w,c
  2058  007C62  6ED9               	movwf	fsr2l,c
  2059  007C64  0E00               	movlw	high _digits
  2060  007C66  2008               	addwfc	(_Lit+1)^0,w,c
  2061  007C68  6EDA               	movwf	fsr2h,c
  2062  007C6A  50DF               	movf	indf2,w,c
  2063  007C6C  6E25               	movwf	I2C_send_data@register_data^0,c
  2064  007C6E  0E40               	movlw	64
  2065  007C70  EC38  F03D         	call	_I2C_send_data
  2066                           
  2067                           ;main.c: 293:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2068  007C74  0E06               	movlw	6
  2069  007C76  6E28               	movwf	(??_I2C+1)^0,c
  2070  007C78  0E13               	movlw	19
  2071  007C7A  6E27               	movwf	??_I2C^0,c
  2072  007C7C  0EAE               	movlw	174
  2073  007C7E                     u647:
  2074  007C7E  2EE8               	decfsz	wreg,f,c
  2075  007C80  D7FE               	bra	u647
  2076  007C82  2E27               	decfsz	??_I2C^0,f,c
  2077  007C84  D7FC               	bra	u647
  2078  007C86  2E28               	decfsz	(??_I2C+1)^0,f,c
  2079  007C88  D7FA               	bra	u647
  2080  007C8A  0012               	return		;funcret
  2081  007C8C                     __end_of_I2C:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function _I2C_send_data *****************
  2085 ;; Defined at:
  2086 ;;		line 238 in file "main.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  device_addre    1    wreg     unsigned char 
  2089 ;;  register_add    1    1[COMRAM] unsigned char 
  2090 ;;  register_dat    1    2[COMRAM] unsigned char 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  device_addre    1    3[COMRAM] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2102 ;;      Params:         2       0       0       0       0       0       0
  2103 ;;      Locals:         1       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0
  2105 ;;      Totals:         3       0       0       0       0       0       0
  2106 ;;Total ram usage:        3 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    1
  2109 ;; This function calls:
  2110 ;;		_IdleI2C
  2111 ;;		_StartI2C
  2112 ;;		_StopI2C
  2113 ;;		_WriteI2C
  2114 ;; This function is called by:
  2115 ;;		_MCP23008_Initialise
  2116 ;;		_I2C
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text20
  2121  007A70                     __ptext20:
  2122                           	callstack 0
  2123  007A70                     _I2C_send_data:
  2124                           	callstack 28
  2125                           
  2126                           ;incstack = 0
  2127                           ;I2C_send_data@device_address stored from wreg
  2128  007A70  6E26               	movwf	I2C_send_data@device_address^0,c
  2129  007A72                     
  2130                           ;main.c: 238: void I2C_send_data(unsigned char device_address, unsigned char register_ad
      +                          dress, unsigned char register_data);main.c: 239: {;main.c: 241:     StartI2C();
  2131  007A72  EC62  F03D         	call	_StartI2C	;wreg free
  2132  007A76                     
  2133                           ;main.c: 242:     WriteI2C(device_address);
  2134  007A76  5026               	movf	I2C_send_data@device_address^0,w,c
  2135  007A78  ECB3  F03C         	call	_WriteI2C
  2136  007A7C                     
  2137                           ;main.c: 243:     IdleI2C();
  2138  007A7C  EC11  F03D         	call	_IdleI2C	;wreg free
  2139                           
  2140                           ;main.c: 244:     WriteI2C(register_address);
  2141  007A80  5024               	movf	I2C_send_data@register_address^0,w,c
  2142  007A82  ECB3  F03C         	call	_WriteI2C
  2143  007A86                     
  2144                           ;main.c: 245:     IdleI2C();
  2145  007A86  EC11  F03D         	call	_IdleI2C	;wreg free
  2146  007A8A                     
  2147                           ;main.c: 246:     WriteI2C(register_data);
  2148  007A8A  5025               	movf	I2C_send_data@register_data^0,w,c
  2149  007A8C  ECB3  F03C         	call	_WriteI2C
  2150                           
  2151                           ;main.c: 247:     IdleI2C();
  2152  007A90  EC11  F03D         	call	_IdleI2C	;wreg free
  2153  007A94                     
  2154                           ;main.c: 248:     StopI2C();
  2155  007A94  EC73  F03C         	call	_StopI2C	;wreg free
  2156  007A98  0012               	return		;funcret
  2157  007A9A                     __end_of_I2C_send_data:
  2158                           	callstack 0
  2159                           
  2160 ;; *************** function _WriteI2C *****************
  2161 ;; Defined at:
  2162 ;;		line 267 in file "main.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  data            1    wreg     unsigned char 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  data            1    0[COMRAM] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2176 ;;      Params:         0       0       0       0       0       0       0
  2177 ;;      Locals:         1       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0
  2179 ;;      Totals:         1       0       0       0       0       0       0
  2180 ;;Total ram usage:        1 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		_I2C_send_data
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text21
  2190  007966                     __ptext21:
  2191                           	callstack 0
  2192  007966                     _WriteI2C:
  2193                           	callstack 28
  2194                           
  2195                           ;incstack = 0
  2196                           ;WriteI2C@data stored from wreg
  2197  007966  6E23               	movwf	WriteI2C@data^0,c
  2198  007968                     
  2199                           ;main.c: 267: void WriteI2C(unsigned char data);main.c: 268: {;main.c: 269:     SSP1BUF 
      +                          = data;
  2200  007968  C023  FFC9         	movff	WriteI2C@data,4041	;volatile
  2201  00796C                     l343:
  2202  00796C  B0C7               	btfsc	199,0,c	;volatile
  2203  00796E  EFBB  F03C         	goto	u51
  2204  007972  EFBD  F03C         	goto	u50
  2205  007976                     u51:
  2206  007976  EFB6  F03C         	goto	l343
  2207  00797A                     u50:
  2208  00797A  0012               	return		;funcret
  2209  00797C                     __end_of_WriteI2C:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _StopI2C *****************
  2213 ;; Defined at:
  2214 ;;		line 274 in file "main.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		None
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2228 ;;      Params:         0       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_I2C_send_data
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text22
  2242  0078E6                     __ptext22:
  2243                           	callstack 0
  2244  0078E6                     _StopI2C:
  2245                           	callstack 28
  2246  0078E6                     
  2247                           ;main.c: 277:     SSP1CON2bits.PEN = 1;
  2248  0078E6  84C5               	bsf	197,2,c	;volatile
  2249  0078E8  0012               	return		;funcret
  2250  0078EA                     __end_of_StopI2C:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _StartI2C *****************
  2254 ;; Defined at:
  2255 ;;		line 257 in file "main.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2269 ;;      Params:         0       0       0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0
  2271 ;;      Temps:          1       0       0       0       0       0       0
  2272 ;;      Totals:         1       0       0       0       0       0       0
  2273 ;;Total ram usage:        1 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; This function calls:
  2276 ;;		Nothing
  2277 ;; This function is called by:
  2278 ;;		_I2C_send_data
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text23
  2283  007AC4                     __ptext23:
  2284                           	callstack 0
  2285  007AC4                     _StartI2C:
  2286                           	callstack 28
  2287  007AC4                     
  2288                           ;main.c: 259:     PIR1bits.SSPIF = 0;
  2289  007AC4  969E               	bcf	158,3,c	;volatile
  2290                           
  2291                           ;main.c: 260:     SSP1CON2bits.SEN = 1;
  2292  007AC6  80C5               	bsf	197,0,c	;volatile
  2293  007AC8                     l337:
  2294  007AC8  B4C7               	btfsc	199,2,c	;volatile
  2295  007ACA  EF69  F03D         	goto	u31
  2296  007ACE  EF6B  F03D         	goto	u30
  2297  007AD2                     u31:
  2298  007AD2  EF64  F03D         	goto	l337
  2299  007AD6                     u30:
  2300  007AD6  CFC5 F023          	movff	4037,??_StartI2C	;volatile
  2301  007ADA  0E1F               	movlw	31
  2302  007ADC  1623               	andwf	??_StartI2C^0,f,c
  2303  007ADE  A4D8               	btfss	status,2,c
  2304  007AE0  EF74  F03D         	goto	u41
  2305  007AE4  EF76  F03D         	goto	u40
  2306  007AE8                     u41:
  2307  007AE8  EF64  F03D         	goto	l337
  2308  007AEC                     u40:
  2309  007AEC                     
  2310                           ;main.c: 264:     PIR1bits.SSPIF = 0;
  2311  007AEC  969E               	bcf	158,3,c	;volatile
  2312  007AEE  0012               	return		;funcret
  2313  007AF0                     __end_of_StartI2C:
  2314                           	callstack 0
  2315                           
  2316 ;; *************** function _IdleI2C *****************
  2317 ;; Defined at:
  2318 ;;		line 251 in file "main.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      void 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2332 ;;      Params:         0       0       0       0       0       0       0
  2333 ;;      Locals:         0       0       0       0       0       0       0
  2334 ;;      Temps:          1       0       0       0       0       0       0
  2335 ;;      Totals:         1       0       0       0       0       0       0
  2336 ;;Total ram usage:        1 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_MCP23008_Initialise
  2342 ;;		_I2C_send_data
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text24
  2347  007A22                     __ptext24:
  2348                           	callstack 0
  2349  007A22                     _IdleI2C:
  2350                           	callstack 29
  2351  007A22                     l1057:
  2352  007A22  CFC5 F023          	movff	4037,??_IdleI2C	;volatile
  2353  007A26  0E1F               	movlw	31
  2354  007A28  1623               	andwf	??_IdleI2C^0,f,c
  2355  007A2A  A4D8               	btfss	status,2,c
  2356  007A2C  EF1A  F03D         	goto	u11
  2357  007A30  EF1C  F03D         	goto	u10
  2358  007A34                     u11:
  2359  007A34  EF11  F03D         	goto	l1057
  2360  007A38                     u10:
  2361  007A38  B2C7               	btfsc	199,1,c	;volatile
  2362  007A3A  EF21  F03D         	goto	u21
  2363  007A3E  EF23  F03D         	goto	u20
  2364  007A42                     u21:
  2365  007A42  EF11  F03D         	goto	l1057
  2366  007A46                     u20:
  2367  007A46  0012               	return		;funcret
  2368  007A48                     __end_of_IdleI2C:
  2369                           	callstack 0
  2370  0000                     
  2371                           	psect	rparam
  2372  0000                     
  2373                           	psect	idloc
  2374                           
  2375                           ;Config register IDLOC0 @ 0x200000
  2376                           ;	unspecified, using default values
  2377  200000                     	org	2097152
  2378  200000  FF                 	db	255
  2379                           
  2380                           ;Config register IDLOC1 @ 0x200001
  2381                           ;	unspecified, using default values
  2382  200001                     	org	2097153
  2383  200001  FF                 	db	255
  2384                           
  2385                           ;Config register IDLOC2 @ 0x200002
  2386                           ;	unspecified, using default values
  2387  200002                     	org	2097154
  2388  200002  FF                 	db	255
  2389                           
  2390                           ;Config register IDLOC3 @ 0x200003
  2391                           ;	unspecified, using default values
  2392  200003                     	org	2097155
  2393  200003  FF                 	db	255
  2394                           
  2395                           ;Config register IDLOC4 @ 0x200004
  2396                           ;	unspecified, using default values
  2397  200004                     	org	2097156
  2398  200004  FF                 	db	255
  2399                           
  2400                           ;Config register IDLOC5 @ 0x200005
  2401                           ;	unspecified, using default values
  2402  200005                     	org	2097157
  2403  200005  FF                 	db	255
  2404                           
  2405                           ;Config register IDLOC6 @ 0x200006
  2406                           ;	unspecified, using default values
  2407  200006                     	org	2097158
  2408  200006  FF                 	db	255
  2409                           
  2410                           ;Config register IDLOC7 @ 0x200007
  2411                           ;	unspecified, using default values
  2412  200007                     	org	2097159
  2413  200007  FF                 	db	255
  2414                           
  2415                           	psect	config
  2416                           
  2417                           ; Padding undefined space
  2418  300000                     	org	3145728
  2419  300000  FF                 	db	255
  2420                           
  2421                           ;Config register CONFIG1H @ 0x300001
  2422                           ;	Oscillator Selection bits
  2423                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  2424                           ;	4X PLL Enable
  2425                           ;	PLLCFG = OFF, Oscillator used directly
  2426                           ;	Primary clock enable bit
  2427                           ;	PRICLKEN = ON, Primary clock enabled
  2428                           ;	Fail-Safe Clock Monitor Enable bit
  2429                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2430                           ;	Internal/External Oscillator Switchover bit
  2431                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2432  300001                     	org	3145729
  2433  300001  23                 	db	35
  2434                           
  2435                           ;Config register CONFIG2L @ 0x300002
  2436                           ;	Power-up Timer Enable bit
  2437                           ;	PWRTEN = OFF, Power up timer disabled
  2438                           ;	Brown-out Reset Enable bits
  2439                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2440                           ;	Brown Out Reset Voltage bits
  2441                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2442  300002                     	org	3145730
  2443  300002  1F                 	db	31
  2444                           
  2445                           ;Config register CONFIG2H @ 0x300003
  2446                           ;	Watchdog Timer Enable bits
  2447                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2448                           ;	Watchdog Timer Postscale Select bits
  2449                           ;	WDTPS = 32768, 1:32768
  2450  300003                     	org	3145731
  2451  300003  3C                 	db	60
  2452                           
  2453                           ; Padding undefined space
  2454  300004                     	org	3145732
  2455  300004  FF                 	db	255
  2456                           
  2457                           ;Config register CONFIG3H @ 0x300005
  2458                           ;	CCP2 MUX bit
  2459                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2460                           ;	PORTB A/D Enable bit
  2461                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2462                           ;	P3A/CCP3 Mux bit
  2463                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2464                           ;	HFINTOSC Fast Start-up
  2465                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2466                           ;	Timer3 Clock input mux bit
  2467                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2468                           ;	ECCP2 B output mux bit
  2469                           ;	P2BMX = PORTB5, P2B is on RB5
  2470                           ;	MCLR Pin Enable bit
  2471                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2472  300005                     	org	3145733
  2473  300005  BF                 	db	191
  2474                           
  2475                           ;Config register CONFIG4L @ 0x300006
  2476                           ;	Stack Full/Underflow Reset Enable bit
  2477                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2478                           ;	Single-Supply ICSP Enable bit
  2479                           ;	LVP = OFF, Single-Supply ICSP disabled
  2480                           ;	Extended Instruction Set Enable bit
  2481                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2482                           ;	Background Debug
  2483                           ;	DEBUG = OFF, Disabled
  2484  300006                     	org	3145734
  2485  300006  81                 	db	129
  2486                           
  2487                           ; Padding undefined space
  2488  300007                     	org	3145735
  2489  300007  FF                 	db	255
  2490                           
  2491                           ;Config register CONFIG5L @ 0x300008
  2492                           ;	Code Protection Block 0
  2493                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2494                           ;	Code Protection Block 1
  2495                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2496                           ;	Code Protection Block 2
  2497                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2498                           ;	Code Protection Block 3
  2499                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2500  300008                     	org	3145736
  2501  300008  0F                 	db	15
  2502                           
  2503                           ;Config register CONFIG5H @ 0x300009
  2504                           ;	Boot Block Code Protection bit
  2505                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2506                           ;	Data EEPROM Code Protection bit
  2507                           ;	CPD = OFF, Data EEPROM not code-protected
  2508  300009                     	org	3145737
  2509  300009  C0                 	db	192
  2510                           
  2511                           ;Config register CONFIG6L @ 0x30000A
  2512                           ;	Write Protection Block 0
  2513                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2514                           ;	Write Protection Block 1
  2515                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2516                           ;	Write Protection Block 2
  2517                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2518                           ;	Write Protection Block 3
  2519                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2520  30000A                     	org	3145738
  2521  30000A  0F                 	db	15
  2522                           
  2523                           ;Config register CONFIG6H @ 0x30000B
  2524                           ;	Configuration Register Write Protection bit
  2525                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2526                           ;	Boot Block Write Protection bit
  2527                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2528                           ;	Data EEPROM Write Protection bit
  2529                           ;	WRTD = OFF, Data EEPROM not write-protected
  2530  30000B                     	org	3145739
  2531  30000B  E0                 	db	224
  2532                           
  2533                           ;Config register CONFIG7L @ 0x30000C
  2534                           ;	Table Read Protection Block 0
  2535                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2536                           ;	Table Read Protection Block 1
  2537                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2538                           ;	Table Read Protection Block 2
  2539                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2540                           ;	Table Read Protection Block 3
  2541                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2542  30000C                     	org	3145740
  2543  30000C  0F                 	db	15
  2544                           
  2545                           ;Config register CONFIG7H @ 0x30000D
  2546                           ;	Boot Block Table Read Protection bit
  2547                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2548  30000D                     	org	3145741
  2549  30000D  40                 	db	64
  2550                           tosu	equ	0xFFF
  2551                           tosh	equ	0xFFE
  2552                           tosl	equ	0xFFD
  2553                           stkptr	equ	0xFFC
  2554                           pclatu	equ	0xFFB
  2555                           pclath	equ	0xFFA
  2556                           pcl	equ	0xFF9
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           prodh	equ	0xFF4
  2562                           prodl	equ	0xFF3
  2563                           indf0	equ	0xFEF
  2564                           postinc0	equ	0xFEE
  2565                           postdec0	equ	0xFED
  2566                           preinc0	equ	0xFEC
  2567                           plusw0	equ	0xFEB
  2568                           fsr0h	equ	0xFEA
  2569                           fsr0l	equ	0xFE9
  2570                           wreg	equ	0xFE8
  2571                           indf1	equ	0xFE7
  2572                           postinc1	equ	0xFE6
  2573                           postdec1	equ	0xFE5
  2574                           preinc1	equ	0xFE4
  2575                           plusw1	equ	0xFE3
  2576                           fsr1h	equ	0xFE2
  2577                           fsr1l	equ	0xFE1
  2578                           bsr	equ	0xFE0
  2579                           indf2	equ	0xFDF
  2580                           postinc2	equ	0xFDE
  2581                           postdec2	equ	0xFDD
  2582                           preinc2	equ	0xFDC
  2583                           plusw2	equ	0xFDB
  2584                           fsr2h	equ	0xFDA
  2585                           fsr2l	equ	0xFD9
  2586                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_I2C
    _MCP23008_Initialise->_I2C_send_data
    _I2C->_I2C_send_data
    _I2C_send_data->_IdleI2C
    _I2C_send_data->_StartI2C
    _I2C_send_data->_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5744
                                              6 COMRAM     2     2      0
                                _I2C
                     _I2C_Initialise
                          _IsBumperL
                          _IsBumperR
                            _IsOptoL
                            _IsOptoR
                _MCP23008_Initialise
                  _SYSTEM_Initialize
                        _adcFunction
                         _diagnostic
                       _leftPosition
                          _motor_fwd
                      _rightPosition
 ---------------------------------------------------------------------------------
 (1) _rightPosition                                        1     1      0       0
                                              0 COMRAM     1     1      0
                        _adcFunction
 ---------------------------------------------------------------------------------
 (1) _motor_fwd                                            3     1      2    2846
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _leftPosition                                         1     1      0       0
                                              0 COMRAM     1     1      0
                        _adcFunction
 ---------------------------------------------------------------------------------
 (2) _adcFunction                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _diagnostic                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP23008_Initialise                                  0     0      0    1449
                      _I2C_send_data
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (1) _IsOptoR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C                                                  2     2      0    1449
                                              4 COMRAM     2     2      0
                      _I2C_send_data
 ---------------------------------------------------------------------------------
 (2) _I2C_send_data                                        3     1      2    1449
                                              1 COMRAM     3     1      2
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
   _I2C_Initialise
   _IsBumperL
   _IsBumperR
   _IsOptoL
   _IsOptoR
   _MCP23008_Initialise
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
     _IdleI2C
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
   _adcFunction
   _diagnostic
   _leftPosition
     _adcFunction
   _motor_fwd
   _rightPosition
     _adcFunction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      2A       1       44.2%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A       9        0.0%
DATA                 0      0      2A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Nov 28 23:29:19 2020

                             l21 79C0                               l24 78F6  
                             l51 7B1C                               l67 7904  
                             u10 7A38                               u11 7A34  
                             u20 7A46                               u21 7A42  
                             u30 7AD6                               u31 7AD2  
                             u40 7AEC                               u41 7AE8  
                             u50 797A                               u51 7976  
                             u60 7A1A                               u61 7A16  
                             u70 7C9C                               u71 7C96  
                             u80 7CC0                               u81 7CBA  
                             u90 7CFE                               u91 7CF8  
                             u76 7C9E                               u86 7CC2  
                             u96 7D00                              l103 79E0  
                            l123 7A00                              l145 79A6  
                            l322 7990                              l314 7D38  
                            l306 7C8C                              _I2C 7BE2  
                            l340 7AEE                              l308 7CB0  
                            l325 7BE0                              l317 7B44  
                            l334 7A46                              l262 7E80  
                            l343 796C                              l319 7B52  
                            l271 7DFE                              l328 7A98  
                            l352 7C8A                              l337 7AC8  
                            l361 7A0C                              l273 7E34  
                            l346 797A                              l370 793C  
                            l266 7DEE                              l339 7AEC  
                            l363 7A1A                              l355 7AC2  
                            l291 7F5C                              l364 7A20  
                            l349 78E8                              l373 7950  
                            l293 7F92                              l277 7E62  
                            l269 7DFC                              l358 7A6E  
                            l286 7F4C                              l367 7928  
                            l376 7964                              l297 7FC0  
                            l289 7F5A                              u100 7D22  
                            u101 7D1C                              u200 7926  
                            u201 7920                              u210 7928  
                            u106 7D24                              u140 7962  
                            u141 795C                              u150 7964  
                            u160 794E                              u400 7D9A  
                            u161 7948                              u401 7D96  
                            u170 7950                              u410 7DCE  
                            u411 7DCA                              u180 793A  
                            u420 7DFC                              u181 7934  
                            u421 7DF8                              u190 793C  
                            u430 7E62                              _PR2 000FBB  
                            u431 7E5E                              u360 7B32  
                            u440 7E9C                              u361 7B2E  
                            u441 7E98                              u450 7EF8  
                            u451 7EF4                              u507 7E0A  
                            u460 7F2C                              u461 7F28  
                            u517 7E3A                              u470 7F5A  
                            u390 7D86                              u607 7CE0  
                            u375 7B3E                              u471 7F56  
                            u527 7E72                              u391 7D82  
                            u376 7B40                              u480 7FC0  
                            u617 7BFA                              u385 7B50  
                            u481 7FBC                              u537 7F68  
                            u386 7B52                              u490 7FF8  
                            u627 7C2A                              u491 7FF4  
                            u547 7F98                              u637 7C4E  
                            u557 7FD0                              u647 7C7E  
                            u567 7AA2                              u577 7AB4  
                            u587 7A50                              u597 7A60  
                            _Lit 0007                  _TMR2_Initialize 78F8  
                            wreg 000FE8         __end_of_EPWM2_Initialize 7A02  
                           ?_I2C 0023                             l1101 79A8  
                           l1103 797C                             l1111 7CEE  
                           l1113 7D12                             l1123 793E  
                           l1107 7C8C                             l1061 7AC4  
                           l1301 7A72                             l1109 7CD6  
                           l1141 7A48                             l1055 7A22  
                           l1063 7AD6                             l1311 7A94  
                           l1303 7A76                             l1119 7952  
                           l1071 7B1A                             l1143 7A4A  
                           l1057 7A22                             l1065 7968  
                           l1305 7A7C                             l1321 7BF0  
                           l1161 7916                             l1313 7B8A  
                           l1073 78EA                             l1081 78FE  
                           l1145 7A58                             l1153 7A9A  
                           l1401 7F84                             l1059 7A38  
                           l1067 78E6                             l1307 7A86  
                           l1331 7C5A                             l1323 7C06  
                           l1075 79C2                             l1083 79E2  
                           l1147 7A6A                             l1315 7B20  
                           l1155 7A9C                             l1411 7FC6  
                           l1403 7FA0                             l1309 7A8A  
                           l1325 7C20                             l1149 792A  
                           l1085 7992                             l1069 7AF0  
                           l1077 78F8                             l1317 7B32  
                           l1157 7AAC                             l1413 7FDC  
                           l1405 7FA8                             l1341 7D58  
                           l1333 7D3A                             l1327 7C36  
                           l1319 7BE2                             l1079 78FA  
                           l1087 7A02                             l1159 7ABE  
                           l1415 7FDE                             l1407 7FAC  
                           l1343 7D66                             l1335 7D42  
                           l1329 7C44                             l1409 7FC2  
                           l1417 7FE6                             l1361 7E18  
                           l1353 7DBA                             l1345 7D6A  
                           l1337 7D46                             l1371 7E64  
                           l1363 7E26                             l1355 7DCE  
                           l1347 7D86                             l1339 7D4A  
                           l1381 7EBC                             l1373 7E68  
                           l1365 7E42                             l1349 7D9A  
                           l1391 7F18                             l1383 7EC8  
                           l1375 7E7E                             l1359 7E00  
                           l1367 7E4A                             l1393 7F2C  
                           l1385 7EE4                             l1377 7E9C  
                           l1369 7E4E                             l1387 7EF8  
                           l1379 7EB8                             l1397 7F5E  
                           l1399 7F76                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _TMR2 000FBC                             _WPUB 000F61  
                           _main 7D3A                             _time 0001  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                             start 0000  
                __end_of_IdleI2C 7A48                     ___param_bank 000000  
                __end_of_IsOptoL 7952                  __end_of_IsOptoR 7966  
                          ??_I2C 0027   __size_of_OSCILLATOR_Initialize 000E  
  __end_of_OSCILLATOR_Initialize 78F8                  __end_of_StopI2C 78EA  
                          ?_main 0023                    ?_leftPosition 0023  
                          _T2CON 000FBA                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _UnLit 0009                            _time1 000B  
                          tablat 000FF5                            status 000FD8  
                __initialization 7B54                     __end_of_main 8000  
        __end_of_TMR2_Initialize 7906                   ??_leftPosition 0023  
                         ??_main 0029                    __activetblptr 000002  
             __size_of_IsBumperL 0014               __size_of_IsBumperR 0014  
               __end_of_StartI2C 7AF0                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR1H 000FBF                           _CCPR2H 000F68  
                         _CCPR1L 000FBE                           _CCPR2L 000F67  
               __end_of_WriteI2C 797C                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                         _LDRVAL 0021                        ??_IdleI2C 0023  
                         _OSCCON 000FD3            __end_of_rightPosition 7AC4  
                      ??_IsOptoL 0023                        ??_IsOptoR 0023  
                   _CCPTMRS0bits 000F49                        ??_StopI2C 0023  
                         _digits 0013                           clear_0 7B7A  
        __size_of_I2C_Initialise 0016                     WriteI2C@data 0023  
                   __pdataCOMRAM 0013                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
              _SYSTEM_Initialize 79A8                       __accesstop 0060  
        __end_of__initialization 7B80               ?_SYSTEM_Initialize 0023  
                  ___rparam_used 000001           __size_of_I2C_send_data 002A  
              __end_of_IsBumperL 792A                __end_of_IsBumperR 793E  
              ?_EPWM1_Initialize 0023                   __pcstackCOMRAM 0023  
            ??_SYSTEM_Initialize 0023               ??_EPWM1_Initialize 0023  
               ?_TMR2_Initialize 0023                     _debounceTime 001F  
              ?_EPWM2_Initialize 0023                    ??_adcFunction 0023  
      __end_of_SYSTEM_Initialize 79C2               ??_EPWM2_Initialize 0023  
           __end_of_leftPosition 7A70     __size_of_MCP23008_Initialise 0058  
                     _diagnostic 7C8C      I2C_send_data@device_address 0026  
                      ?_StartI2C 0023                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          _ECCP1AS 000FB6  
                        _ECCP2AS 000F64                        ?_WriteI2C 0023  
        __size_of_ADC_Initialize 0016               __size_of_motor_fwd 0036  
                  _I2C_send_data 7A70                          _OSCCON2 000FD2  
  I2C_send_data@register_address 0024                          _OSCTUNE 000F9B  
                        _PWM1CON 000FB7                          _PWM2CON 000F65  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
                        _IdleI2C 7A22                          _IsOptoL 793E  
                        _IsOptoR 7952              __end_of_adcFunction 7A22  
           _ADC_InterruptHandler 0011                          __Hparam 0000  
                        __Lparam 0000                          _StopI2C 78E6  
                     ??_StartI2C 0023                          __pcinit 7B54  
                     ??_WriteI2C 0023                   _I2C_Initialise 797C  
                        __ramtop 0600                          __ptext0 7D3A  
                        __ptext1 7A9A                          __ptext2 7B1E  
                        __ptext3 7A48                          __ptext4 7A02  
                        __ptext5 7C8C                          __ptext6 79A8  
                        __ptext7 78F8                          __ptext8 7AF0  
                        __ptext9 78EA                     __size_of_I2C 00AA  
                 ?_I2C_send_data 0024            _OSCILLATOR_Initialize 78EA  
                      _T2CONbits 000FBA         ??_PIN_MANAGER_Initialize 0023  
     __size_of_SYSTEM_Initialize 001A             end_of_initialization 7B80  
                  __Lmediumconst 0000                __end_of_motor_fwd 7B54  
                    ?_diagnostic 0023                          postdec1 000FE5  
                        postinc0 000FEE           __end_of_I2C_Initialise 7992  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
          __size_of_leftPosition 0028                      _adcFunction 7A02  
                ?_I2C_Initialise 0023                        _IsBumperL 7916  
                      _IsBumperR 792A                    __pidataCOMRAM 7906  
                ??_I2C_send_data 0026                   _ADC_Initialize 7992  
         ?_OSCILLATOR_Initialize 0023                     _leftPosition 7A48  
         __size_of_rightPosition 002A              start_initialization 7B54  
            _MCP23008_Initialise 7B8A        __size_of_EPWM1_Initialize 0020  
                    __end_of_I2C 7C8C  __size_of_PIN_MANAGER_Initialize 002E  
            __size_of_diagnostic 00AE             ?_MCP23008_Initialise 0023  
      __size_of_EPWM2_Initialize 0020           __end_of_ADC_Initialize 79A8  
                     ?_IsBumperL 0023                       ?_IsBumperR 0023  
              __size_of_StartI2C 002C                __size_of_WriteI2C 0016  
                    __pbssCOMRAM 0001                        _adcResult 000F  
       __size_of_TMR2_Initialize 000E                         ?_IdleI2C 0023  
                       ?_IsOptoL 0023                         ?_IsOptoR 0023  
                  _rightPosition 7A9A            ??_MCP23008_Initialise 0027  
         _PIN_MANAGER_Initialize 7AF0                         ?_StopI2C 0023  
                ?_ADC_Initialize 0023                     _intialResult 000D  
                       _LATCbits 000F8B                   ?_rightPosition 0023  
                   ??_diagnostic 0023                         _PIR1bits 000F9E  
                      _motor_fwd 7B1E                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                         _SSP1CON3 000FCB  
                       _PSTR1CON 000FB9                         _PSTR2CON 000F63  
                       _SSP1STAT 000FC7                      ??_IsBumperL 0023  
                    ??_IsBumperR 0023                       _ADCON0bits 000FC2  
               _EPWM1_Initialize 79C2               __end_of_diagnostic 7D3A  
                    _INTCON2bits 000FF1                     ?_adcFunction 0023  
                      copy_data0 7B68                ??_TMR2_Initialize 0023  
               __size_of_IdleI2C 0026                 ??_I2C_Initialise 0023  
               __size_of_IsOptoL 0014                 __size_of_IsOptoR 0014  
                       __Hrparam 0000                 _EPWM2_Initialize 79E2  
                       __Lrparam 0000                       ?_motor_fwd 0023  
                       _StartI2C 7AC4                 __size_of_StopI2C 0004  
        ??_OSCILLATOR_Initialize 0023                         _WriteI2C 7966  
                       __ptext10 79E2                         __ptext11 79C2  
                       __ptext20 7A70                         __ptext12 7992  
                       __ptext21 7966                         __ptext13 7B8A  
                       __ptext22 78E6                         __ptext14 7952  
                       __ptext23 7AC4                         __ptext15 793E  
                       __ptext24 7A22                         __ptext16 792A  
                       __ptext17 7916                         __ptext18 797C  
                       __ptext19 7BE2                     _SSP1CON2bits 000FC5  
                ??_rightPosition 0023                    __size_of_main 02C6  
                   _SSP1STATbits 000FC7                    motor_fwd@STAT 0024  
          __end_of_I2C_send_data 7A9A                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 0023                 ??_ADC_Initialize 0023  
                    ??_motor_fwd 0025                     motor_fwd@dir 0025  
                   motor_fwd@spd 0023                   _positionHolder 0005  
     I2C_send_data@register_data 0025      __end_of_MCP23008_Initialise 7BE2  
 __end_of_PIN_MANAGER_Initialize 7B1E             __size_of_adcFunction 0020  
       __end_of_EPWM1_Initialize 79E2  
