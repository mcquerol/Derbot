

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Nov 23 15:15:26 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 05/05/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F25K22 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  007BD8                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _digits
    75  007BD8  3E                 	db	62
    76  007BD9  38                 	db	56
    77  007BDA  3F                 	db	63
    78  007BDB  06                 	db	6
    79  007BDC  5B                 	db	91
    80  007BDD  4F                 	db	79
    81  007BDE  66                 	db	102
    82  007BDF  6D                 	db	109
    83  007BE0  7D                 	db	125
    84  007BE1  07                 	db	7
    85  007BE2  7F                 	db	127
    86  007BE3  67                 	db	103
    87  0000                     _ANSELA	set	3896
    88  0000                     _ANSELB	set	3897
    89  0000                     _ANSELC	set	3898
    90  0000                     _CCPTMRS0bits	set	3913
    91  0000                     _INTCONbits	set	4082
    92  0000                     _INTCON2bits	set	4081
    93  0000                     _WPUB	set	3937
    94  0000                     _TRISC	set	3988
    95  0000                     _TRISB	set	3987
    96  0000                     _TRISA	set	3986
    97  0000                     _LATC	set	3979
    98  0000                     _LATB	set	3978
    99  0000                     _LATA	set	3977
   100  0000                     _OSCTUNE	set	3995
   101  0000                     _OSCCON2	set	4050
   102  0000                     _OSCCON	set	4051
   103  0000                     _ADCON0bits	set	4034
   104  0000                     _ADCON0	set	4034
   105  0000                     _ADRESH	set	4036
   106  0000                     _ADRESL	set	4035
   107  0000                     _ADCON2	set	4032
   108  0000                     _ADCON1	set	4033
   109  0000                     _SSP1STATbits	set	4039
   110  0000                     _SSP1BUF	set	4041
   111  0000                     _SSP1CON2bits	set	4037
   112  0000                     _SSP1ADD	set	4040
   113  0000                     _SSP1CON3	set	4043
   114  0000                     _SSP1CON2	set	4037
   115  0000                     _SSP1CON1	set	4038
   116  0000                     _SSP1STAT	set	4039
   117  0000                     _PORTBbits	set	3969
   118  0000                     _PORTAbits	set	3968
   119  0000                     _LATCbits	set	3979
   120  0000                     _T2CONbits	set	4026
   121  0000                     _T2CON	set	4026
   122  0000                     _PIR1bits	set	3998
   123  0000                     _TMR2	set	4028
   124  0000                     _PR2	set	4027
   125  0000                     _CCPR1L	set	4030
   126  0000                     _CCPR1H	set	4031
   127  0000                     _PSTR1CON	set	4025
   128  0000                     _PWM1CON	set	4023
   129  0000                     _ECCP1AS	set	4022
   130  0000                     _CCP1CON	set	4029
   131  0000                     _CCPR2L	set	3943
   132  0000                     _CCPR2H	set	3944
   133  0000                     _PSTR2CON	set	3939
   134  0000                     _PWM2CON	set	3941
   135  0000                     _ECCP2AS	set	3940
   136  0000                     _CCP2CON	set	3942
   137                           
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141  007DA2                     __pcinit:
   142                           	callstack 0
   143  007DA2                     start_initialization:
   144                           	callstack 0
   145  007DA2                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Initialize objects allocated to COMRAM (12 bytes)
   149                           ; load TBLPTR registers with __pidataCOMRAM
   150  007DA2  0ED8               	movlw	low __pidataCOMRAM
   151  007DA4  6EF6               	movwf	tblptrl,c
   152  007DA6  0E7B               	movlw	high __pidataCOMRAM
   153  007DA8  6EF7               	movwf	tblptrh,c
   154  007DAA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   155  007DAC  6EF8               	movwf	tblptru,c
   156  007DAE  EE00  F001         	lfsr	0,__pdataCOMRAM
   157  007DB2  EE10 F00C          	lfsr	1,12
   158  007DB6                     copy_data0:
   159  007DB6  0009               	tblrd		*+
   160  007DB8  CFF5 FFEE          	movff	tablat,postinc0
   161  007DBC  50E5               	movf	postdec1,w,c
   162  007DBE  50E1               	movf	fsr1l,w,c
   163  007DC0  E1FA               	bnz	copy_data0
   164                           
   165                           ; Clear objects allocated to COMRAM (10 bytes)
   166  007DC2  EE00  F00D         	lfsr	0,__pbssCOMRAM
   167  007DC6  0E0A               	movlw	10
   168  007DC8                     clear_0:
   169  007DC8  6AEE               	clrf	postinc0,c
   170  007DCA  06E8               	decf	wreg,f,c
   171  007DCC  E1FD               	bnz	clear_0
   172  007DCE                     end_of_initialization:
   173                           	callstack 0
   174  007DCE                     __end_of__initialization:
   175                           	callstack 0
   176  007DCE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  007DD0  6EF8               	movwf	tblptru,c
   178  007DD2  0100               	movlb	0
   179  007DD4  EF5B  F03F         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182  00000D                     __pbssCOMRAM:
   183                           	callstack 0
   184  00000D                     _ADC_InterruptHandler:
   185                           	callstack 0
   186  00000D                     	ds	2
   187  00000F                     _Lit:
   188                           	callstack 0
   189  00000F                     	ds	2
   190  000011                     _UnLit:
   191                           	callstack 0
   192  000011                     	ds	2
   193  000013                     _intialResult:
   194                           	callstack 0
   195  000013                     	ds	2
   196  000015                     _adcResult:
   197                           	callstack 0
   198  000015                     	ds	2
   199                           
   200                           	psect	dataCOMRAM
   201  000001                     __pdataCOMRAM:
   202                           	callstack 0
   203  000001                     _digits:
   204                           	callstack 0
   205  000001                     	ds	12
   206                           
   207                           	psect	cstackCOMRAM
   208  000017                     __pcstackCOMRAM:
   209                           	callstack 0
   210  000017                     ??_diagnostic:
   211  000017                     ??_IdleI2C:
   212  000017                     ??_StartI2C:
   213  000017                     motor_fwd@spd:
   214                           	callstack 0
   215  000017                     WriteI2C@data:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x0
   219  000017                     	ds	1
   220  000018                     motor_fwd@STAT:
   221                           	callstack 0
   222  000018                     I2C_send_data@register_address:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x1
   226  000018                     	ds	1
   227  000019                     motor_fwd@dir:
   228                           	callstack 0
   229  000019                     I2C_send_data@register_data:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x2
   233  000019                     	ds	1
   234  00001A                     I2C_send_data@device_address:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x3
   238  00001A                     	ds	1
   239  00001B                     ??_I2C_test:
   240                           
   241                           ; 1 bytes @ 0x4
   242  00001B                     	ds	2
   243  00001D                     I2C_test@i:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x6
   247  00001D                     	ds	2
   248  00001F                     
   249                           ; 1 bytes @ 0x8
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 57 in file "main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   269 ;;      Params:         0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels required when called:    3
   275 ;; This function calls:
   276 ;;		_I2C_Initialise
   277 ;;		_I2C_test
   278 ;;		_IsOptoL
   279 ;;		_IsOptoR
   280 ;;		_MCP23008_Initialise
   281 ;;		_SYSTEM_Initialize
   282 ;;		_diagnostic
   283 ;;		_motor_fwd
   284 ;; This function is called by:
   285 ;;		Startup code after reset
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text0
   290  007EB6                     __ptext0:
   291                           	callstack 0
   292  007EB6                     _main:
   293                           	callstack 28
   294  007EB6                     
   295                           ;main.c: 60:     SYSTEM_Initialize();
   296  007EB6  EC35  F03E         	call	_SYSTEM_Initialize	;wreg free
   297                           
   298                           ;main.c: 61:     I2C_Initialise();
   299  007EBA  EC14  F03E         	call	_I2C_Initialise	;wreg free
   300  007EBE                     
   301                           ;main.c: 62:     MCP23008_Initialise();
   302  007EBE  ECEC  F03E         	call	_MCP23008_Initialise	;wreg free
   303  007EC2                     
   304                           ;main.c: 63:     diagnostic();
   305  007EC2  ECA9  F03F         	call	_diagnostic	;wreg free
   306  007EC6                     l1181:
   307                           
   308                           ;main.c: 65:     {;main.c: 66:         I2C_test();
   309  007EC6  EC18  F03F         	call	_I2C_test	;wreg free
   310  007ECA                     
   311                           ;main.c: 68:         motor_fwd('L', 255, 1);
   312  007ECA  0EFF               	movlw	255
   313  007ECC  6E17               	movwf	motor_fwd@spd^0,c
   314  007ECE  0E01               	movlw	1
   315  007ED0  6E18               	movwf	motor_fwd@STAT^0,c
   316  007ED2  0E4C               	movlw	76
   317  007ED4  ECB6  F03E         	call	_motor_fwd
   318  007ED8                     
   319                           ;main.c: 69:         motor_fwd('R', 250, 1);
   320  007ED8  0EFA               	movlw	250
   321  007EDA  6E17               	movwf	motor_fwd@spd^0,c
   322  007EDC  0E01               	movlw	1
   323  007EDE  6E18               	movwf	motor_fwd@STAT^0,c
   324  007EE0  0E52               	movlw	82
   325  007EE2  ECB6  F03E         	call	_motor_fwd
   326  007EE6                     
   327                           ;main.c: 72:         if (IsOptoR())
   328  007EE6  EC0A  F03E         	call	_IsOptoR	;wreg free
   329  007EEA  0900               	iorlw	0
   330  007EEC  B4D8               	btfsc	status,2,c
   331  007EEE  EF7B  F03F         	goto	u291
   332  007EF2  EF7D  F03F         	goto	u290
   333  007EF6                     u291:
   334  007EF6  EF8D  F03F         	goto	l1193
   335  007EFA                     u290:
   336  007EFA                     
   337                           ;main.c: 73:         {;main.c: 74:             motor_fwd('L', 250, 1);
   338  007EFA  0EFA               	movlw	250
   339  007EFC  6E17               	movwf	motor_fwd@spd^0,c
   340  007EFE  0E01               	movlw	1
   341  007F00  6E18               	movwf	motor_fwd@STAT^0,c
   342  007F02  0E4C               	movlw	76
   343  007F04  ECB6  F03E         	call	_motor_fwd
   344                           
   345                           ;main.c: 75:             motor_fwd('R', 105, 1);
   346  007F08  0E69               	movlw	105
   347  007F0A  6E17               	movwf	motor_fwd@spd^0,c
   348  007F0C  0E01               	movlw	1
   349  007F0E  6E18               	movwf	motor_fwd@STAT^0,c
   350  007F10  0E52               	movlw	82
   351  007F12  ECB6  F03E         	call	_motor_fwd
   352                           
   353                           ;main.c: 76:             continue;
   354  007F16  EF63  F03F         	goto	l1181
   355  007F1A                     l1193:
   356  007F1A  EC00  F03E         	call	_IsOptoL	;wreg free
   357  007F1E  0900               	iorlw	0
   358  007F20  B4D8               	btfsc	status,2,c
   359  007F22  EF95  F03F         	goto	u301
   360  007F26  EF97  F03F         	goto	u300
   361  007F2A                     u301:
   362  007F2A  EF63  F03F         	goto	l1181
   363  007F2E                     u300:
   364  007F2E                     
   365                           ;main.c: 79:         {;main.c: 80:             motor_fwd('L', 105, 1);
   366  007F2E  0E69               	movlw	105
   367  007F30  6E17               	movwf	motor_fwd@spd^0,c
   368  007F32  0E01               	movlw	1
   369  007F34  6E18               	movwf	motor_fwd@STAT^0,c
   370  007F36  0E4C               	movlw	76
   371  007F38  ECB6  F03E         	call	_motor_fwd
   372                           
   373                           ;main.c: 81:             motor_fwd('R', 250, 1);
   374  007F3C  0EFA               	movlw	250
   375  007F3E  6E17               	movwf	motor_fwd@spd^0,c
   376  007F40  0E01               	movlw	1
   377  007F42  6E18               	movwf	motor_fwd@STAT^0,c
   378  007F44  0E52               	movlw	82
   379  007F46  ECB6  F03E         	call	_motor_fwd
   380                           
   381                           ;main.c: 83:             continue;
   382  007F4A  EF63  F03F         	goto	l1181
   383  007F4E  EF00  F000         	goto	start
   384  007F52                     __end_of_main:
   385                           	callstack 0
   386                           
   387 ;; *************** function _motor_fwd *****************
   388 ;; Defined at:
   389 ;;		line 108 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;  dir             1    wreg     unsigned char 
   392 ;;  spd             1    0[COMRAM] unsigned char 
   393 ;;  STAT            1    1[COMRAM] _Bool 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  dir             1    2[COMRAM] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   405 ;;      Params:         2       0       0       0       0       0       0
   406 ;;      Locals:         1       0       0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0
   408 ;;      Totals:         3       0       0       0       0       0       0
   409 ;;Total ram usage:        3 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           	psect	text1
   419  007D6C                     __ptext1:
   420                           	callstack 0
   421  007D6C                     _motor_fwd:
   422                           	callstack 30
   423                           
   424                           ;incstack = 0
   425                           ;motor_fwd@dir stored from wreg
   426  007D6C  6E19               	movwf	motor_fwd@dir^0,c
   427  007D6E                     
   428                           ;main.c: 108: void motor_fwd(unsigned char dir, unsigned char spd, _Bool STAT);main.c: 1
      +                          09: {;main.c: 110:     if (dir == 'L')
   429  007D6E  0E4C               	movlw	76
   430  007D70  1819               	xorwf	motor_fwd@dir^0,w,c
   431  007D72  A4D8               	btfss	status,2,c
   432  007D74  EFBE  F03E         	goto	u261
   433  007D78  EFC0  F03E         	goto	u260
   434  007D7C                     u261:
   435  007D7C  EFC9  F03E         	goto	l163
   436  007D80                     u260:
   437  007D80                     
   438                           ;main.c: 111:     {;main.c: 112:         CCPR2L = spd;
   439  007D80  C017  FF67         	movff	motor_fwd@spd,3943	;volatile
   440                           
   441                           ;main.c: 113:         PORTAbits.RA5 = STAT;
   442  007D84  B018               	btfsc	motor_fwd@STAT^0,0,c
   443  007D86  D002               	bra	u275
   444  007D88  9A80               	bcf	128,5,c	;volatile
   445  007D8A  D001               	bra	u276
   446  007D8C                     u275:
   447  007D8C  8A80               	bsf	128,5,c	;volatile
   448  007D8E                     u276:
   449                           
   450                           ;main.c: 114:     }
   451  007D8E  EFD0  F03E         	goto	l165
   452  007D92                     l163:
   453                           
   454                           ;main.c: 116:     {;main.c: 117:         CCPR1L = spd;
   455  007D92  C017  FFBE         	movff	motor_fwd@spd,4030	;volatile
   456                           
   457                           ;main.c: 118:         PORTAbits.RA2 = STAT;
   458  007D96  B018               	btfsc	motor_fwd@STAT^0,0,c
   459  007D98  D002               	bra	u285
   460  007D9A  9480               	bcf	128,2,c	;volatile
   461  007D9C  D001               	bra	u286
   462  007D9E                     u285:
   463  007D9E  8480               	bsf	128,2,c	;volatile
   464  007DA0                     u286:
   465  007DA0                     l165:
   466  007DA0  0012               	return		;funcret
   467  007DA2                     __end_of_motor_fwd:
   468                           	callstack 0
   469                           
   470 ;; *************** function _diagnostic *****************
   471 ;; Defined at:
   472 ;;		line 99 in file "main.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   486 ;;      Params:         0       0       0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0       0       0
   488 ;;      Temps:          2       0       0       0       0       0       0
   489 ;;      Totals:         2       0       0       0       0       0       0
   490 ;;Total ram usage:        2 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text2
   500  007F52                     __ptext2:
   501                           	callstack 0
   502  007F52                     _diagnostic:
   503                           	callstack 30
   504  007F52  BA8B               	btfsc	139,5,c	;volatile
   505  007F54  EFAE  F03F         	goto	u61
   506  007F58  EFB1  F03F         	goto	u60
   507  007F5C                     u61:
   508  007F5C  0E01               	movlw	1
   509  007F5E  EFB2  F03F         	goto	u66
   510  007F62                     u60:
   511  007F62  0E00               	movlw	0
   512  007F64                     u66:
   513  007F64  0AFF               	xorlw	255
   514  007F66  6E17               	movwf	??_diagnostic^0,c
   515  007F68  3A17               	swapf	??_diagnostic^0,f,c
   516  007F6A  4617               	rlncf	??_diagnostic^0,f,c
   517  007F6C  508B               	movf	139,w,c	;volatile
   518  007F6E  1817               	xorwf	??_diagnostic^0,w,c
   519  007F70  0BDF               	andlw	-33
   520  007F72  1817               	xorwf	??_diagnostic^0,w,c
   521  007F74  6E8B               	movwf	139,c	;volatile
   522  007F76  BC8B               	btfsc	139,6,c	;volatile
   523  007F78  EFC0  F03F         	goto	u71
   524  007F7C  EFC3  F03F         	goto	u70
   525  007F80                     u71:
   526  007F80  0E01               	movlw	1
   527  007F82  EFC4  F03F         	goto	u76
   528  007F86                     u70:
   529  007F86  0E00               	movlw	0
   530  007F88                     u76:
   531  007F88  0AFF               	xorlw	255
   532  007F8A  6E17               	movwf	??_diagnostic^0,c
   533  007F8C  3A17               	swapf	??_diagnostic^0,f,c
   534  007F8E  4617               	rlncf	??_diagnostic^0,f,c
   535  007F90  4617               	rlncf	??_diagnostic^0,f,c
   536  007F92  508B               	movf	139,w,c	;volatile
   537  007F94  1817               	xorwf	??_diagnostic^0,w,c
   538  007F96  0BBF               	andlw	-65
   539  007F98  1817               	xorwf	??_diagnostic^0,w,c
   540  007F9A  6E8B               	movwf	139,c	;volatile
   541  007F9C                     
   542                           ;main.c: 103:     _delay((unsigned long)((300)*(4000000/4000.0)));
   543  007F9C  0E02               	movlw	2
   544  007F9E  6E18               	movwf	(??_diagnostic+1)^0,c
   545  007FA0  0E86               	movlw	134
   546  007FA2  6E17               	movwf	??_diagnostic^0,c
   547  007FA4  0E99               	movlw	153
   548  007FA6                     u317:
   549  007FA6  2EE8               	decfsz	wreg,f,c
   550  007FA8  D7FE               	bra	u317
   551  007FAA  2E17               	decfsz	??_diagnostic^0,f,c
   552  007FAC  D7FC               	bra	u317
   553  007FAE  2E18               	decfsz	(??_diagnostic+1)^0,f,c
   554  007FB0  D7FA               	bra	u317
   555  007FB2  F000               	nop	
   556  007FB4  BA8B               	btfsc	139,5,c	;volatile
   557  007FB6  EFDF  F03F         	goto	u81
   558  007FBA  EFE2  F03F         	goto	u80
   559  007FBE                     u81:
   560  007FBE  0E01               	movlw	1
   561  007FC0  EFE3  F03F         	goto	u86
   562  007FC4                     u80:
   563  007FC4  0E00               	movlw	0
   564  007FC6                     u86:
   565  007FC6  0AFF               	xorlw	255
   566  007FC8  6E17               	movwf	??_diagnostic^0,c
   567  007FCA  3A17               	swapf	??_diagnostic^0,f,c
   568  007FCC  4617               	rlncf	??_diagnostic^0,f,c
   569  007FCE  508B               	movf	139,w,c	;volatile
   570  007FD0  1817               	xorwf	??_diagnostic^0,w,c
   571  007FD2  0BDF               	andlw	-33
   572  007FD4  1817               	xorwf	??_diagnostic^0,w,c
   573  007FD6  6E8B               	movwf	139,c	;volatile
   574  007FD8  BC8B               	btfsc	139,6,c	;volatile
   575  007FDA  EFF1  F03F         	goto	u91
   576  007FDE  EFF4  F03F         	goto	u90
   577  007FE2                     u91:
   578  007FE2  0E01               	movlw	1
   579  007FE4  EFF5  F03F         	goto	u96
   580  007FE8                     u90:
   581  007FE8  0E00               	movlw	0
   582  007FEA                     u96:
   583  007FEA  0AFF               	xorlw	255
   584  007FEC  6E17               	movwf	??_diagnostic^0,c
   585  007FEE  3A17               	swapf	??_diagnostic^0,f,c
   586  007FF0  4617               	rlncf	??_diagnostic^0,f,c
   587  007FF2  4617               	rlncf	??_diagnostic^0,f,c
   588  007FF4  508B               	movf	139,w,c	;volatile
   589  007FF6  1817               	xorwf	??_diagnostic^0,w,c
   590  007FF8  0BBF               	andlw	-65
   591  007FFA  1817               	xorwf	??_diagnostic^0,w,c
   592  007FFC  6E8B               	movwf	139,c	;volatile
   593  007FFE  0012               	return		;funcret
   594  008000                     __end_of_diagnostic:
   595                           	callstack 0
   596                           
   597 ;; *************** function _SYSTEM_Initialize *****************
   598 ;; Defined at:
   599 ;;		line 50 in file "mcc_generated_files/mcc.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   613 ;;      Params:         0       0       0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0       0       0
   616 ;;      Totals:         0       0       0       0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    1
   620 ;; This function calls:
   621 ;;		_ADC_Initialize
   622 ;;		_EPWM1_Initialize
   623 ;;		_EPWM2_Initialize
   624 ;;		_OSCILLATOR_Initialize
   625 ;;		_PIN_MANAGER_Initialize
   626 ;;		_TMR2_Initialize
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text3
   633  007C6A                     __ptext3:
   634                           	callstack 0
   635  007C6A                     _SYSTEM_Initialize:
   636                           	callstack 29
   637  007C6A                     
   638                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   639  007C6A  ECA0  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
   640                           
   641                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   642  007C6E  ECF2  F03D         	call	_OSCILLATOR_Initialize	;wreg free
   643                           
   644                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
   645  007C72  EC42  F03E         	call	_EPWM1_Initialize	;wreg free
   646                           
   647                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
   648  007C76  ECF9  F03D         	call	_TMR2_Initialize	;wreg free
   649                           
   650                           ;mcc_generated_files/mcc.c: 57:     EPWM2_Initialize();
   651  007C7A  EC52  F03E         	call	_EPWM2_Initialize	;wreg free
   652                           
   653                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
   654  007C7E  EC2A  F03E         	call	_ADC_Initialize	;wreg free
   655  007C82  0012               	return		;funcret
   656  007C84                     __end_of_SYSTEM_Initialize:
   657                           	callstack 0
   658                           
   659 ;; *************** function _TMR2_Initialize *****************
   660 ;; Defined at:
   661 ;;		line 62 in file "mcc_generated_files/tmr2.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   675 ;;      Params:         0       0       0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_SYSTEM_Initialize
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text4
   689  007BF2                     __ptext4:
   690                           	callstack 0
   691  007BF2                     _TMR2_Initialize:
   692                           	callstack 29
   693  007BF2                     
   694                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
   695  007BF2  68BB               	setf	187,c	;volatile
   696  007BF4                     
   697                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
   698  007BF4  0E00               	movlw	0
   699  007BF6  6EBC               	movwf	188,c	;volatile
   700  007BF8                     
   701                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
   702  007BF8  929E               	bcf	158,1,c	;volatile
   703                           
   704                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
   705  007BFA  0E04               	movlw	4
   706  007BFC  6EBA               	movwf	186,c	;volatile
   707  007BFE  0012               	return		;funcret
   708  007C00                     __end_of_TMR2_Initialize:
   709                           	callstack 0
   710                           
   711 ;; *************** function _PIN_MANAGER_Initialize *****************
   712 ;; Defined at:
   713 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   727 ;;      Params:         0       0       0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0
   730 ;;      Totals:         0       0       0       0       0       0       0
   731 ;;Total ram usage:        0 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_SYSTEM_Initialize
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text5
   741  007D40                     __ptext5:
   742                           	callstack 0
   743  007D40                     _PIN_MANAGER_Initialize:
   744                           	callstack 29
   745  007D40                     
   746                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   747  007D40  0E00               	movlw	0
   748  007D42  6E89               	movwf	137,c	;volatile
   749                           
   750                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   751  007D44  0E00               	movlw	0
   752  007D46  6E8A               	movwf	138,c	;volatile
   753                           
   754                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   755  007D48  0E00               	movlw	0
   756  007D4A  6E8B               	movwf	139,c	;volatile
   757                           
   758                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDB;
   759  007D4C  0EDB               	movlw	219
   760  007D4E  6E92               	movwf	146,c	;volatile
   761  007D50                     
   762                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   763  007D50  6893               	setf	147,c	;volatile
   764                           
   765                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x91;
   766  007D52  0E91               	movlw	145
   767  007D54  6E94               	movwf	148,c	;volatile
   768                           
   769                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x80;
   770  007D56  0E80               	movlw	128
   771  007D58  010F               	movlb	15	; () banked
   772  007D5A  6F3A               	movwf	58,b	;volatile
   773                           
   774                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x38;
   775  007D5C  0E38               	movlw	56
   776  007D5E  6F39               	movwf	57,b	;volatile
   777                           
   778                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0B;
   779  007D60  0E0B               	movlw	11
   780  007D62  6F38               	movwf	56,b	;volatile
   781                           
   782                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   783  007D64  0E00               	movlw	0
   784  007D66  6E61               	movwf	97,c	;volatile
   785  007D68                     
   786                           ; BSR set to: 15
   787                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   788  007D68  8EF1               	bsf	241,7,c	;volatile
   789  007D6A                     
   790                           ; BSR set to: 15
   791  007D6A  0012               	return		;funcret
   792  007D6C                     __end_of_PIN_MANAGER_Initialize:
   793                           	callstack 0
   794                           
   795 ;; *************** function _OSCILLATOR_Initialize *****************
   796 ;; Defined at:
   797 ;;		line 61 in file "mcc_generated_files/mcc.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   811 ;;      Params:         0       0       0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_SYSTEM_Initialize
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text6
   825  007BE4                     __ptext6:
   826                           	callstack 0
   827  007BE4                     _OSCILLATOR_Initialize:
   828                           	callstack 29
   829  007BE4                     
   830                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
   831  007BE4  0E30               	movlw	48
   832  007BE6  6ED3               	movwf	211,c	;volatile
   833                           
   834                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
   835  007BE8  0E04               	movlw	4
   836  007BEA  6ED2               	movwf	210,c	;volatile
   837                           
   838                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
   839  007BEC  0E00               	movlw	0
   840  007BEE  6E9B               	movwf	155,c	;volatile
   841  007BF0  0012               	return		;funcret
   842  007BF2                     __end_of_OSCILLATOR_Initialize:
   843                           	callstack 0
   844                           
   845 ;; *************** function _EPWM2_Initialize *****************
   846 ;; Defined at:
   847 ;;		line 64 in file "mcc_generated_files/epwm2.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   861 ;;      Params:         0       0       0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_SYSTEM_Initialize
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text7
   875  007CA4                     __ptext7:
   876                           	callstack 0
   877  007CA4                     _EPWM2_Initialize:
   878                           	callstack 29
   879  007CA4                     
   880                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
   881  007CA4  0E3C               	movlw	60
   882  007CA6  6E66               	movwf	102,c	;volatile
   883                           
   884                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
   885  007CA8  0E00               	movlw	0
   886  007CAA  6E64               	movwf	100,c	;volatile
   887                           
   888                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
   889  007CAC  0E80               	movlw	128
   890  007CAE  6E65               	movwf	101,c	;volatile
   891                           
   892                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
   893  007CB0  0E01               	movlw	1
   894  007CB2  6E63               	movwf	99,c	;volatile
   895                           
   896                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
   897  007CB4  0E00               	movlw	0
   898  007CB6  6E68               	movwf	104,c	;volatile
   899                           
   900                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x7F;
   901  007CB8  0E7F               	movlw	127
   902  007CBA  6E67               	movwf	103,c	;volatile
   903                           
   904                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
   905  007CBC  0EE7               	movlw	-25
   906  007CBE  010F               	movlb	15	; () banked
   907  007CC0  1749               	andwf	73,f,b	;volatile
   908  007CC2                     
   909                           ; BSR set to: 15
   910  007CC2  0012               	return		;funcret
   911  007CC4                     __end_of_EPWM2_Initialize:
   912                           	callstack 0
   913                           
   914 ;; *************** function _EPWM1_Initialize *****************
   915 ;; Defined at:
   916 ;;		line 64 in file "mcc_generated_files/epwm1.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;		None
   919 ;; Auto vars:     Size  Location     Type
   920 ;;		None
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, status,2
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   930 ;;      Params:         0       0       0       0       0       0       0
   931 ;;      Locals:         0       0       0       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0       0       0
   933 ;;      Totals:         0       0       0       0       0       0       0
   934 ;;Total ram usage:        0 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_SYSTEM_Initialize
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text8
   944  007C84                     __ptext8:
   945                           	callstack 0
   946  007C84                     _EPWM1_Initialize:
   947                           	callstack 29
   948  007C84                     
   949                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
   950  007C84  0E3C               	movlw	60
   951  007C86  6EBD               	movwf	189,c	;volatile
   952                           
   953                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
   954  007C88  0E00               	movlw	0
   955  007C8A  6EB6               	movwf	182,c	;volatile
   956                           
   957                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
   958  007C8C  0E80               	movlw	128
   959  007C8E  6EB7               	movwf	183,c	;volatile
   960                           
   961                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
   962  007C90  0E01               	movlw	1
   963  007C92  6EB9               	movwf	185,c	;volatile
   964                           
   965                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
   966  007C94  0E00               	movlw	0
   967  007C96  6EBF               	movwf	191,c	;volatile
   968                           
   969                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
   970  007C98  0E7F               	movlw	127
   971  007C9A  6EBE               	movwf	190,c	;volatile
   972                           
   973                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
   974  007C9C  0EFC               	movlw	-4
   975  007C9E  010F               	movlb	15	; () banked
   976  007CA0  1749               	andwf	73,f,b	;volatile
   977  007CA2                     
   978                           ; BSR set to: 15
   979  007CA2  0012               	return		;funcret
   980  007CA4                     __end_of_EPWM1_Initialize:
   981                           	callstack 0
   982                           
   983 ;; *************** function _ADC_Initialize *****************
   984 ;; Defined at:
   985 ;;		line 62 in file "mcc_generated_files/adc.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   999 ;;      Params:         0       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0
  1002 ;;      Totals:         0       0       0       0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_SYSTEM_Initialize
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text9
  1013  007C54                     __ptext9:
  1014                           	callstack 0
  1015  007C54                     _ADC_Initialize:
  1016                           	callstack 29
  1017  007C54                     
  1018                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1019  007C54  0E00               	movlw	0
  1020  007C56  6EC1               	movwf	193,c	;volatile
  1021                           
  1022                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  1023  007C58  0E04               	movlw	4
  1024  007C5A  6EC0               	movwf	192,c	;volatile
  1025                           
  1026                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1027  007C5C  0E00               	movlw	0
  1028  007C5E  6EC3               	movwf	195,c	;volatile
  1029                           
  1030                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1031  007C60  0E00               	movlw	0
  1032  007C62  6EC4               	movwf	196,c	;volatile
  1033                           
  1034                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x0D;
  1035  007C64  0E0D               	movlw	13
  1036  007C66  6EC2               	movwf	194,c	;volatile
  1037  007C68  0012               	return		;funcret
  1038  007C6A                     __end_of_ADC_Initialize:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _MCP23008_Initialise *****************
  1042 ;; Defined at:
  1043 ;;		line 146 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1057 ;;      Params:         0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    2
  1064 ;; This function calls:
  1065 ;;		_I2C_send_data
  1066 ;;		_IdleI2C
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text10
  1073  007DD8                     __ptext10:
  1074                           	callstack 0
  1075  007DD8                     _MCP23008_Initialise:
  1076                           	callstack 28
  1077  007DD8                     
  1078                           ;main.c: 148:     I2C_send_data(0x40, 0x00, 0x00);
  1079  007DD8  0E00               	movlw	0
  1080  007DDA  6E18               	movwf	I2C_send_data@register_address^0,c
  1081  007DDC  0E00               	movlw	0
  1082  007DDE  6E19               	movwf	I2C_send_data@register_data^0,c
  1083  007DE0  0E40               	movlw	64
  1084  007DE2  EC75  F03E         	call	_I2C_send_data
  1085                           
  1086                           ;main.c: 149:     IdleI2C();
  1087  007DE6  EC62  F03E         	call	_IdleI2C	;wreg free
  1088                           
  1089                           ;main.c: 150:     I2C_send_data(0x40, 0x01, 0x00);
  1090  007DEA  0E01               	movlw	1
  1091  007DEC  6E18               	movwf	I2C_send_data@register_address^0,c
  1092  007DEE  0E00               	movlw	0
  1093  007DF0  6E19               	movwf	I2C_send_data@register_data^0,c
  1094  007DF2  0E40               	movlw	64
  1095  007DF4  EC75  F03E         	call	_I2C_send_data
  1096                           
  1097                           ;main.c: 151:     IdleI2C();
  1098  007DF8  EC62  F03E         	call	_IdleI2C	;wreg free
  1099                           
  1100                           ;main.c: 152:     I2C_send_data(0x40, 0x02, 0x00);
  1101  007DFC  0E02               	movlw	2
  1102  007DFE  6E18               	movwf	I2C_send_data@register_address^0,c
  1103  007E00  0E00               	movlw	0
  1104  007E02  6E19               	movwf	I2C_send_data@register_data^0,c
  1105  007E04  0E40               	movlw	64
  1106  007E06  EC75  F03E         	call	_I2C_send_data
  1107                           
  1108                           ;main.c: 153:     IdleI2C();
  1109  007E0A  EC62  F03E         	call	_IdleI2C	;wreg free
  1110                           
  1111                           ;main.c: 154:     I2C_send_data(0x40, 0x05, 0x3E);
  1112  007E0E  0E05               	movlw	5
  1113  007E10  6E18               	movwf	I2C_send_data@register_address^0,c
  1114  007E12  0E3E               	movlw	62
  1115  007E14  6E19               	movwf	I2C_send_data@register_data^0,c
  1116  007E16  0E40               	movlw	64
  1117  007E18  EC75  F03E         	call	_I2C_send_data
  1118                           
  1119                           ;main.c: 155:     IdleI2C();
  1120  007E1C  EC62  F03E         	call	_IdleI2C	;wreg free
  1121                           
  1122                           ;main.c: 156:     I2C_send_data(0x40, 0x06, 0x00);
  1123  007E20  0E06               	movlw	6
  1124  007E22  6E18               	movwf	I2C_send_data@register_address^0,c
  1125  007E24  0E00               	movlw	0
  1126  007E26  6E19               	movwf	I2C_send_data@register_data^0,c
  1127  007E28  0E40               	movlw	64
  1128  007E2A  EC75  F03E         	call	_I2C_send_data
  1129  007E2E  0012               	return		;funcret
  1130  007E30                     __end_of_MCP23008_Initialise:
  1131                           	callstack 0
  1132                           
  1133 ;; *************** function _IsOptoR *****************
  1134 ;; Defined at:
  1135 ;;		line 127 in file "main.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      _Bool 
  1142 ;; Registers used:
  1143 ;;		wreg
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1149 ;;      Params:         0       0       0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0
  1152 ;;      Totals:         0       0       0       0       0       0       0
  1153 ;;Total ram usage:        0 bytes
  1154 ;; Hardware stack levels used:    1
  1155 ;; This function calls:
  1156 ;;		Nothing
  1157 ;; This function is called by:
  1158 ;;		_main
  1159 ;; This function uses a non-reentrant model
  1160 ;;
  1161                           
  1162                           	psect	text11
  1163  007C14                     __ptext11:
  1164                           	callstack 0
  1165  007C14                     _IsOptoR:
  1166                           	callstack 30
  1167  007C14                     
  1168                           ;main.c: 129:     return (PORTBbits.RB1 == 0);
  1169  007C14  A281               	btfss	129,1,c	;volatile
  1170  007C16  EF0F  F03E         	goto	u151
  1171  007C1A  EF12  F03E         	goto	u150
  1172  007C1E                     u151:
  1173  007C1E  0E01               	movlw	1
  1174  007C20  EF13  F03E         	goto	u160
  1175  007C24                     u150:
  1176  007C24  0E00               	movlw	0
  1177  007C26                     u160:
  1178  007C26  0012               	return		;funcret
  1179  007C28                     __end_of_IsOptoR:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function _IsOptoL *****************
  1183 ;; Defined at:
  1184 ;;		line 122 in file "main.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;		None
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      _Bool 
  1191 ;; Registers used:
  1192 ;;		wreg
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1198 ;;      Params:         0       0       0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0
  1201 ;;      Totals:         0       0       0       0       0       0       0
  1202 ;;Total ram usage:        0 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text12
  1212  007C00                     __ptext12:
  1213                           	callstack 0
  1214  007C00                     _IsOptoL:
  1215                           	callstack 30
  1216  007C00                     
  1217                           ;main.c: 124:     return (PORTBbits.RB2 == 0);
  1218  007C00  A481               	btfss	129,2,c	;volatile
  1219  007C02  EF05  F03E         	goto	u171
  1220  007C06  EF08  F03E         	goto	u170
  1221  007C0A                     u171:
  1222  007C0A  0E01               	movlw	1
  1223  007C0C  EF09  F03E         	goto	u180
  1224  007C10                     u170:
  1225  007C10  0E00               	movlw	0
  1226  007C12                     u180:
  1227  007C12  0012               	return		;funcret
  1228  007C14                     __end_of_IsOptoL:
  1229                           	callstack 0
  1230                           
  1231 ;; *************** function _I2C_test *****************
  1232 ;; Defined at:
  1233 ;;		line 196 in file "main.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  i               2    6[COMRAM] int 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1247 ;;      Params:         0       0       0       0       0       0       0
  1248 ;;      Locals:         2       0       0       0       0       0       0
  1249 ;;      Temps:          2       0       0       0       0       0       0
  1250 ;;      Totals:         4       0       0       0       0       0       0
  1251 ;;Total ram usage:        4 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    2
  1254 ;; This function calls:
  1255 ;;		_I2C_send_data
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text13
  1262  007E30                     __ptext13:
  1263                           	callstack 0
  1264  007E30                     _I2C_test:
  1265                           	callstack 28
  1266  007E30                     
  1267                           ;main.c: 198:     int i = 0;
  1268  007E30  0E00               	movlw	0
  1269  007E32  6E1E               	movwf	(I2C_test@i+1)^0,c
  1270  007E34  0E00               	movlw	0
  1271  007E36  6E1D               	movwf	I2C_test@i^0,c
  1272                           
  1273                           ;main.c: 199:     for (i = 0; i < 12; i++)
  1274  007E38  0E00               	movlw	0
  1275  007E3A  6E1E               	movwf	(I2C_test@i+1)^0,c
  1276  007E3C  0E00               	movlw	0
  1277  007E3E  6E1D               	movwf	I2C_test@i^0,c
  1278  007E40                     l1161:
  1279                           
  1280                           ;main.c: 200:     {;main.c: 201:         I2C_send_data(0x40, 0x09, digits[i]);
  1281  007E40  0E09               	movlw	9
  1282  007E42  6E18               	movwf	I2C_send_data@register_address^0,c
  1283  007E44  0E01               	movlw	low _digits
  1284  007E46  241D               	addwf	I2C_test@i^0,w,c
  1285  007E48  6ED9               	movwf	fsr2l,c
  1286  007E4A  0E00               	movlw	high _digits
  1287  007E4C  201E               	addwfc	(I2C_test@i+1)^0,w,c
  1288  007E4E  6EDA               	movwf	fsr2h,c
  1289  007E50  50DF               	movf	indf2,w,c
  1290  007E52  6E19               	movwf	I2C_send_data@register_data^0,c
  1291  007E54  0E40               	movlw	64
  1292  007E56  EC75  F03E         	call	_I2C_send_data
  1293  007E5A                     
  1294                           ;main.c: 202:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1295  007E5A  0E03               	movlw	3
  1296  007E5C  6E1C               	movwf	(??_I2C_test+1)^0,c
  1297  007E5E  0E8A               	movlw	138
  1298  007E60  6E1B               	movwf	??_I2C_test^0,c
  1299  007E62  0E56               	movlw	86
  1300  007E64                     u327:
  1301  007E64  2EE8               	decfsz	wreg,f,c
  1302  007E66  D7FE               	bra	u327
  1303  007E68  2E1B               	decfsz	??_I2C_test^0,f,c
  1304  007E6A  D7FC               	bra	u327
  1305  007E6C  2E1C               	decfsz	(??_I2C_test+1)^0,f,c
  1306  007E6E  D7FA               	bra	u327
  1307  007E70  BA8B               	btfsc	139,5,c	;volatile
  1308  007E72  EF3D  F03F         	goto	u241
  1309  007E76  EF40  F03F         	goto	u240
  1310  007E7A                     u241:
  1311  007E7A  0E01               	movlw	1
  1312  007E7C  EF41  F03F         	goto	u246
  1313  007E80                     u240:
  1314  007E80  0E00               	movlw	0
  1315  007E82                     u246:
  1316  007E82  0AFF               	xorlw	255
  1317  007E84  6E1B               	movwf	??_I2C_test^0,c
  1318  007E86  3A1B               	swapf	??_I2C_test^0,f,c
  1319  007E88  461B               	rlncf	??_I2C_test^0,f,c
  1320  007E8A  508B               	movf	139,w,c	;volatile
  1321  007E8C  181B               	xorwf	??_I2C_test^0,w,c
  1322  007E8E  0BDF               	andlw	-33
  1323  007E90  181B               	xorwf	??_I2C_test^0,w,c
  1324  007E92  6E8B               	movwf	139,c	;volatile
  1325  007E94                     
  1326                           ;main.c: 204:     }
  1327  007E94  4A1D               	infsnz	I2C_test@i^0,f,c
  1328  007E96  2A1E               	incf	(I2C_test@i+1)^0,f,c
  1329  007E98  BE1E               	btfsc	(I2C_test@i+1)^0,7,c
  1330  007E9A  EF58  F03F         	goto	u251
  1331  007E9E  501E               	movf	(I2C_test@i+1)^0,w,c
  1332  007EA0  E109               	bnz	u250
  1333  007EA2  0E0C               	movlw	12
  1334  007EA4  5C1D               	subwf	I2C_test@i^0,w,c
  1335  007EA6  A0D8               	btfss	status,0,c
  1336  007EA8  EF58  F03F         	goto	u251
  1337  007EAC  EF5A  F03F         	goto	u250
  1338  007EB0                     u251:
  1339  007EB0  EF20  F03F         	goto	l1161
  1340  007EB4                     u250:
  1341  007EB4  0012               	return		;funcret
  1342  007EB6                     __end_of_I2C_test:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _I2C_send_data *****************
  1346 ;; Defined at:
  1347 ;;		line 159 in file "main.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  device_addre    1    wreg     unsigned char 
  1350 ;;  register_add    1    1[COMRAM] unsigned char 
  1351 ;;  register_dat    1    2[COMRAM] unsigned char 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  device_addre    1    3[COMRAM] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1363 ;;      Params:         2       0       0       0       0       0       0
  1364 ;;      Locals:         1       0       0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0
  1366 ;;      Totals:         3       0       0       0       0       0       0
  1367 ;;Total ram usage:        3 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    1
  1370 ;; This function calls:
  1371 ;;		_IdleI2C
  1372 ;;		_StartI2C
  1373 ;;		_StopI2C
  1374 ;;		_WriteI2C
  1375 ;; This function is called by:
  1376 ;;		_MCP23008_Initialise
  1377 ;;		_I2C_test
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text14
  1382  007CEA                     __ptext14:
  1383                           	callstack 0
  1384  007CEA                     _I2C_send_data:
  1385                           	callstack 28
  1386                           
  1387                           ;incstack = 0
  1388                           ;I2C_send_data@device_address stored from wreg
  1389  007CEA  6E1A               	movwf	I2C_send_data@device_address^0,c
  1390  007CEC                     
  1391                           ;main.c: 159: void I2C_send_data(unsigned char device_address, unsigned char register_ad
      +                          dress, unsigned char register_data);main.c: 160: {;main.c: 161:     StartI2C();
  1392  007CEC  EC8A  F03E         	call	_StartI2C	;wreg free
  1393  007CF0                     
  1394                           ;main.c: 162:     WriteI2C(device_address);
  1395  007CF0  501A               	movf	I2C_send_data@device_address^0,w,c
  1396  007CF2  EC1F  F03E         	call	_WriteI2C
  1397  007CF6                     
  1398                           ;main.c: 163:     IdleI2C();
  1399  007CF6  EC62  F03E         	call	_IdleI2C	;wreg free
  1400                           
  1401                           ;main.c: 164:     WriteI2C(register_address);
  1402  007CFA  5018               	movf	I2C_send_data@register_address^0,w,c
  1403  007CFC  EC1F  F03E         	call	_WriteI2C
  1404  007D00                     
  1405                           ;main.c: 165:     IdleI2C();
  1406  007D00  EC62  F03E         	call	_IdleI2C	;wreg free
  1407  007D04                     
  1408                           ;main.c: 166:     WriteI2C(register_data);
  1409  007D04  5019               	movf	I2C_send_data@register_data^0,w,c
  1410  007D06  EC1F  F03E         	call	_WriteI2C
  1411                           
  1412                           ;main.c: 167:     IdleI2C();
  1413  007D0A  EC62  F03E         	call	_IdleI2C	;wreg free
  1414  007D0E                     
  1415                           ;main.c: 168:     StopI2C();
  1416  007D0E  ECEA  F03D         	call	_StopI2C	;wreg free
  1417  007D12  0012               	return		;funcret
  1418  007D14                     __end_of_I2C_send_data:
  1419                           	callstack 0
  1420                           
  1421 ;; *************** function _WriteI2C *****************
  1422 ;; Defined at:
  1423 ;;		line 185 in file "main.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;  data            1    wreg     unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  data            1    0[COMRAM] unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1437 ;;      Params:         0       0       0       0       0       0       0
  1438 ;;      Locals:         1       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0
  1440 ;;      Totals:         1       0       0       0       0       0       0
  1441 ;;Total ram usage:        1 bytes
  1442 ;; Hardware stack levels used:    1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_I2C_send_data
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text15
  1451  007C3E                     __ptext15:
  1452                           	callstack 0
  1453  007C3E                     _WriteI2C:
  1454                           	callstack 28
  1455                           
  1456                           ;incstack = 0
  1457                           ;WriteI2C@data stored from wreg
  1458  007C3E  6E17               	movwf	WriteI2C@data^0,c
  1459  007C40                     
  1460                           ;main.c: 185: void WriteI2C(unsigned char data);main.c: 186: {;main.c: 187:     SSP1BUF 
      +                          = data;
  1461  007C40  C017  FFC9         	movff	WriteI2C@data,4041	;volatile
  1462  007C44                     l198:
  1463  007C44  B0C7               	btfsc	199,0,c	;volatile
  1464  007C46  EF27  F03E         	goto	u51
  1465  007C4A  EF29  F03E         	goto	u50
  1466  007C4E                     u51:
  1467  007C4E  EF22  F03E         	goto	l198
  1468  007C52                     u50:
  1469  007C52  0012               	return		;funcret
  1470  007C54                     __end_of_WriteI2C:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _StopI2C *****************
  1474 ;; Defined at:
  1475 ;;		line 191 in file "main.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		None
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1489 ;;      Params:         0       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0
  1492 ;;      Totals:         0       0       0       0       0       0       0
  1493 ;;Total ram usage:        0 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_I2C_send_data
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text16
  1503  007BD4                     __ptext16:
  1504                           	callstack 0
  1505  007BD4                     _StopI2C:
  1506                           	callstack 28
  1507  007BD4                     
  1508                           ;main.c: 193:     SSP1CON2bits.PEN = 1;
  1509  007BD4  84C5               	bsf	197,2,c	;volatile
  1510  007BD6  0012               	return		;funcret
  1511  007BD8                     __end_of_StopI2C:
  1512                           	callstack 0
  1513                           
  1514 ;; *************** function _StartI2C *****************
  1515 ;; Defined at:
  1516 ;;		line 176 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1530 ;;      Params:         0       0       0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0       0       0
  1532 ;;      Temps:          1       0       0       0       0       0       0
  1533 ;;      Totals:         1       0       0       0       0       0       0
  1534 ;;Total ram usage:        1 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; This function calls:
  1537 ;;		Nothing
  1538 ;; This function is called by:
  1539 ;;		_I2C_send_data
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text17
  1544  007D14                     __ptext17:
  1545                           	callstack 0
  1546  007D14                     _StartI2C:
  1547                           	callstack 28
  1548  007D14                     
  1549                           ;main.c: 178:     PIR1bits.SSPIF = 0;
  1550  007D14  969E               	bcf	158,3,c	;volatile
  1551                           
  1552                           ;main.c: 179:     SSP1CON2bits.SEN = 1;
  1553  007D16  80C5               	bsf	197,0,c	;volatile
  1554  007D18                     l192:
  1555  007D18  B4C7               	btfsc	199,2,c	;volatile
  1556  007D1A  EF91  F03E         	goto	u31
  1557  007D1E  EF93  F03E         	goto	u30
  1558  007D22                     u31:
  1559  007D22  EF8C  F03E         	goto	l192
  1560  007D26                     u30:
  1561  007D26  CFC5 F017          	movff	4037,??_StartI2C	;volatile
  1562  007D2A  0E1F               	movlw	31
  1563  007D2C  1617               	andwf	??_StartI2C^0,f,c
  1564  007D2E  A4D8               	btfss	status,2,c
  1565  007D30  EF9C  F03E         	goto	u41
  1566  007D34  EF9E  F03E         	goto	u40
  1567  007D38                     u41:
  1568  007D38  EF8C  F03E         	goto	l192
  1569  007D3C                     u40:
  1570  007D3C                     
  1571                           ;main.c: 182:     PIR1bits.SSPIF = 0;
  1572  007D3C  969E               	bcf	158,3,c	;volatile
  1573  007D3E  0012               	return		;funcret
  1574  007D40                     __end_of_StartI2C:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _IdleI2C *****************
  1578 ;; Defined at:
  1579 ;;		line 171 in file "main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      void 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1593 ;;      Params:         0       0       0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0
  1595 ;;      Temps:          1       0       0       0       0       0       0
  1596 ;;      Totals:         1       0       0       0       0       0       0
  1597 ;;Total ram usage:        1 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_MCP23008_Initialise
  1603 ;;		_I2C_send_data
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text18
  1608  007CC4                     __ptext18:
  1609                           	callstack 0
  1610  007CC4                     _IdleI2C:
  1611                           	callstack 29
  1612  007CC4                     l983:
  1613  007CC4  CFC5 F017          	movff	4037,??_IdleI2C	;volatile
  1614  007CC8  0E1F               	movlw	31
  1615  007CCA  1617               	andwf	??_IdleI2C^0,f,c
  1616  007CCC  A4D8               	btfss	status,2,c
  1617  007CCE  EF6B  F03E         	goto	u11
  1618  007CD2  EF6D  F03E         	goto	u10
  1619  007CD6                     u11:
  1620  007CD6  EF62  F03E         	goto	l983
  1621  007CDA                     u10:
  1622  007CDA  B2C7               	btfsc	199,1,c	;volatile
  1623  007CDC  EF72  F03E         	goto	u21
  1624  007CE0  EF74  F03E         	goto	u20
  1625  007CE4                     u21:
  1626  007CE4  EF62  F03E         	goto	l983
  1627  007CE8                     u20:
  1628  007CE8  0012               	return		;funcret
  1629  007CEA                     __end_of_IdleI2C:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _I2C_Initialise *****************
  1633 ;; Defined at:
  1634 ;;		line 137 in file "main.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		wreg, status,2
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1648 ;;      Params:         0       0       0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text19
  1662  007C28                     __ptext19:
  1663                           	callstack 0
  1664  007C28                     _I2C_Initialise:
  1665                           	callstack 30
  1666  007C28                     
  1667                           ;main.c: 139:     SSP1STAT = 0x00;
  1668  007C28  0E00               	movlw	0
  1669  007C2A  6EC7               	movwf	199,c	;volatile
  1670                           
  1671                           ;main.c: 140:     SSP1CON1 = 0x28;
  1672  007C2C  0E28               	movlw	40
  1673  007C2E  6EC6               	movwf	198,c	;volatile
  1674                           
  1675                           ;main.c: 141:     SSP1CON2 = 0x00;
  1676  007C30  0E00               	movlw	0
  1677  007C32  6EC5               	movwf	197,c	;volatile
  1678                           
  1679                           ;main.c: 142:     SSP1CON3 = 0x08;
  1680  007C34  0E08               	movlw	8
  1681  007C36  6ECB               	movwf	203,c	;volatile
  1682                           
  1683                           ;main.c: 143:     SSP1ADD = 0x09;
  1684  007C38  0E09               	movlw	9
  1685  007C3A  6EC8               	movwf	200,c	;volatile
  1686  007C3C  0012               	return		;funcret
  1687  007C3E                     __end_of_I2C_Initialise:
  1688                           	callstack 0
  1689  0000                     
  1690                           	psect	rparam
  1691  0000                     
  1692                           	psect	idloc
  1693                           
  1694                           ;Config register IDLOC0 @ 0x200000
  1695                           ;	unspecified, using default values
  1696  200000                     	org	2097152
  1697  200000  FF                 	db	255
  1698                           
  1699                           ;Config register IDLOC1 @ 0x200001
  1700                           ;	unspecified, using default values
  1701  200001                     	org	2097153
  1702  200001  FF                 	db	255
  1703                           
  1704                           ;Config register IDLOC2 @ 0x200002
  1705                           ;	unspecified, using default values
  1706  200002                     	org	2097154
  1707  200002  FF                 	db	255
  1708                           
  1709                           ;Config register IDLOC3 @ 0x200003
  1710                           ;	unspecified, using default values
  1711  200003                     	org	2097155
  1712  200003  FF                 	db	255
  1713                           
  1714                           ;Config register IDLOC4 @ 0x200004
  1715                           ;	unspecified, using default values
  1716  200004                     	org	2097156
  1717  200004  FF                 	db	255
  1718                           
  1719                           ;Config register IDLOC5 @ 0x200005
  1720                           ;	unspecified, using default values
  1721  200005                     	org	2097157
  1722  200005  FF                 	db	255
  1723                           
  1724                           ;Config register IDLOC6 @ 0x200006
  1725                           ;	unspecified, using default values
  1726  200006                     	org	2097158
  1727  200006  FF                 	db	255
  1728                           
  1729                           ;Config register IDLOC7 @ 0x200007
  1730                           ;	unspecified, using default values
  1731  200007                     	org	2097159
  1732  200007  FF                 	db	255
  1733                           
  1734                           	psect	config
  1735                           
  1736                           ; Padding undefined space
  1737  300000                     	org	3145728
  1738  300000  FF                 	db	255
  1739                           
  1740                           ;Config register CONFIG1H @ 0x300001
  1741                           ;	Oscillator Selection bits
  1742                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  1743                           ;	4X PLL Enable
  1744                           ;	PLLCFG = OFF, Oscillator used directly
  1745                           ;	Primary clock enable bit
  1746                           ;	PRICLKEN = ON, Primary clock enabled
  1747                           ;	Fail-Safe Clock Monitor Enable bit
  1748                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1749                           ;	Internal/External Oscillator Switchover bit
  1750                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1751  300001                     	org	3145729
  1752  300001  23                 	db	35
  1753                           
  1754                           ;Config register CONFIG2L @ 0x300002
  1755                           ;	Power-up Timer Enable bit
  1756                           ;	PWRTEN = OFF, Power up timer disabled
  1757                           ;	Brown-out Reset Enable bits
  1758                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1759                           ;	Brown Out Reset Voltage bits
  1760                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1761  300002                     	org	3145730
  1762  300002  1F                 	db	31
  1763                           
  1764                           ;Config register CONFIG2H @ 0x300003
  1765                           ;	Watchdog Timer Enable bits
  1766                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1767                           ;	Watchdog Timer Postscale Select bits
  1768                           ;	WDTPS = 32768, 1:32768
  1769  300003                     	org	3145731
  1770  300003  3C                 	db	60
  1771                           
  1772                           ; Padding undefined space
  1773  300004                     	org	3145732
  1774  300004  FF                 	db	255
  1775                           
  1776                           ;Config register CONFIG3H @ 0x300005
  1777                           ;	CCP2 MUX bit
  1778                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1779                           ;	PORTB A/D Enable bit
  1780                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1781                           ;	P3A/CCP3 Mux bit
  1782                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1783                           ;	HFINTOSC Fast Start-up
  1784                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1785                           ;	Timer3 Clock input mux bit
  1786                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1787                           ;	ECCP2 B output mux bit
  1788                           ;	P2BMX = PORTB5, P2B is on RB5
  1789                           ;	MCLR Pin Enable bit
  1790                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1791  300005                     	org	3145733
  1792  300005  BD                 	db	189
  1793                           
  1794                           ;Config register CONFIG4L @ 0x300006
  1795                           ;	Stack Full/Underflow Reset Enable bit
  1796                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1797                           ;	Single-Supply ICSP Enable bit
  1798                           ;	LVP = OFF, Single-Supply ICSP disabled
  1799                           ;	Extended Instruction Set Enable bit
  1800                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1801                           ;	Background Debug
  1802                           ;	DEBUG = OFF, Disabled
  1803  300006                     	org	3145734
  1804  300006  80                 	db	128
  1805                           
  1806                           ; Padding undefined space
  1807  300007                     	org	3145735
  1808  300007  FF                 	db	255
  1809                           
  1810                           ;Config register CONFIG5L @ 0x300008
  1811                           ;	Code Protection Block 0
  1812                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1813                           ;	Code Protection Block 1
  1814                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1815                           ;	Code Protection Block 2
  1816                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1817                           ;	Code Protection Block 3
  1818                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1819  300008                     	org	3145736
  1820  300008  0F                 	db	15
  1821                           
  1822                           ;Config register CONFIG5H @ 0x300009
  1823                           ;	Boot Block Code Protection bit
  1824                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1825                           ;	Data EEPROM Code Protection bit
  1826                           ;	CPD = OFF, Data EEPROM not code-protected
  1827  300009                     	org	3145737
  1828  300009  C0                 	db	192
  1829                           
  1830                           ;Config register CONFIG6L @ 0x30000A
  1831                           ;	Write Protection Block 0
  1832                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1833                           ;	Write Protection Block 1
  1834                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1835                           ;	Write Protection Block 2
  1836                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1837                           ;	Write Protection Block 3
  1838                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1839  30000A                     	org	3145738
  1840  30000A  0F                 	db	15
  1841                           
  1842                           ;Config register CONFIG6H @ 0x30000B
  1843                           ;	Configuration Register Write Protection bit
  1844                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1845                           ;	Boot Block Write Protection bit
  1846                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1847                           ;	Data EEPROM Write Protection bit
  1848                           ;	WRTD = OFF, Data EEPROM not write-protected
  1849  30000B                     	org	3145739
  1850  30000B  E0                 	db	224
  1851                           
  1852                           ;Config register CONFIG7L @ 0x30000C
  1853                           ;	Table Read Protection Block 0
  1854                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1855                           ;	Table Read Protection Block 1
  1856                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1857                           ;	Table Read Protection Block 2
  1858                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1859                           ;	Table Read Protection Block 3
  1860                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1861  30000C                     	org	3145740
  1862  30000C  0F                 	db	15
  1863                           
  1864                           ;Config register CONFIG7H @ 0x30000D
  1865                           ;	Boot Block Table Read Protection bit
  1866                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1867  30000D                     	org	3145741
  1868  30000D  40                 	db	64
  1869                           tosu	equ	0xFFF
  1870                           tosh	equ	0xFFE
  1871                           tosl	equ	0xFFD
  1872                           stkptr	equ	0xFFC
  1873                           pclatu	equ	0xFFB
  1874                           pclath	equ	0xFFA
  1875                           pcl	equ	0xFF9
  1876                           tblptru	equ	0xFF8
  1877                           tblptrh	equ	0xFF7
  1878                           tblptrl	equ	0xFF6
  1879                           tablat	equ	0xFF5
  1880                           prodh	equ	0xFF4
  1881                           prodl	equ	0xFF3
  1882                           indf0	equ	0xFEF
  1883                           postinc0	equ	0xFEE
  1884                           postdec0	equ	0xFED
  1885                           preinc0	equ	0xFEC
  1886                           plusw0	equ	0xFEB
  1887                           fsr0h	equ	0xFEA
  1888                           fsr0l	equ	0xFE9
  1889                           wreg	equ	0xFE8
  1890                           indf1	equ	0xFE7
  1891                           postinc1	equ	0xFE6
  1892                           postdec1	equ	0xFE5
  1893                           preinc1	equ	0xFE4
  1894                           plusw1	equ	0xFE3
  1895                           fsr1h	equ	0xFE2
  1896                           fsr1l	equ	0xFE1
  1897                           bsr	equ	0xFE0
  1898                           indf2	equ	0xFDF
  1899                           postinc2	equ	0xFDE
  1900                           postdec2	equ	0xFDD
  1901                           preinc2	equ	0xFDC
  1902                           plusw2	equ	0xFDB
  1903                           fsr2h	equ	0xFDA
  1904                           fsr2l	equ	0xFD9
  1905                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_I2C_test
    _MCP23008_Initialise->_I2C_send_data
    _I2C_test->_I2C_send_data
    _I2C_send_data->_IdleI2C
    _I2C_send_data->_StartI2C
    _I2C_send_data->_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3077
                     _I2C_Initialise
                           _I2C_test
                            _IsOptoL
                            _IsOptoR
                _MCP23008_Initialise
                  _SYSTEM_Initialize
                         _diagnostic
                          _motor_fwd
 ---------------------------------------------------------------------------------
 (1) _motor_fwd                                            3     1      2    1022
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _diagnostic                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP23008_Initialise                                  0     0      0     993
                      _I2C_send_data
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (1) _IsOptoR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_test                                             4     4      0    1062
                                              4 COMRAM     4     4      0
                      _I2C_send_data
 ---------------------------------------------------------------------------------
 (2) _I2C_send_data                                        3     1      2     993
                                              1 COMRAM     3     1      2
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialise
   _I2C_test
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
   _IsOptoL
   _IsOptoR
   _MCP23008_Initialise
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
     _IdleI2C
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
   _diagnostic
   _motor_fwd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      8      1E       1       31.6%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E       9        0.0%
DATA                 0      0      1E      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Nov 23 15:15:26 2020

                             l17 7CC2                               l37 7CA2  
                             l53 7BFE                               u10 7CDA  
                             u11 7CD6                               u20 7CE8  
                             u21 7CE4                               u30 7D26  
                             u31 7D22                               u40 7D3C  
                             u41 7D38                               u50 7C52  
                             u51 7C4E                               u60 7F62  
                             u61 7F5C                               u70 7F86  
                             u71 7F80                               u80 7FC4  
                             u81 7FBE                               u90 7FE8  
                             u66 7F64                               u91 7FE2  
                             u76 7F88                               u86 7FC6  
                             u96 7FEA                              l201 7C52  
                            l211 7EB4                              l204 7BD6  
                            l230 7C68                              l302 7D6A  
                            l160 7FFE                              l152 7F52  
                            l154 7F76                              l171 7C26  
                            l163 7D92                              l180 7E2E  
                            l165 7DA0                              l183 7D12  
                            l192 7D18                              l168 7C12  
                            l272 7C82                              l177 7C3C  
                            l194 7D3C                              l195 7D3E  
                            l275 7BF0                              l189 7CE8  
                            l198 7C44                              l981 7CC4  
                            l983 7CC4                              l991 7C40  
                            l985 7CDA                              l993 7BD4  
                            l987 7D14                              l995 7CA4  
                            l989 7D26                              l997 7C84  
                            l999 7BF2                              u300 7F2E  
                            u301 7F2A                              u150 7C24  
                            u151 7C1E                              u240 7E80  
                            u160 7C26                              u241 7E7A  
                            u250 7EB4                              u170 7C10  
                            u251 7EB0                              u171 7C0A  
                            u180 7C12                              u260 7D80  
                            u317 7FA6                              u261 7D7C  
                            u246 7E82                              _PR2 000FBB  
                            u327 7E64                              u290 7EFA  
                            u275 7D8C                              u291 7EF6  
                            u276 7D8E                              u285 7D9E  
                            u286 7DA0                              _Lit 000F  
                _TMR2_Initialize 7BF2                              wreg 000FE8  
       __end_of_EPWM2_Initialize 7CC4                             l1001 7BF4  
                           l1003 7BF8                             l1021 7D50  
                           l1023 7D68                             l1017 7C54  
                           l1025 7BE4                             l1033 7F52  
                           l1019 7D40                             l1027 7C6A  
                           l1035 7F9C                             l1029 7C28  
                           l1141 7CEC                             l1061 7C14  
                           l1037 7FB4                             l1151 7D0E  
                           l1143 7CF0                             l1039 7FD8  
                           l1145 7CF6                             l1161 7E40  
                           l1065 7C00                             l1153 7DD8  
                           l1147 7D00                             l1163 7E5A  
                           l1155 7E30                             l1171 7D6E  
                           l1149 7D04                             l1165 7E70  
                           l1173 7D80                             l1181 7EC6  
                           l1167 7E94                             l1183 7ECA  
                           l1175 7EB6                             l1169 7E98  
                           l1193 7F1A                             l1185 7ED8  
                           l1177 7EBE                             l1195 7F2E  
                           l1187 7EE6                             l1179 7EC2  
                           l1189 7EFA                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _TMR2 000FBC                             _WPUB 000F61  
                           _main 7EB6                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           start 0000                 __end_of_I2C_test 7EB6  
                __end_of_IdleI2C 7CEA                     ___param_bank 000000  
                __end_of_IsOptoL 7C14                  __end_of_IsOptoR 7C28  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 7BF2  
                __end_of_StopI2C 7BD8                            ?_main 0017  
                          _T2CON 000FBA                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _UnLit 0011                            tablat 000FF5  
                          status 000FD8                  __initialization 7DA2  
                   __end_of_main 7F52          __end_of_TMR2_Initialize 7C00  
                         ??_main 001F                    __activetblptr 000002  
               __end_of_StartI2C 7D40                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR1H 000FBF                           _CCPR2H 000F68  
                         _CCPR1L 000FBE                           _CCPR2L 000F67  
               __end_of_WriteI2C 7C54                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                      ??_IdleI2C 0017                           _OSCCON 000FD3  
                      I2C_test@i 001D                        ??_IsOptoL 0017  
                      ??_IsOptoR 0017                     _CCPTMRS0bits 000F49  
                      ??_StopI2C 0017                           _digits 0001  
                         clear_0 7DC8          __size_of_I2C_Initialise 0016  
                   WriteI2C@data 0017                     __pdataCOMRAM 0001  
                      ?_I2C_test 0017                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
              _SYSTEM_Initialize 7C6A                       __accesstop 0060  
        __end_of__initialization 7DCE               ?_SYSTEM_Initialize 0017  
                  ___rparam_used 000001           __size_of_I2C_send_data 002A  
              ?_EPWM1_Initialize 0017                   __pcstackCOMRAM 0017  
            ??_SYSTEM_Initialize 0017               ??_EPWM1_Initialize 0017  
               ?_TMR2_Initialize 0017                       ??_I2C_test 001B  
              ?_EPWM2_Initialize 0017        __end_of_SYSTEM_Initialize 7C84  
             ??_EPWM2_Initialize 0017     __size_of_MCP23008_Initialise 0058  
                     _diagnostic 7F52      I2C_send_data@device_address 001A  
                      ?_StartI2C 0017                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          _ECCP1AS 000FB6  
                        _ECCP2AS 000F64                        ?_WriteI2C 0017  
        __size_of_ADC_Initialize 0016               __size_of_motor_fwd 0036  
                  _I2C_send_data 7CEA                          _OSCCON2 000FD2  
  I2C_send_data@register_address 0018                          _OSCTUNE 000F9B  
                        _PWM1CON 000FB7                          _PWM2CON 000F65  
                        _SSP1ADD 000FC8                          _SSP1BUF 000FC9  
                        _IdleI2C 7CC4                          _IsOptoL 7C00  
                        _IsOptoR 7C14             _ADC_InterruptHandler 000D  
                        __Hparam 0000                          __Lparam 0000  
                        _StopI2C 7BD4                       ??_StartI2C 0017  
                        __pcinit 7DA2                       ??_WriteI2C 0017  
                 _I2C_Initialise 7C28                          __ramtop 0600  
                        __ptext0 7EB6                          __ptext1 7D6C  
                        __ptext2 7F52                          __ptext3 7C6A  
                        __ptext4 7BF2                          __ptext5 7D40  
                        __ptext6 7BE4                          __ptext7 7CA4  
                        __ptext8 7C84                          __ptext9 7C54  
                 ?_I2C_send_data 0018            _OSCILLATOR_Initialize 7BE4  
                      _T2CONbits 000FBA         ??_PIN_MANAGER_Initialize 0017  
     __size_of_SYSTEM_Initialize 001A             end_of_initialization 7DCE  
                  __Lmediumconst 0000                __end_of_motor_fwd 7DA2  
                    ?_diagnostic 0017                          postdec1 000FE5  
                        postinc0 000FEE           __end_of_I2C_Initialise 7C3E  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
              __size_of_I2C_test 0086                  ?_I2C_Initialise 0017  
                  __pidataCOMRAM 7BD8                  ??_I2C_send_data 001A  
                 _ADC_Initialize 7C54           ?_OSCILLATOR_Initialize 0017  
            start_initialization 7DA2              _MCP23008_Initialise 7DD8  
      __size_of_EPWM1_Initialize 0020  __size_of_PIN_MANAGER_Initialize 002C  
            __size_of_diagnostic 00AE             ?_MCP23008_Initialise 0017  
      __size_of_EPWM2_Initialize 0020           __end_of_ADC_Initialize 7C6A  
              __size_of_StartI2C 002C                __size_of_WriteI2C 0016  
                    __pbssCOMRAM 000D                        _adcResult 0015  
       __size_of_TMR2_Initialize 000E                         ?_IdleI2C 0017  
                       ?_IsOptoL 0017                         ?_IsOptoR 0017  
          ??_MCP23008_Initialise 001B           _PIN_MANAGER_Initialize 7D40  
                       ?_StopI2C 0017                  ?_ADC_Initialize 0017  
                   _intialResult 0013                         _I2C_test 7E30  
                       _LATCbits 000F8B                     ??_diagnostic 0017  
                       _PIR1bits 000F9E                        _motor_fwd 7D6C  
                       _SSP1CON1 000FC6                         _SSP1CON2 000FC5  
                       _SSP1CON3 000FCB                         _PSTR1CON 000FB9  
                       _PSTR2CON 000F63                         _SSP1STAT 000FC7  
                     _ADCON0bits 000FC2                 _EPWM1_Initialize 7C84  
             __end_of_diagnostic 8000                      _INTCON2bits 000FF1  
                      copy_data0 7DB6                ??_TMR2_Initialize 0017  
               __size_of_IdleI2C 0026                 ??_I2C_Initialise 0017  
               __size_of_IsOptoL 0014                 __size_of_IsOptoR 0014  
                       __Hrparam 0000                 _EPWM2_Initialize 7CA4  
                       __Lrparam 0000                       ?_motor_fwd 0017  
                       _StartI2C 7D14                 __size_of_StopI2C 0004  
        ??_OSCILLATOR_Initialize 0017                         _WriteI2C 7C3E  
                       __ptext10 7DD8                         __ptext11 7C14  
                       __ptext12 7C00                         __ptext13 7E30  
                       __ptext14 7CEA                         __ptext15 7C3E  
                       __ptext16 7BD4                         __ptext17 7D14  
                       __ptext18 7CC4                         __ptext19 7C28  
                   _SSP1CON2bits 000FC5                    __size_of_main 009C  
                   _SSP1STATbits 000FC7                    motor_fwd@STAT 0018  
          __end_of_I2C_send_data 7D14                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 0017                 ??_ADC_Initialize 0017  
                    ??_motor_fwd 0019                     motor_fwd@dir 0019  
                   motor_fwd@spd 0017       I2C_send_data@register_data 0019  
    __end_of_MCP23008_Initialise 7E30   __end_of_PIN_MANAGER_Initialize 7D6C  
       __end_of_EPWM1_Initialize 7CA4  
