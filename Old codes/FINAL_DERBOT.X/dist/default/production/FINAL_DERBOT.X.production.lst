

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Nov 23 15:37:45 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 05/05/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F25K22 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  007B72                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _digits
    76  007B72  3E                 	db	62
    77  007B73  38                 	db	56
    78  007B74  3F                 	db	63
    79  007B75  06                 	db	6
    80  007B76  5B                 	db	91
    81  007B77  4F                 	db	79
    82  007B78  66                 	db	102
    83  007B79  6D                 	db	109
    84  007B7A  7D                 	db	125
    85  007B7B  07                 	db	7
    86  007B7C  7F                 	db	127
    87  007B7D  67                 	db	103
    88  0000                     _ANSELA	set	3896
    89  0000                     _ANSELB	set	3897
    90  0000                     _ANSELC	set	3898
    91  0000                     _CCPTMRS0bits	set	3913
    92  0000                     _INTCONbits	set	4082
    93  0000                     _INTCON2bits	set	4081
    94  0000                     _WPUB	set	3937
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISB	set	3987
    97  0000                     _TRISA	set	3986
    98  0000                     _LATC	set	3979
    99  0000                     _LATB	set	3978
   100  0000                     _LATA	set	3977
   101  0000                     _OSCTUNE	set	3995
   102  0000                     _OSCCON2	set	4050
   103  0000                     _OSCCON	set	4051
   104  0000                     _ADCON0bits	set	4034
   105  0000                     _ADCON0	set	4034
   106  0000                     _ADRESH	set	4036
   107  0000                     _ADRESL	set	4035
   108  0000                     _ADCON2	set	4032
   109  0000                     _ADCON1	set	4033
   110  0000                     _SSP1STATbits	set	4039
   111  0000                     _SSP1BUF	set	4041
   112  0000                     _SSP1CON2bits	set	4037
   113  0000                     _SSP1ADD	set	4040
   114  0000                     _SSP1CON3	set	4043
   115  0000                     _SSP1CON2	set	4037
   116  0000                     _SSP1CON1	set	4038
   117  0000                     _SSP1STAT	set	4039
   118  0000                     _PORTBbits	set	3969
   119  0000                     _PORTAbits	set	3968
   120  0000                     _LATCbits	set	3979
   121  0000                     _T2CONbits	set	4026
   122  0000                     _T2CON	set	4026
   123  0000                     _PIR1bits	set	3998
   124  0000                     _TMR2	set	4028
   125  0000                     _PR2	set	4027
   126  0000                     _CCPR1L	set	4030
   127  0000                     _CCPR1H	set	4031
   128  0000                     _PSTR1CON	set	4025
   129  0000                     _PWM1CON	set	4023
   130  0000                     _ECCP1AS	set	4022
   131  0000                     _CCP1CON	set	4029
   132  0000                     _CCPR2L	set	3943
   133  0000                     _CCPR2H	set	3944
   134  0000                     _PSTR2CON	set	3939
   135  0000                     _PWM2CON	set	3941
   136  0000                     _ECCP2AS	set	3940
   137  0000                     _CCP2CON	set	3942
   138                           
   139                           ; #config settings
   140                           
   141                           	psect	cinit
   142  007D3A                     __pcinit:
   143                           	callstack 0
   144  007D3A                     start_initialization:
   145                           	callstack 0
   146  007D3A                     __initialization:
   147                           	callstack 0
   148                           
   149                           ; Initialize objects allocated to COMRAM (12 bytes)
   150                           ; load TBLPTR registers with __pidataCOMRAM
   151  007D3A  0E72               	movlw	low __pidataCOMRAM
   152  007D3C  6EF6               	movwf	tblptrl,c
   153  007D3E  0E7B               	movlw	high __pidataCOMRAM
   154  007D40  6EF7               	movwf	tblptrh,c
   155  007D42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   156  007D44  6EF8               	movwf	tblptru,c
   157  007D46  EE00  F001         	lfsr	0,__pdataCOMRAM
   158  007D4A  EE10 F00C          	lfsr	1,12
   159  007D4E                     copy_data0:
   160  007D4E  0009               	tblrd		*+
   161  007D50  CFF5 FFEE          	movff	tablat,postinc0
   162  007D54  50E5               	movf	postdec1,w,c
   163  007D56  50E1               	movf	fsr1l,w,c
   164  007D58  E1FA               	bnz	copy_data0
   165                           
   166                           ; Clear objects allocated to COMRAM (10 bytes)
   167  007D5A  EE00  F00D         	lfsr	0,__pbssCOMRAM
   168  007D5E  0E0A               	movlw	10
   169  007D60                     clear_0:
   170  007D60  6AEE               	clrf	postinc0,c
   171  007D62  06E8               	decf	wreg,f,c
   172  007D64  E1FD               	bnz	clear_0
   173  007D66                     end_of_initialization:
   174                           	callstack 0
   175  007D66                     __end_of__initialization:
   176                           	callstack 0
   177  007D66  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178  007D68  6EF8               	movwf	tblptru,c
   179  007D6A  0100               	movlb	0
   180  007D6C  EF7E  F03F         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183  00000D                     __pbssCOMRAM:
   184                           	callstack 0
   185  00000D                     _ADC_InterruptHandler:
   186                           	callstack 0
   187  00000D                     	ds	2
   188  00000F                     _Lit:
   189                           	callstack 0
   190  00000F                     	ds	2
   191  000011                     _UnLit:
   192                           	callstack 0
   193  000011                     	ds	2
   194  000013                     _intialResult:
   195                           	callstack 0
   196  000013                     	ds	2
   197  000015                     _adcResult:
   198                           	callstack 0
   199  000015                     	ds	2
   200                           
   201                           	psect	dataCOMRAM
   202  000001                     __pdataCOMRAM:
   203                           	callstack 0
   204  000001                     _digits:
   205                           	callstack 0
   206  000001                     	ds	12
   207                           
   208                           	psect	cstackCOMRAM
   209  000017                     __pcstackCOMRAM:
   210                           	callstack 0
   211  000017                     ??_diagnostic:
   212  000017                     ??_IdleI2C:
   213  000017                     motor_fwd@spd:
   214                           	callstack 0
   215  000017                     WriteI2C@data:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x0
   219  000017                     	ds	1
   220  000018                     motor_fwd@STAT:
   221                           	callstack 0
   222  000018                     I2C_send_data@register_address:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x1
   226  000018                     	ds	1
   227  000019                     motor_fwd@dir:
   228                           	callstack 0
   229  000019                     I2C_send_data@register_data:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x2
   233  000019                     	ds	1
   234  00001A                     I2C_send_data@device_address:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x3
   238  00001A                     	ds	1
   239  00001B                     ??_I2C_test:
   240                           
   241                           ; 1 bytes @ 0x4
   242  00001B                     	ds	2
   243  00001D                     I2C_test@i:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x6
   247  00001D                     	ds	2
   248  00001F                     ??_main:
   249                           
   250                           ; 1 bytes @ 0x8
   251  00001F                     	ds	2
   252                           
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 58 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   272 ;;      Params:         0       0       0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0
   274 ;;      Temps:          2       0       0       0       0       0       0
   275 ;;      Totals:         2       0       0       0       0       0       0
   276 ;;Total ram usage:        2 bytes
   277 ;; Hardware stack levels required when called:    3
   278 ;; This function calls:
   279 ;;		_I2C_Initialise
   280 ;;		_I2C_test
   281 ;;		_IsOptoFarR
   282 ;;		_IsOptoL
   283 ;;		_IsOptoR
   284 ;;		_MCP23008_Initialise
   285 ;;		_SYSTEM_Initialize
   286 ;;		_diagnostic
   287 ;;		_motor_fwd
   288 ;; This function is called by:
   289 ;;		Startup code after reset
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	text0
   294  007EFC                     __ptext0:
   295                           	callstack 0
   296  007EFC                     _main:
   297                           	callstack 28
   298  007EFC                     
   299                           ;main.c: 61:     SYSTEM_Initialize();
   300  007EFC  EC17  F03E         	call	_SYSTEM_Initialize	;wreg free
   301                           
   302                           ;main.c: 62:     I2C_Initialise();
   303  007F00  ECEB  F03D         	call	_I2C_Initialise	;wreg free
   304  007F04                     
   305                           ;main.c: 63:     MCP23008_Initialise();
   306  007F04  ECB8  F03E         	call	_MCP23008_Initialise	;wreg free
   307  007F08                     
   308                           ;main.c: 64:     diagnostic();
   309  007F08  EC27  F03F         	call	_diagnostic	;wreg free
   310  007F0C                     l1201:
   311                           
   312                           ;main.c: 66:     {;main.c: 69:         motor_fwd('L', 255, 1);
   313  007F0C  0EFF               	movlw	255
   314  007F0E  6E17               	movwf	motor_fwd@spd^0,c
   315  007F10  0E01               	movlw	1
   316  007F12  6E18               	movwf	motor_fwd@STAT^0,c
   317  007F14  0E4C               	movlw	76
   318  007F16  EC82  F03E         	call	_motor_fwd
   319  007F1A                     
   320                           ;main.c: 70:         motor_fwd('R', 250, 1);
   321  007F1A  0EFA               	movlw	250
   322  007F1C  6E17               	movwf	motor_fwd@spd^0,c
   323  007F1E  0E01               	movlw	1
   324  007F20  6E18               	movwf	motor_fwd@STAT^0,c
   325  007F22  0E52               	movlw	82
   326  007F24  EC82  F03E         	call	_motor_fwd
   327                           
   328                           ;main.c: 73:         if (IsOptoR())
   329  007F28  ECE1  F03D         	call	_IsOptoR	;wreg free
   330  007F2C  0900               	iorlw	0
   331  007F2E  B4D8               	btfsc	status,2,c
   332  007F30  EF9C  F03F         	goto	u311
   333  007F34  EF9E  F03F         	goto	u310
   334  007F38                     u311:
   335  007F38  EFAE  F03F         	goto	l1209
   336  007F3C                     u310:
   337  007F3C                     
   338                           ;main.c: 74:         {;main.c: 75:             motor_fwd('L', 250, 1);
   339  007F3C  0EFA               	movlw	250
   340  007F3E  6E17               	movwf	motor_fwd@spd^0,c
   341  007F40  0E01               	movlw	1
   342  007F42  6E18               	movwf	motor_fwd@STAT^0,c
   343  007F44  0E4C               	movlw	76
   344  007F46  EC82  F03E         	call	_motor_fwd
   345                           
   346                           ;main.c: 76:             motor_fwd('R', 105, 1);
   347  007F4A  0E69               	movlw	105
   348  007F4C  6E17               	movwf	motor_fwd@spd^0,c
   349  007F4E  0E01               	movlw	1
   350  007F50  6E18               	movwf	motor_fwd@STAT^0,c
   351  007F52  0E52               	movlw	82
   352  007F54  EC82  F03E         	call	_motor_fwd
   353                           
   354                           ;main.c: 77:             continue;
   355  007F58  EF86  F03F         	goto	l1201
   356  007F5C                     l1209:
   357  007F5C  ECD7  F03D         	call	_IsOptoL	;wreg free
   358  007F60  0900               	iorlw	0
   359  007F62  B4D8               	btfsc	status,2,c
   360  007F64  EFB6  F03F         	goto	u321
   361  007F68  EFB8  F03F         	goto	u320
   362  007F6C                     u321:
   363  007F6C  EFC8  F03F         	goto	l1215
   364  007F70                     u320:
   365  007F70                     
   366                           ;main.c: 80:         {;main.c: 81:             motor_fwd('L', 105, 1);
   367  007F70  0E69               	movlw	105
   368  007F72  6E17               	movwf	motor_fwd@spd^0,c
   369  007F74  0E01               	movlw	1
   370  007F76  6E18               	movwf	motor_fwd@STAT^0,c
   371  007F78  0E4C               	movlw	76
   372  007F7A  EC82  F03E         	call	_motor_fwd
   373                           
   374                           ;main.c: 82:             motor_fwd('R', 250, 1);
   375  007F7E  0EFA               	movlw	250
   376  007F80  6E17               	movwf	motor_fwd@spd^0,c
   377  007F82  0E01               	movlw	1
   378  007F84  6E18               	movwf	motor_fwd@STAT^0,c
   379  007F86  0E52               	movlw	82
   380  007F88  EC82  F03E         	call	_motor_fwd
   381                           
   382                           ;main.c: 84:             continue;
   383  007F8C  EF86  F03F         	goto	l1201
   384  007F90                     l1215:
   385  007F90  ECCD  F03D         	call	_IsOptoFarR	;wreg free
   386  007F94  0900               	iorlw	0
   387  007F96  B4D8               	btfsc	status,2,c
   388  007F98  EFD0  F03F         	goto	u331
   389  007F9C  EFD2  F03F         	goto	u330
   390  007FA0                     u331:
   391  007FA0  EFFC  F03F         	goto	l148
   392  007FA4                     u330:
   393  007FA4                     
   394                           ;main.c: 88:         {;main.c: 89:             _delay((unsigned long)((450)*(4000000/400
      +                          0.0)));
   395  007FA4  0E03               	movlw	3
   396  007FA6  6E20               	movwf	(??_main+1)^0,c
   397  007FA8  0E49               	movlw	73
   398  007FAA  6E1F               	movwf	??_main^0,c
   399  007FAC  0E66               	movlw	102
   400  007FAE                     u347:
   401  007FAE  2EE8               	decfsz	wreg,f,c
   402  007FB0  D7FE               	bra	u347
   403  007FB2  2E1F               	decfsz	??_main^0,f,c
   404  007FB4  D7FC               	bra	u347
   405  007FB6  2E20               	decfsz	(??_main+1)^0,f,c
   406  007FB8  D7FA               	bra	u347
   407  007FBA  D000               	nop2	
   408  007FBC                     
   409                           ;main.c: 90:             motor_fwd('L', 255, 0);
   410  007FBC  0EFF               	movlw	255
   411  007FBE  6E17               	movwf	motor_fwd@spd^0,c
   412  007FC0  0E00               	movlw	0
   413  007FC2  6E18               	movwf	motor_fwd@STAT^0,c
   414  007FC4  0E4C               	movlw	76
   415  007FC6  EC82  F03E         	call	_motor_fwd
   416  007FCA                     
   417                           ;main.c: 91:             motor_fwd('R', 255, 0);
   418  007FCA  0EFF               	movlw	255
   419  007FCC  6E17               	movwf	motor_fwd@spd^0,c
   420  007FCE  0E00               	movlw	0
   421  007FD0  6E18               	movwf	motor_fwd@STAT^0,c
   422  007FD2  0E52               	movlw	82
   423  007FD4  EC82  F03E         	call	_motor_fwd
   424  007FD8                     
   425                           ;main.c: 92:             I2C_test();
   426  007FD8  ECE4  F03E         	call	_I2C_test	;wreg free
   427  007FDC                     
   428                           ;main.c: 93:             _delay((unsigned long)((20000)*(4000000/4000.0)));
   429  007FDC  0E66               	movlw	102
   430  007FDE  6E20               	movwf	(??_main+1)^0,c
   431  007FE0  0E76               	movlw	118
   432  007FE2  6E1F               	movwf	??_main^0,c
   433  007FE4  0EC1               	movlw	193
   434  007FE6                     u357:
   435  007FE6  2EE8               	decfsz	wreg,f,c
   436  007FE8  D7FE               	bra	u357
   437  007FEA  2E1F               	decfsz	??_main^0,f,c
   438  007FEC  D7FC               	bra	u357
   439  007FEE  2E20               	decfsz	(??_main+1)^0,f,c
   440  007FF0  D7FA               	bra	u357
   441  007FF2  F000               	nop	
   442                           
   443                           ;main.c: 94:             break;
   444  007FF4  EFFE  F03F         	goto	l153
   445  007FF8                     l148:
   446  007FF8  EF86  F03F         	goto	l1201
   447  007FFC                     l153:
   448  007FFC  EF00  F000         	goto	start
   449  008000                     __end_of_main:
   450                           	callstack 0
   451                           
   452 ;; *************** function _motor_fwd *****************
   453 ;; Defined at:
   454 ;;		line 109 in file "main.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;  dir             1    wreg     unsigned char 
   457 ;;  spd             1    0[COMRAM] unsigned char 
   458 ;;  STAT            1    1[COMRAM] _Bool 
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  dir             1    2[COMRAM] unsigned char 
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   470 ;;      Params:         2       0       0       0       0       0       0
   471 ;;      Locals:         1       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0
   473 ;;      Totals:         3       0       0       0       0       0       0
   474 ;;Total ram usage:        3 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_main
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text1
   484  007D04                     __ptext1:
   485                           	callstack 0
   486  007D04                     _motor_fwd:
   487                           	callstack 30
   488                           
   489                           ;incstack = 0
   490                           ;motor_fwd@dir stored from wreg
   491  007D04  6E19               	movwf	motor_fwd@dir^0,c
   492  007D06                     
   493                           ;main.c: 109: void motor_fwd(unsigned char dir, unsigned char spd, _Bool STAT);main.c: 1
      +                          10: {;main.c: 111:     if (dir == 'L')
   494  007D06  0E4C               	movlw	76
   495  007D08  1819               	xorwf	motor_fwd@dir^0,w,c
   496  007D0A  A4D8               	btfss	status,2,c
   497  007D0C  EF8A  F03E         	goto	u261
   498  007D10  EF8C  F03E         	goto	u260
   499  007D14                     u261:
   500  007D14  EF95  F03E         	goto	l167
   501  007D18                     u260:
   502  007D18                     
   503                           ;main.c: 112:     {;main.c: 113:         CCPR2L = spd;
   504  007D18  C017  FF67         	movff	motor_fwd@spd,3943	;volatile
   505                           
   506                           ;main.c: 114:         PORTAbits.RA5 = STAT;
   507  007D1C  B018               	btfsc	motor_fwd@STAT^0,0,c
   508  007D1E  D002               	bra	u275
   509  007D20  9A80               	bcf	128,5,c	;volatile
   510  007D22  D001               	bra	u276
   511  007D24                     u275:
   512  007D24  8A80               	bsf	128,5,c	;volatile
   513  007D26                     u276:
   514                           
   515                           ;main.c: 115:     }
   516  007D26  EF9C  F03E         	goto	l169
   517  007D2A                     l167:
   518                           
   519                           ;main.c: 117:     {;main.c: 118:         CCPR1L = spd;
   520  007D2A  C017  FFBE         	movff	motor_fwd@spd,4030	;volatile
   521                           
   522                           ;main.c: 119:         PORTAbits.RA2 = STAT;
   523  007D2E  B018               	btfsc	motor_fwd@STAT^0,0,c
   524  007D30  D002               	bra	u285
   525  007D32  9480               	bcf	128,2,c	;volatile
   526  007D34  D001               	bra	u286
   527  007D36                     u285:
   528  007D36  8480               	bsf	128,2,c	;volatile
   529  007D38                     u286:
   530  007D38                     l169:
   531  007D38  0012               	return		;funcret
   532  007D3A                     __end_of_motor_fwd:
   533                           	callstack 0
   534                           
   535 ;; *************** function _diagnostic *****************
   536 ;; Defined at:
   537 ;;		line 100 in file "main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   551 ;;      Params:         0       0       0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0       0       0
   553 ;;      Temps:          2       0       0       0       0       0       0
   554 ;;      Totals:         2       0       0       0       0       0       0
   555 ;;Total ram usage:        2 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text2
   565  007E4E                     __ptext2:
   566                           	callstack 0
   567  007E4E                     _diagnostic:
   568                           	callstack 30
   569  007E4E  BA8B               	btfsc	139,5,c	;volatile
   570  007E50  EF2C  F03F         	goto	u51
   571  007E54  EF2F  F03F         	goto	u50
   572  007E58                     u51:
   573  007E58  0E01               	movlw	1
   574  007E5A  EF30  F03F         	goto	u56
   575  007E5E                     u50:
   576  007E5E  0E00               	movlw	0
   577  007E60                     u56:
   578  007E60  0AFF               	xorlw	255
   579  007E62  6E17               	movwf	??_diagnostic^0,c
   580  007E64  3A17               	swapf	??_diagnostic^0,f,c
   581  007E66  4617               	rlncf	??_diagnostic^0,f,c
   582  007E68  508B               	movf	139,w,c	;volatile
   583  007E6A  1817               	xorwf	??_diagnostic^0,w,c
   584  007E6C  0BDF               	andlw	-33
   585  007E6E  1817               	xorwf	??_diagnostic^0,w,c
   586  007E70  6E8B               	movwf	139,c	;volatile
   587  007E72  BC8B               	btfsc	139,6,c	;volatile
   588  007E74  EF3E  F03F         	goto	u61
   589  007E78  EF41  F03F         	goto	u60
   590  007E7C                     u61:
   591  007E7C  0E01               	movlw	1
   592  007E7E  EF42  F03F         	goto	u66
   593  007E82                     u60:
   594  007E82  0E00               	movlw	0
   595  007E84                     u66:
   596  007E84  0AFF               	xorlw	255
   597  007E86  6E17               	movwf	??_diagnostic^0,c
   598  007E88  3A17               	swapf	??_diagnostic^0,f,c
   599  007E8A  4617               	rlncf	??_diagnostic^0,f,c
   600  007E8C  4617               	rlncf	??_diagnostic^0,f,c
   601  007E8E  508B               	movf	139,w,c	;volatile
   602  007E90  1817               	xorwf	??_diagnostic^0,w,c
   603  007E92  0BBF               	andlw	-65
   604  007E94  1817               	xorwf	??_diagnostic^0,w,c
   605  007E96  6E8B               	movwf	139,c	;volatile
   606  007E98                     
   607                           ;main.c: 104:     _delay((unsigned long)((300)*(4000000/4000.0)));
   608  007E98  0E02               	movlw	2
   609  007E9A  6E18               	movwf	(??_diagnostic+1)^0,c
   610  007E9C  0E86               	movlw	134
   611  007E9E  6E17               	movwf	??_diagnostic^0,c
   612  007EA0  0E99               	movlw	153
   613  007EA2                     u367:
   614  007EA2  2EE8               	decfsz	wreg,f,c
   615  007EA4  D7FE               	bra	u367
   616  007EA6  2E17               	decfsz	??_diagnostic^0,f,c
   617  007EA8  D7FC               	bra	u367
   618  007EAA  2E18               	decfsz	(??_diagnostic+1)^0,f,c
   619  007EAC  D7FA               	bra	u367
   620  007EAE  F000               	nop	
   621  007EB0  BA8B               	btfsc	139,5,c	;volatile
   622  007EB2  EF5D  F03F         	goto	u71
   623  007EB6  EF60  F03F         	goto	u70
   624  007EBA                     u71:
   625  007EBA  0E01               	movlw	1
   626  007EBC  EF61  F03F         	goto	u76
   627  007EC0                     u70:
   628  007EC0  0E00               	movlw	0
   629  007EC2                     u76:
   630  007EC2  0AFF               	xorlw	255
   631  007EC4  6E17               	movwf	??_diagnostic^0,c
   632  007EC6  3A17               	swapf	??_diagnostic^0,f,c
   633  007EC8  4617               	rlncf	??_diagnostic^0,f,c
   634  007ECA  508B               	movf	139,w,c	;volatile
   635  007ECC  1817               	xorwf	??_diagnostic^0,w,c
   636  007ECE  0BDF               	andlw	-33
   637  007ED0  1817               	xorwf	??_diagnostic^0,w,c
   638  007ED2  6E8B               	movwf	139,c	;volatile
   639  007ED4  BC8B               	btfsc	139,6,c	;volatile
   640  007ED6  EF6F  F03F         	goto	u81
   641  007EDA  EF72  F03F         	goto	u80
   642  007EDE                     u81:
   643  007EDE  0E01               	movlw	1
   644  007EE0  EF73  F03F         	goto	u86
   645  007EE4                     u80:
   646  007EE4  0E00               	movlw	0
   647  007EE6                     u86:
   648  007EE6  0AFF               	xorlw	255
   649  007EE8  6E17               	movwf	??_diagnostic^0,c
   650  007EEA  3A17               	swapf	??_diagnostic^0,f,c
   651  007EEC  4617               	rlncf	??_diagnostic^0,f,c
   652  007EEE  4617               	rlncf	??_diagnostic^0,f,c
   653  007EF0  508B               	movf	139,w,c	;volatile
   654  007EF2  1817               	xorwf	??_diagnostic^0,w,c
   655  007EF4  0BBF               	andlw	-65
   656  007EF6  1817               	xorwf	??_diagnostic^0,w,c
   657  007EF8  6E8B               	movwf	139,c	;volatile
   658  007EFA  0012               	return		;funcret
   659  007EFC                     __end_of_diagnostic:
   660                           	callstack 0
   661                           
   662 ;; *************** function _SYSTEM_Initialize *****************
   663 ;; Defined at:
   664 ;;		line 50 in file "mcc_generated_files/mcc.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   678 ;;      Params:         0       0       0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    1
   685 ;; This function calls:
   686 ;;		_ADC_Initialize
   687 ;;		_EPWM1_Initialize
   688 ;;		_EPWM2_Initialize
   689 ;;		_OSCILLATOR_Initialize
   690 ;;		_PIN_MANAGER_Initialize
   691 ;;		_TMR2_Initialize
   692 ;; This function is called by:
   693 ;;		_main
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           
   697                           	psect	text3
   698  007C2E                     __ptext3:
   699                           	callstack 0
   700  007C2E                     _SYSTEM_Initialize:
   701                           	callstack 29
   702  007C2E                     
   703                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   704  007C2E  EC6C  F03E         	call	_PIN_MANAGER_Initialize	;wreg free
   705                           
   706                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   707  007C32  ECBF  F03D         	call	_OSCILLATOR_Initialize	;wreg free
   708                           
   709                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
   710  007C36  EC24  F03E         	call	_EPWM1_Initialize	;wreg free
   711                           
   712                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
   713  007C3A  ECC6  F03D         	call	_TMR2_Initialize	;wreg free
   714                           
   715                           ;mcc_generated_files/mcc.c: 57:     EPWM2_Initialize();
   716  007C3E  EC34  F03E         	call	_EPWM2_Initialize	;wreg free
   717                           
   718                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
   719  007C42  EC0C  F03E         	call	_ADC_Initialize	;wreg free
   720  007C46  0012               	return		;funcret
   721  007C48                     __end_of_SYSTEM_Initialize:
   722                           	callstack 0
   723                           
   724 ;; *************** function _TMR2_Initialize *****************
   725 ;; Defined at:
   726 ;;		line 62 in file "mcc_generated_files/tmr2.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   740 ;;      Params:         0       0       0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_SYSTEM_Initialize
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text4
   754  007B8C                     __ptext4:
   755                           	callstack 0
   756  007B8C                     _TMR2_Initialize:
   757                           	callstack 29
   758  007B8C                     
   759                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
   760  007B8C  68BB               	setf	187,c	;volatile
   761  007B8E                     
   762                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
   763  007B8E  0E00               	movlw	0
   764  007B90  6EBC               	movwf	188,c	;volatile
   765  007B92                     
   766                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
   767  007B92  929E               	bcf	158,1,c	;volatile
   768                           
   769                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
   770  007B94  0E04               	movlw	4
   771  007B96  6EBA               	movwf	186,c	;volatile
   772  007B98  0012               	return		;funcret
   773  007B9A                     __end_of_TMR2_Initialize:
   774                           	callstack 0
   775                           
   776 ;; *************** function _PIN_MANAGER_Initialize *****************
   777 ;; Defined at:
   778 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   792 ;;      Params:         0       0       0       0       0       0       0
   793 ;;      Locals:         0       0       0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0
   795 ;;      Totals:         0       0       0       0       0       0       0
   796 ;;Total ram usage:        0 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_SYSTEM_Initialize
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text5
   806  007CD8                     __ptext5:
   807                           	callstack 0
   808  007CD8                     _PIN_MANAGER_Initialize:
   809                           	callstack 29
   810  007CD8                     
   811                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   812  007CD8  0E00               	movlw	0
   813  007CDA  6E89               	movwf	137,c	;volatile
   814                           
   815                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   816  007CDC  0E00               	movlw	0
   817  007CDE  6E8A               	movwf	138,c	;volatile
   818                           
   819                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   820  007CE0  0E00               	movlw	0
   821  007CE2  6E8B               	movwf	139,c	;volatile
   822                           
   823                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDB;
   824  007CE4  0EDB               	movlw	219
   825  007CE6  6E92               	movwf	146,c	;volatile
   826  007CE8                     
   827                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
   828  007CE8  6893               	setf	147,c	;volatile
   829                           
   830                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0b00011000;
   831  007CEA  0E18               	movlw	24
   832  007CEC  6E94               	movwf	148,c	;volatile
   833                           
   834                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x80;
   835  007CEE  0E80               	movlw	128
   836  007CF0  010F               	movlb	15	; () banked
   837  007CF2  6F3A               	movwf	58,b	;volatile
   838                           
   839                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x38;
   840  007CF4  0E38               	movlw	56
   841  007CF6  6F39               	movwf	57,b	;volatile
   842                           
   843                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0B;
   844  007CF8  0E0B               	movlw	11
   845  007CFA  6F38               	movwf	56,b	;volatile
   846                           
   847                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
   848  007CFC  0E00               	movlw	0
   849  007CFE  6E61               	movwf	97,c	;volatile
   850  007D00                     
   851                           ; BSR set to: 15
   852                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
   853  007D00  8EF1               	bsf	241,7,c	;volatile
   854  007D02                     
   855                           ; BSR set to: 15
   856  007D02  0012               	return		;funcret
   857  007D04                     __end_of_PIN_MANAGER_Initialize:
   858                           	callstack 0
   859                           
   860 ;; *************** function _OSCILLATOR_Initialize *****************
   861 ;; Defined at:
   862 ;;		line 61 in file "mcc_generated_files/mcc.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   876 ;;      Params:         0       0       0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_SYSTEM_Initialize
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text6
   890  007B7E                     __ptext6:
   891                           	callstack 0
   892  007B7E                     _OSCILLATOR_Initialize:
   893                           	callstack 29
   894  007B7E                     
   895                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
   896  007B7E  0E30               	movlw	48
   897  007B80  6ED3               	movwf	211,c	;volatile
   898                           
   899                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
   900  007B82  0E04               	movlw	4
   901  007B84  6ED2               	movwf	210,c	;volatile
   902                           
   903                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
   904  007B86  0E00               	movlw	0
   905  007B88  6E9B               	movwf	155,c	;volatile
   906  007B8A  0012               	return		;funcret
   907  007B8C                     __end_of_OSCILLATOR_Initialize:
   908                           	callstack 0
   909                           
   910 ;; *************** function _EPWM2_Initialize *****************
   911 ;; Defined at:
   912 ;;		line 64 in file "mcc_generated_files/epwm2.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, status,2
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   926 ;;      Params:         0       0       0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_SYSTEM_Initialize
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           	psect	text7
   940  007C68                     __ptext7:
   941                           	callstack 0
   942  007C68                     _EPWM2_Initialize:
   943                           	callstack 29
   944  007C68                     
   945                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
   946  007C68  0E3C               	movlw	60
   947  007C6A  6E66               	movwf	102,c	;volatile
   948                           
   949                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
   950  007C6C  0E00               	movlw	0
   951  007C6E  6E64               	movwf	100,c	;volatile
   952                           
   953                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
   954  007C70  0E80               	movlw	128
   955  007C72  6E65               	movwf	101,c	;volatile
   956                           
   957                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
   958  007C74  0E01               	movlw	1
   959  007C76  6E63               	movwf	99,c	;volatile
   960                           
   961                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
   962  007C78  0E00               	movlw	0
   963  007C7A  6E68               	movwf	104,c	;volatile
   964                           
   965                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x7F;
   966  007C7C  0E7F               	movlw	127
   967  007C7E  6E67               	movwf	103,c	;volatile
   968                           
   969                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
   970  007C80  0EE7               	movlw	-25
   971  007C82  010F               	movlb	15	; () banked
   972  007C84  1749               	andwf	73,f,b	;volatile
   973  007C86                     
   974                           ; BSR set to: 15
   975  007C86  0012               	return		;funcret
   976  007C88                     __end_of_EPWM2_Initialize:
   977                           	callstack 0
   978                           
   979 ;; *************** function _EPWM1_Initialize *****************
   980 ;; Defined at:
   981 ;;		line 64 in file "mcc_generated_files/epwm1.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         0       0       0       0       0       0       0
   996 ;;      Locals:         0       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0
   998 ;;      Totals:         0       0       0       0       0       0       0
   999 ;;Total ram usage:        0 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_SYSTEM_Initialize
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text8
  1009  007C48                     __ptext8:
  1010                           	callstack 0
  1011  007C48                     _EPWM1_Initialize:
  1012                           	callstack 29
  1013  007C48                     
  1014                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  1015  007C48  0E3C               	movlw	60
  1016  007C4A  6EBD               	movwf	189,c	;volatile
  1017                           
  1018                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  1019  007C4C  0E00               	movlw	0
  1020  007C4E  6EB6               	movwf	182,c	;volatile
  1021                           
  1022                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  1023  007C50  0E80               	movlw	128
  1024  007C52  6EB7               	movwf	183,c	;volatile
  1025                           
  1026                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  1027  007C54  0E01               	movlw	1
  1028  007C56  6EB9               	movwf	185,c	;volatile
  1029                           
  1030                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  1031  007C58  0E00               	movlw	0
  1032  007C5A  6EBF               	movwf	191,c	;volatile
  1033                           
  1034                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  1035  007C5C  0E7F               	movlw	127
  1036  007C5E  6EBE               	movwf	190,c	;volatile
  1037                           
  1038                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  1039  007C60  0EFC               	movlw	-4
  1040  007C62  010F               	movlb	15	; () banked
  1041  007C64  1749               	andwf	73,f,b	;volatile
  1042  007C66                     
  1043                           ; BSR set to: 15
  1044  007C66  0012               	return		;funcret
  1045  007C68                     __end_of_EPWM1_Initialize:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _ADC_Initialize *****************
  1049 ;; Defined at:
  1050 ;;		line 62 in file "mcc_generated_files/adc.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1064 ;;      Params:         0       0       0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0
  1067 ;;      Totals:         0       0       0       0       0       0       0
  1068 ;;Total ram usage:        0 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_SYSTEM_Initialize
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text9
  1078  007C18                     __ptext9:
  1079                           	callstack 0
  1080  007C18                     _ADC_Initialize:
  1081                           	callstack 29
  1082  007C18                     
  1083                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1084  007C18  0E00               	movlw	0
  1085  007C1A  6EC1               	movwf	193,c	;volatile
  1086                           
  1087                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  1088  007C1C  0E04               	movlw	4
  1089  007C1E  6EC0               	movwf	192,c	;volatile
  1090                           
  1091                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1092  007C20  0E00               	movlw	0
  1093  007C22  6EC3               	movwf	195,c	;volatile
  1094                           
  1095                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1096  007C24  0E00               	movlw	0
  1097  007C26  6EC4               	movwf	196,c	;volatile
  1098                           
  1099                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x0D;
  1100  007C28  0E0D               	movlw	13
  1101  007C2A  6EC2               	movwf	194,c	;volatile
  1102  007C2C  0012               	return		;funcret
  1103  007C2E                     __end_of_ADC_Initialize:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _MCP23008_Initialise *****************
  1107 ;; Defined at:
  1108 ;;		line 147 in file "main.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;		None
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1122 ;;      Params:         0       0       0       0       0       0       0
  1123 ;;      Locals:         0       0       0       0       0       0       0
  1124 ;;      Temps:          0       0       0       0       0       0       0
  1125 ;;      Totals:         0       0       0       0       0       0       0
  1126 ;;Total ram usage:        0 bytes
  1127 ;; Hardware stack levels used:    1
  1128 ;; Hardware stack levels required when called:    2
  1129 ;; This function calls:
  1130 ;;		_I2C_send_data
  1131 ;;		_IdleI2C
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text10
  1138  007D70                     __ptext10:
  1139                           	callstack 0
  1140  007D70                     _MCP23008_Initialise:
  1141                           	callstack 28
  1142  007D70                     
  1143                           ;main.c: 149:     I2C_send_data(0x40, 0x00, 0x00);
  1144  007D70  0E00               	movlw	0
  1145  007D72  6E18               	movwf	I2C_send_data@register_address^0,c
  1146  007D74  0E00               	movlw	0
  1147  007D76  6E19               	movwf	I2C_send_data@register_data^0,c
  1148  007D78  0E40               	movlw	64
  1149  007D7A  EC57  F03E         	call	_I2C_send_data
  1150                           
  1151                           ;main.c: 150:     IdleI2C();
  1152  007D7E  EC44  F03E         	call	_IdleI2C	;wreg free
  1153                           
  1154                           ;main.c: 151:     I2C_send_data(0x40, 0x01, 0x00);
  1155  007D82  0E01               	movlw	1
  1156  007D84  6E18               	movwf	I2C_send_data@register_address^0,c
  1157  007D86  0E00               	movlw	0
  1158  007D88  6E19               	movwf	I2C_send_data@register_data^0,c
  1159  007D8A  0E40               	movlw	64
  1160  007D8C  EC57  F03E         	call	_I2C_send_data
  1161                           
  1162                           ;main.c: 152:     IdleI2C();
  1163  007D90  EC44  F03E         	call	_IdleI2C	;wreg free
  1164                           
  1165                           ;main.c: 153:     I2C_send_data(0x40, 0x02, 0x00);
  1166  007D94  0E02               	movlw	2
  1167  007D96  6E18               	movwf	I2C_send_data@register_address^0,c
  1168  007D98  0E00               	movlw	0
  1169  007D9A  6E19               	movwf	I2C_send_data@register_data^0,c
  1170  007D9C  0E40               	movlw	64
  1171  007D9E  EC57  F03E         	call	_I2C_send_data
  1172                           
  1173                           ;main.c: 154:     IdleI2C();
  1174  007DA2  EC44  F03E         	call	_IdleI2C	;wreg free
  1175                           
  1176                           ;main.c: 155:     I2C_send_data(0x40, 0x05, 0x3E);
  1177  007DA6  0E05               	movlw	5
  1178  007DA8  6E18               	movwf	I2C_send_data@register_address^0,c
  1179  007DAA  0E3E               	movlw	62
  1180  007DAC  6E19               	movwf	I2C_send_data@register_data^0,c
  1181  007DAE  0E40               	movlw	64
  1182  007DB0  EC57  F03E         	call	_I2C_send_data
  1183                           
  1184                           ;main.c: 156:     IdleI2C();
  1185  007DB4  EC44  F03E         	call	_IdleI2C	;wreg free
  1186                           
  1187                           ;main.c: 157:     I2C_send_data(0x40, 0x06, 0x00);
  1188  007DB8  0E06               	movlw	6
  1189  007DBA  6E18               	movwf	I2C_send_data@register_address^0,c
  1190  007DBC  0E00               	movlw	0
  1191  007DBE  6E19               	movwf	I2C_send_data@register_data^0,c
  1192  007DC0  0E40               	movlw	64
  1193  007DC2  EC57  F03E         	call	_I2C_send_data
  1194  007DC6  0012               	return		;funcret
  1195  007DC8                     __end_of_MCP23008_Initialise:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _IsOptoR *****************
  1199 ;; Defined at:
  1200 ;;		line 128 in file "main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      _Bool 
  1207 ;; Registers used:
  1208 ;;		wreg
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1214 ;;      Params:         0       0       0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_main
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text11
  1228  007BC2                     __ptext11:
  1229                           	callstack 0
  1230  007BC2                     _IsOptoR:
  1231                           	callstack 30
  1232  007BC2                     
  1233                           ;main.c: 130:     return (PORTBbits.RB1 == 0);
  1234  007BC2  A281               	btfss	129,1,c	;volatile
  1235  007BC4  EFE6  F03D         	goto	u121
  1236  007BC8  EFE9  F03D         	goto	u120
  1237  007BCC                     u121:
  1238  007BCC  0E01               	movlw	1
  1239  007BCE  EFEA  F03D         	goto	u130
  1240  007BD2                     u120:
  1241  007BD2  0E00               	movlw	0
  1242  007BD4                     u130:
  1243  007BD4  0012               	return		;funcret
  1244  007BD6                     __end_of_IsOptoR:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _IsOptoL *****************
  1248 ;; Defined at:
  1249 ;;		line 123 in file "main.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      _Bool 
  1256 ;; Registers used:
  1257 ;;		wreg
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1263 ;;      Params:         0       0       0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0
  1266 ;;      Totals:         0       0       0       0       0       0       0
  1267 ;;Total ram usage:        0 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text12
  1277  007BAE                     __ptext12:
  1278                           	callstack 0
  1279  007BAE                     _IsOptoL:
  1280                           	callstack 30
  1281  007BAE                     
  1282                           ;main.c: 125:     return (PORTBbits.RB2 == 0);
  1283  007BAE  A481               	btfss	129,2,c	;volatile
  1284  007BB0  EFDC  F03D         	goto	u141
  1285  007BB4  EFDF  F03D         	goto	u140
  1286  007BB8                     u141:
  1287  007BB8  0E01               	movlw	1
  1288  007BBA  EFE0  F03D         	goto	u150
  1289  007BBE                     u140:
  1290  007BBE  0E00               	movlw	0
  1291  007BC0                     u150:
  1292  007BC0  0012               	return		;funcret
  1293  007BC2                     __end_of_IsOptoL:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _IsOptoFarR *****************
  1297 ;; Defined at:
  1298 ;;		line 133 in file "main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      _Bool 
  1305 ;; Registers used:
  1306 ;;		wreg
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1312 ;;      Params:         0       0       0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text13
  1326  007B9A                     __ptext13:
  1327                           	callstack 0
  1328  007B9A                     _IsOptoFarR:
  1329                           	callstack 30
  1330  007B9A                     
  1331                           ;main.c: 135:     return (PORTBbits.RB0 == 0);
  1332  007B9A  A081               	btfss	129,0,c	;volatile
  1333  007B9C  EFD2  F03D         	goto	u161
  1334  007BA0  EFD5  F03D         	goto	u160
  1335  007BA4                     u161:
  1336  007BA4  0E01               	movlw	1
  1337  007BA6  EFD6  F03D         	goto	u170
  1338  007BAA                     u160:
  1339  007BAA  0E00               	movlw	0
  1340  007BAC                     u170:
  1341  007BAC  0012               	return		;funcret
  1342  007BAE                     __end_of_IsOptoFarR:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _I2C_test *****************
  1346 ;; Defined at:
  1347 ;;		line 197 in file "main.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  i               2    6[COMRAM] int 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1361 ;;      Params:         0       0       0       0       0       0       0
  1362 ;;      Locals:         2       0       0       0       0       0       0
  1363 ;;      Temps:          2       0       0       0       0       0       0
  1364 ;;      Totals:         4       0       0       0       0       0       0
  1365 ;;Total ram usage:        4 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    2
  1368 ;; This function calls:
  1369 ;;		_I2C_send_data
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text14
  1376  007DC8                     __ptext14:
  1377                           	callstack 0
  1378  007DC8                     _I2C_test:
  1379                           	callstack 28
  1380  007DC8                     
  1381                           ;main.c: 199:     int i = 0;
  1382  007DC8  0E00               	movlw	0
  1383  007DCA  6E1E               	movwf	(I2C_test@i+1)^0,c
  1384  007DCC  0E00               	movlw	0
  1385  007DCE  6E1D               	movwf	I2C_test@i^0,c
  1386                           
  1387                           ;main.c: 200:     for (i = 0; i < 12; i++)
  1388  007DD0  0E00               	movlw	0
  1389  007DD2  6E1E               	movwf	(I2C_test@i+1)^0,c
  1390  007DD4  0E00               	movlw	0
  1391  007DD6  6E1D               	movwf	I2C_test@i^0,c
  1392  007DD8                     l1185:
  1393                           
  1394                           ;main.c: 201:     {;main.c: 202:         I2C_send_data(0x40, 0x09, digits[i]);
  1395  007DD8  0E09               	movlw	9
  1396  007DDA  6E18               	movwf	I2C_send_data@register_address^0,c
  1397  007DDC  0E01               	movlw	low _digits
  1398  007DDE  241D               	addwf	I2C_test@i^0,w,c
  1399  007DE0  6ED9               	movwf	fsr2l,c
  1400  007DE2  0E00               	movlw	high _digits
  1401  007DE4  201E               	addwfc	(I2C_test@i+1)^0,w,c
  1402  007DE6  6EDA               	movwf	fsr2h,c
  1403  007DE8  50DF               	movf	indf2,w,c
  1404  007DEA  6E19               	movwf	I2C_send_data@register_data^0,c
  1405  007DEC  0E40               	movlw	64
  1406  007DEE  EC57  F03E         	call	_I2C_send_data
  1407  007DF2                     
  1408                           ;main.c: 203:         _delay((unsigned long)((500)*(4000000/4000.0)));
  1409  007DF2  0E03               	movlw	3
  1410  007DF4  6E1C               	movwf	(??_I2C_test+1)^0,c
  1411  007DF6  0E8A               	movlw	138
  1412  007DF8  6E1B               	movwf	??_I2C_test^0,c
  1413  007DFA  0E56               	movlw	86
  1414  007DFC                     u377:
  1415  007DFC  2EE8               	decfsz	wreg,f,c
  1416  007DFE  D7FE               	bra	u377
  1417  007E00  2E1B               	decfsz	??_I2C_test^0,f,c
  1418  007E02  D7FC               	bra	u377
  1419  007E04  2E1C               	decfsz	(??_I2C_test+1)^0,f,c
  1420  007E06  D7FA               	bra	u377
  1421  007E08  BA8B               	btfsc	139,5,c	;volatile
  1422  007E0A  EF09  F03F         	goto	u291
  1423  007E0E  EF0C  F03F         	goto	u290
  1424  007E12                     u291:
  1425  007E12  0E01               	movlw	1
  1426  007E14  EF0D  F03F         	goto	u296
  1427  007E18                     u290:
  1428  007E18  0E00               	movlw	0
  1429  007E1A                     u296:
  1430  007E1A  0AFF               	xorlw	255
  1431  007E1C  6E1B               	movwf	??_I2C_test^0,c
  1432  007E1E  3A1B               	swapf	??_I2C_test^0,f,c
  1433  007E20  461B               	rlncf	??_I2C_test^0,f,c
  1434  007E22  508B               	movf	139,w,c	;volatile
  1435  007E24  181B               	xorwf	??_I2C_test^0,w,c
  1436  007E26  0BDF               	andlw	-33
  1437  007E28  181B               	xorwf	??_I2C_test^0,w,c
  1438  007E2A  6E8B               	movwf	139,c	;volatile
  1439  007E2C                     
  1440                           ;main.c: 205:     }
  1441  007E2C  4A1D               	infsnz	I2C_test@i^0,f,c
  1442  007E2E  2A1E               	incf	(I2C_test@i+1)^0,f,c
  1443  007E30  BE1E               	btfsc	(I2C_test@i+1)^0,7,c
  1444  007E32  EF24  F03F         	goto	u301
  1445  007E36  501E               	movf	(I2C_test@i+1)^0,w,c
  1446  007E38  E109               	bnz	u300
  1447  007E3A  0E0C               	movlw	12
  1448  007E3C  5C1D               	subwf	I2C_test@i^0,w,c
  1449  007E3E  A0D8               	btfss	status,0,c
  1450  007E40  EF24  F03F         	goto	u301
  1451  007E44  EF26  F03F         	goto	u300
  1452  007E48                     u301:
  1453  007E48  EFEC  F03E         	goto	l1185
  1454  007E4C                     u300:
  1455  007E4C  0012               	return		;funcret
  1456  007E4E                     __end_of_I2C_test:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _I2C_send_data *****************
  1460 ;; Defined at:
  1461 ;;		line 160 in file "main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  device_addre    1    wreg     unsigned char 
  1464 ;;  register_add    1    1[COMRAM] unsigned char 
  1465 ;;  register_dat    1    2[COMRAM] unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  device_addre    1    3[COMRAM] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1477 ;;      Params:         2       0       0       0       0       0       0
  1478 ;;      Locals:         1       0       0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0
  1480 ;;      Totals:         3       0       0       0       0       0       0
  1481 ;;Total ram usage:        3 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    1
  1484 ;; This function calls:
  1485 ;;		_IdleI2C
  1486 ;;		_StartI2C
  1487 ;;		_StopI2C
  1488 ;;		_WriteI2C
  1489 ;; This function is called by:
  1490 ;;		_MCP23008_Initialise
  1491 ;;		_I2C_test
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text15
  1496  007CAE                     __ptext15:
  1497                           	callstack 0
  1498  007CAE                     _I2C_send_data:
  1499                           	callstack 28
  1500                           
  1501                           ;incstack = 0
  1502                           ;I2C_send_data@device_address stored from wreg
  1503  007CAE  6E1A               	movwf	I2C_send_data@device_address^0,c
  1504  007CB0                     
  1505                           ;main.c: 160: void I2C_send_data(unsigned char device_address, unsigned char register_ad
      +                          dress, unsigned char register_data);main.c: 161: {;main.c: 162:     StartI2C();
  1506  007CB0  ECF6  F03D         	call	_StartI2C	;wreg free
  1507  007CB4                     
  1508                           ;main.c: 163:     WriteI2C(device_address);
  1509  007CB4  501A               	movf	I2C_send_data@device_address^0,w,c
  1510  007CB6  EC01  F03E         	call	_WriteI2C
  1511  007CBA                     
  1512                           ;main.c: 164:     IdleI2C();
  1513  007CBA  EC44  F03E         	call	_IdleI2C	;wreg free
  1514  007CBE                     
  1515                           ;main.c: 165:     WriteI2C(register_address);
  1516  007CBE  5018               	movf	I2C_send_data@register_address^0,w,c
  1517  007CC0  EC01  F03E         	call	_WriteI2C
  1518  007CC4                     
  1519                           ;main.c: 166:     IdleI2C();
  1520  007CC4  EC44  F03E         	call	_IdleI2C	;wreg free
  1521  007CC8                     
  1522                           ;main.c: 167:     WriteI2C(register_data);
  1523  007CC8  5019               	movf	I2C_send_data@register_data^0,w,c
  1524  007CCA  EC01  F03E         	call	_WriteI2C
  1525  007CCE                     
  1526                           ;main.c: 168:     IdleI2C();
  1527  007CCE  EC44  F03E         	call	_IdleI2C	;wreg free
  1528  007CD2                     
  1529                           ;main.c: 169:     StopI2C();
  1530  007CD2  ECB7  F03D         	call	_StopI2C	;wreg free
  1531  007CD6  0012               	return		;funcret
  1532  007CD8                     __end_of_I2C_send_data:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _WriteI2C *****************
  1536 ;; Defined at:
  1537 ;;		line 186 in file "main.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  data            1    wreg     unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  data            1    0[COMRAM] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1551 ;;      Params:         0       0       0       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0
  1554 ;;      Totals:         1       0       0       0       0       0       0
  1555 ;;Total ram usage:        1 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_I2C_send_data
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text16
  1565  007C02                     __ptext16:
  1566                           	callstack 0
  1567  007C02                     _WriteI2C:
  1568                           	callstack 28
  1569                           
  1570                           ;incstack = 0
  1571                           ;WriteI2C@data stored from wreg
  1572  007C02  6E17               	movwf	WriteI2C@data^0,c
  1573  007C04                     
  1574                           ;main.c: 186: void WriteI2C(unsigned char data);main.c: 187: {;main.c: 188:     SSP1BUF 
      +                          = data;
  1575  007C04  C017  FFC9         	movff	WriteI2C@data,4041	;volatile
  1576  007C08                     l202:
  1577  007C08  B0C7               	btfsc	199,0,c	;volatile
  1578  007C0A  EF09  F03E         	goto	u41
  1579  007C0E  EF0B  F03E         	goto	u40
  1580  007C12                     u41:
  1581  007C12  EF04  F03E         	goto	l202
  1582  007C16                     u40:
  1583  007C16  0012               	return		;funcret
  1584  007C18                     __end_of_WriteI2C:
  1585                           	callstack 0
  1586                           
  1587 ;; *************** function _StopI2C *****************
  1588 ;; Defined at:
  1589 ;;		line 192 in file "main.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;		None
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		None
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1603 ;;      Params:         0       0       0       0       0       0       0
  1604 ;;      Locals:         0       0       0       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0
  1606 ;;      Totals:         0       0       0       0       0       0       0
  1607 ;;Total ram usage:        0 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; This function calls:
  1610 ;;		Nothing
  1611 ;; This function is called by:
  1612 ;;		_I2C_send_data
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text17
  1617  007B6E                     __ptext17:
  1618                           	callstack 0
  1619  007B6E                     _StopI2C:
  1620                           	callstack 28
  1621  007B6E                     
  1622                           ;main.c: 194:     SSP1CON2bits.PEN = 1;
  1623  007B6E  84C5               	bsf	197,2,c	;volatile
  1624  007B70  0012               	return		;funcret
  1625  007B72                     __end_of_StopI2C:
  1626                           	callstack 0
  1627                           
  1628 ;; *************** function _StartI2C *****************
  1629 ;; Defined at:
  1630 ;;		line 177 in file "main.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;		None
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		None
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1644 ;;      Params:         0       0       0       0       0       0       0
  1645 ;;      Locals:         0       0       0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0
  1647 ;;      Totals:         0       0       0       0       0       0       0
  1648 ;;Total ram usage:        0 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_I2C_send_data
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text18
  1658  007BEC                     __ptext18:
  1659                           	callstack 0
  1660  007BEC                     _StartI2C:
  1661                           	callstack 28
  1662  007BEC                     
  1663                           ;main.c: 179:     PIR1bits.SSPIF = 0;
  1664  007BEC  969E               	bcf	158,3,c	;volatile
  1665                           
  1666                           ;main.c: 180:     SSP1CON2bits.SEN = 1;
  1667  007BEE  80C5               	bsf	197,0,c	;volatile
  1668  007BF0                     l196:
  1669  007BF0  A69E               	btfss	158,3,c	;volatile
  1670  007BF2  EFFD  F03D         	goto	u31
  1671  007BF6  EFFF  F03D         	goto	u30
  1672  007BFA                     u31:
  1673  007BFA  EFF8  F03D         	goto	l196
  1674  007BFE                     u30:
  1675  007BFE                     
  1676                           ;main.c: 183:     PIR1bits.SSPIF = 0;
  1677  007BFE  969E               	bcf	158,3,c	;volatile
  1678  007C00  0012               	return		;funcret
  1679  007C02                     __end_of_StartI2C:
  1680                           	callstack 0
  1681                           
  1682 ;; *************** function _IdleI2C *****************
  1683 ;; Defined at:
  1684 ;;		line 172 in file "main.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1698 ;;      Params:         0       0       0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0
  1700 ;;      Temps:          1       0       0       0       0       0       0
  1701 ;;      Totals:         1       0       0       0       0       0       0
  1702 ;;Total ram usage:        1 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; This function calls:
  1705 ;;		Nothing
  1706 ;; This function is called by:
  1707 ;;		_MCP23008_Initialise
  1708 ;;		_I2C_send_data
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text19
  1713  007C88                     __ptext19:
  1714                           	callstack 0
  1715  007C88                     _IdleI2C:
  1716                           	callstack 29
  1717  007C88                     l987:
  1718  007C88  CFC5 F017          	movff	4037,??_IdleI2C	;volatile
  1719  007C8C  0E1F               	movlw	31
  1720  007C8E  1617               	andwf	??_IdleI2C^0,f,c
  1721  007C90  A4D8               	btfss	status,2,c
  1722  007C92  EF4D  F03E         	goto	u11
  1723  007C96  EF4F  F03E         	goto	u10
  1724  007C9A                     u11:
  1725  007C9A  EF44  F03E         	goto	l987
  1726  007C9E                     u10:
  1727  007C9E  B2C7               	btfsc	199,1,c	;volatile
  1728  007CA0  EF54  F03E         	goto	u21
  1729  007CA4  EF56  F03E         	goto	u20
  1730  007CA8                     u21:
  1731  007CA8  EF44  F03E         	goto	l987
  1732  007CAC                     u20:
  1733  007CAC  0012               	return		;funcret
  1734  007CAE                     __end_of_IdleI2C:
  1735                           	callstack 0
  1736                           
  1737 ;; *************** function _I2C_Initialise *****************
  1738 ;; Defined at:
  1739 ;;		line 138 in file "main.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, status,2
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1753 ;;      Params:         0       0       0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text20
  1767  007BD6                     __ptext20:
  1768                           	callstack 0
  1769  007BD6                     _I2C_Initialise:
  1770                           	callstack 30
  1771  007BD6                     
  1772                           ;main.c: 140:     SSP1STAT = 0x00;
  1773  007BD6  0E00               	movlw	0
  1774  007BD8  6EC7               	movwf	199,c	;volatile
  1775                           
  1776                           ;main.c: 141:     SSP1CON1 = 0x28;
  1777  007BDA  0E28               	movlw	40
  1778  007BDC  6EC6               	movwf	198,c	;volatile
  1779                           
  1780                           ;main.c: 142:     SSP1CON2 = 0x00;
  1781  007BDE  0E00               	movlw	0
  1782  007BE0  6EC5               	movwf	197,c	;volatile
  1783                           
  1784                           ;main.c: 143:     SSP1CON3 = 0x08;
  1785  007BE2  0E08               	movlw	8
  1786  007BE4  6ECB               	movwf	203,c	;volatile
  1787                           
  1788                           ;main.c: 144:     SSP1ADD = 0x09;
  1789  007BE6  0E09               	movlw	9
  1790  007BE8  6EC8               	movwf	200,c	;volatile
  1791  007BEA  0012               	return		;funcret
  1792  007BEC                     __end_of_I2C_Initialise:
  1793                           	callstack 0
  1794  0000                     
  1795                           	psect	rparam
  1796  0000                     
  1797                           	psect	idloc
  1798                           
  1799                           ;Config register IDLOC0 @ 0x200000
  1800                           ;	unspecified, using default values
  1801  200000                     	org	2097152
  1802  200000  FF                 	db	255
  1803                           
  1804                           ;Config register IDLOC1 @ 0x200001
  1805                           ;	unspecified, using default values
  1806  200001                     	org	2097153
  1807  200001  FF                 	db	255
  1808                           
  1809                           ;Config register IDLOC2 @ 0x200002
  1810                           ;	unspecified, using default values
  1811  200002                     	org	2097154
  1812  200002  FF                 	db	255
  1813                           
  1814                           ;Config register IDLOC3 @ 0x200003
  1815                           ;	unspecified, using default values
  1816  200003                     	org	2097155
  1817  200003  FF                 	db	255
  1818                           
  1819                           ;Config register IDLOC4 @ 0x200004
  1820                           ;	unspecified, using default values
  1821  200004                     	org	2097156
  1822  200004  FF                 	db	255
  1823                           
  1824                           ;Config register IDLOC5 @ 0x200005
  1825                           ;	unspecified, using default values
  1826  200005                     	org	2097157
  1827  200005  FF                 	db	255
  1828                           
  1829                           ;Config register IDLOC6 @ 0x200006
  1830                           ;	unspecified, using default values
  1831  200006                     	org	2097158
  1832  200006  FF                 	db	255
  1833                           
  1834                           ;Config register IDLOC7 @ 0x200007
  1835                           ;	unspecified, using default values
  1836  200007                     	org	2097159
  1837  200007  FF                 	db	255
  1838                           
  1839                           	psect	config
  1840                           
  1841                           ; Padding undefined space
  1842  300000                     	org	3145728
  1843  300000  FF                 	db	255
  1844                           
  1845                           ;Config register CONFIG1H @ 0x300001
  1846                           ;	Oscillator Selection bits
  1847                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  1848                           ;	4X PLL Enable
  1849                           ;	PLLCFG = OFF, Oscillator used directly
  1850                           ;	Primary clock enable bit
  1851                           ;	PRICLKEN = ON, Primary clock enabled
  1852                           ;	Fail-Safe Clock Monitor Enable bit
  1853                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1854                           ;	Internal/External Oscillator Switchover bit
  1855                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1856  300001                     	org	3145729
  1857  300001  23                 	db	35
  1858                           
  1859                           ;Config register CONFIG2L @ 0x300002
  1860                           ;	Power-up Timer Enable bit
  1861                           ;	PWRTEN = OFF, Power up timer disabled
  1862                           ;	Brown-out Reset Enable bits
  1863                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1864                           ;	Brown Out Reset Voltage bits
  1865                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1866  300002                     	org	3145730
  1867  300002  1F                 	db	31
  1868                           
  1869                           ;Config register CONFIG2H @ 0x300003
  1870                           ;	Watchdog Timer Enable bits
  1871                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1872                           ;	Watchdog Timer Postscale Select bits
  1873                           ;	WDTPS = 32768, 1:32768
  1874  300003                     	org	3145731
  1875  300003  3C                 	db	60
  1876                           
  1877                           ; Padding undefined space
  1878  300004                     	org	3145732
  1879  300004  FF                 	db	255
  1880                           
  1881                           ;Config register CONFIG3H @ 0x300005
  1882                           ;	CCP2 MUX bit
  1883                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1884                           ;	PORTB A/D Enable bit
  1885                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1886                           ;	P3A/CCP3 Mux bit
  1887                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1888                           ;	HFINTOSC Fast Start-up
  1889                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  1890                           ;	Timer3 Clock input mux bit
  1891                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1892                           ;	ECCP2 B output mux bit
  1893                           ;	P2BMX = PORTB5, P2B is on RB5
  1894                           ;	MCLR Pin Enable bit
  1895                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1896  300005                     	org	3145733
  1897  300005  BD                 	db	189
  1898                           
  1899                           ;Config register CONFIG4L @ 0x300006
  1900                           ;	Stack Full/Underflow Reset Enable bit
  1901                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1902                           ;	Single-Supply ICSP Enable bit
  1903                           ;	LVP = OFF, Single-Supply ICSP disabled
  1904                           ;	Extended Instruction Set Enable bit
  1905                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1906                           ;	Background Debug
  1907                           ;	DEBUG = OFF, Disabled
  1908  300006                     	org	3145734
  1909  300006  80                 	db	128
  1910                           
  1911                           ; Padding undefined space
  1912  300007                     	org	3145735
  1913  300007  FF                 	db	255
  1914                           
  1915                           ;Config register CONFIG5L @ 0x300008
  1916                           ;	Code Protection Block 0
  1917                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1918                           ;	Code Protection Block 1
  1919                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1920                           ;	Code Protection Block 2
  1921                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1922                           ;	Code Protection Block 3
  1923                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1924  300008                     	org	3145736
  1925  300008  0F                 	db	15
  1926                           
  1927                           ;Config register CONFIG5H @ 0x300009
  1928                           ;	Boot Block Code Protection bit
  1929                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1930                           ;	Data EEPROM Code Protection bit
  1931                           ;	CPD = OFF, Data EEPROM not code-protected
  1932  300009                     	org	3145737
  1933  300009  C0                 	db	192
  1934                           
  1935                           ;Config register CONFIG6L @ 0x30000A
  1936                           ;	Write Protection Block 0
  1937                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1938                           ;	Write Protection Block 1
  1939                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1940                           ;	Write Protection Block 2
  1941                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1942                           ;	Write Protection Block 3
  1943                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1944  30000A                     	org	3145738
  1945  30000A  0F                 	db	15
  1946                           
  1947                           ;Config register CONFIG6H @ 0x30000B
  1948                           ;	Configuration Register Write Protection bit
  1949                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1950                           ;	Boot Block Write Protection bit
  1951                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1952                           ;	Data EEPROM Write Protection bit
  1953                           ;	WRTD = OFF, Data EEPROM not write-protected
  1954  30000B                     	org	3145739
  1955  30000B  E0                 	db	224
  1956                           
  1957                           ;Config register CONFIG7L @ 0x30000C
  1958                           ;	Table Read Protection Block 0
  1959                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1960                           ;	Table Read Protection Block 1
  1961                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1962                           ;	Table Read Protection Block 2
  1963                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1964                           ;	Table Read Protection Block 3
  1965                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1966  30000C                     	org	3145740
  1967  30000C  0F                 	db	15
  1968                           
  1969                           ;Config register CONFIG7H @ 0x30000D
  1970                           ;	Boot Block Table Read Protection bit
  1971                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1972  30000D                     	org	3145741
  1973  30000D  40                 	db	64
  1974                           tosu	equ	0xFFF
  1975                           tosh	equ	0xFFE
  1976                           tosl	equ	0xFFD
  1977                           stkptr	equ	0xFFC
  1978                           pclatu	equ	0xFFB
  1979                           pclath	equ	0xFFA
  1980                           pcl	equ	0xFF9
  1981                           tblptru	equ	0xFF8
  1982                           tblptrh	equ	0xFF7
  1983                           tblptrl	equ	0xFF6
  1984                           tablat	equ	0xFF5
  1985                           prodh	equ	0xFF4
  1986                           prodl	equ	0xFF3
  1987                           indf0	equ	0xFEF
  1988                           postinc0	equ	0xFEE
  1989                           postdec0	equ	0xFED
  1990                           preinc0	equ	0xFEC
  1991                           plusw0	equ	0xFEB
  1992                           fsr0h	equ	0xFEA
  1993                           fsr0l	equ	0xFE9
  1994                           wreg	equ	0xFE8
  1995                           indf1	equ	0xFE7
  1996                           postinc1	equ	0xFE6
  1997                           postdec1	equ	0xFE5
  1998                           preinc1	equ	0xFE4
  1999                           plusw1	equ	0xFE3
  2000                           fsr1h	equ	0xFE2
  2001                           fsr1l	equ	0xFE1
  2002                           bsr	equ	0xFE0
  2003                           indf2	equ	0xFDF
  2004                           postinc2	equ	0xFDE
  2005                           postdec2	equ	0xFDD
  2006                           preinc2	equ	0xFDC
  2007                           plusw2	equ	0xFDB
  2008                           fsr2h	equ	0xFDA
  2009                           fsr2l	equ	0xFD9
  2010                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_I2C_test
    _MCP23008_Initialise->_I2C_send_data
    _I2C_test->_I2C_send_data
    _I2C_send_data->_IdleI2C
    _I2C_send_data->_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3381
                                              8 COMRAM     2     2      0
                     _I2C_Initialise
                           _I2C_test
                         _IsOptoFarR
                            _IsOptoL
                            _IsOptoR
                _MCP23008_Initialise
                  _SYSTEM_Initialize
                         _diagnostic
                          _motor_fwd
 ---------------------------------------------------------------------------------
 (1) _motor_fwd                                            3     1      2    1326
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _diagnostic                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP23008_Initialise                                  0     0      0     993
                      _I2C_send_data
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (1) _IsOptoR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoFarR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_test                                             4     4      0    1062
                                              4 COMRAM     4     4      0
                      _I2C_send_data
 ---------------------------------------------------------------------------------
 (2) _I2C_send_data                                        3     1      2     993
                                              1 COMRAM     3     1      2
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialise
   _I2C_test
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
   _IsOptoFarR
   _IsOptoL
   _IsOptoR
   _MCP23008_Initialise
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
     _IdleI2C
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
   _diagnostic
   _motor_fwd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      20       1       33.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20       9        0.0%
DATA                 0      0      20      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Nov 23 15:37:45 2020

                             l17 7C86                               l37 7C66  
                             l53 7B98                               u10 7C9E  
                             u11 7C9A                               u20 7CAC  
                             u21 7CA8                               u30 7BFE  
                             u31 7BFA                               u40 7C16  
                             u41 7C12                               u50 7E5E  
                             u51 7E58                               u60 7E82  
                             u61 7E7C                               u70 7EC0  
                             u71 7EBA                               u80 7EE4  
                             u56 7E60                               u81 7EDE  
                             u66 7E84                               u76 7EC2  
                             u86 7EE6                              l202 7C08  
                            l205 7C16                              l215 7E4C  
                            l208 7B70                              l153 7FFC  
                            l234 7C2C                              l306 7D02  
                            l172 7BC0                              l164 7EFA  
                            l156 7E4E                              l148 7FF8  
                            l181 7BEA                              l158 7E72  
                            l175 7BD4                              l167 7D2A  
                            l184 7DC6                              l193 7CAC  
                            l169 7D38                              l178 7BAC  
                            l187 7CD6                              l196 7BF0  
                            l276 7C46                              l198 7BFE  
                            l199 7C00                              l279 7B8A  
                            l991 7BEC                              l985 7C88  
                            l993 7C04                              l987 7C88  
                            l995 7B6E                              l989 7C9E  
                            l997 7C68                              l999 7C48  
                            u120 7BD2                              u121 7BCC  
                            u130 7BD4                              u300 7E4C  
                            u140 7BBE                              u301 7E48  
                            u141 7BB8                              u150 7BC0  
                            u310 7F3C                              u311 7F38  
                            u160 7BAA                              u320 7F70  
                            u161 7BA4                              u321 7F6C  
                            u170 7BAC                              u330 7FA4  
                            u331 7FA0                              u260 7D18  
                            u261 7D14                              _PR2 000FBB  
                            u290 7E18                              u291 7E12  
                            u275 7D24                              u347 7FAE  
                            u276 7D26                              u285 7D36  
                            u357 7FE6                              u286 7D38  
                            u367 7EA2                              u296 7E1A  
                            u377 7DFC                              _Lit 000F  
                _TMR2_Initialize 7B8C                              wreg 000FE8  
       __end_of_EPWM2_Initialize 7C88                             l1001 7B8C  
                           l1003 7B8E                             l1005 7B92  
                           l1023 7C18                             l1031 7B7E  
                           l1025 7CD8                             l1033 7C2E  
                           l1041 7E98                             l1201 7F0C  
                           l1035 7BD6                             l1051 7BC2  
                           l1027 7CE8                             l1043 7EB0  
                           l1211 7F70                             l1203 7F1A  
                           l1029 7D00                             l1045 7ED4  
                           l1221 7FCA                             l1205 7F3C  
                           l1055 7BAE                             l1039 7E4E  
                           l1223 7FD8                             l1215 7F90  
                           l1161 7CBA                             l1225 7FDC  
                           l1217 7FA4                             l1209 7F5C  
                           l1171 7CD2                             l1163 7CBE  
                           l1059 7B9A                             l1219 7FBC  
                           l1165 7CC4                             l1157 7CB0  
                           l1173 7D70                             l1167 7CC8  
                           l1159 7CB4                             l1191 7E2C  
                           l1175 7D06                             l1169 7CCE  
                           l1193 7E30                             l1185 7DD8  
                           l1177 7D18                             l1187 7DF2  
                           l1179 7DC8                             l1195 7EFC  
                           l1189 7E08                             l1197 7F04  
                           l1199 7F08                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _TMR2 000FBC                             _WPUB 000F61  
                           _main 7EFC                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           start 0000                 __end_of_I2C_test 7E4E  
                __end_of_IdleI2C 7CAE                     ___param_bank 000000  
                __end_of_IsOptoL 7BC2                  __end_of_IsOptoR 7BD6  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 7B8C  
                __end_of_StopI2C 7B72                            ?_main 0017  
                          _T2CON 000FBA                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _UnLit 0011                       _IsOptoFarR 7B9A  
                          tablat 000FF5                            status 000FD8  
                __initialization 7D3A                     __end_of_main 8000  
        __end_of_TMR2_Initialize 7B9A                           ??_main 001F  
                  __activetblptr 000002                 __end_of_StartI2C 7C02  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         _ADCON2 000FC0                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1H 000FBF  
                         _CCPR2H 000F68                           _CCPR1L 000FBE  
                         _CCPR2L 000F67                 __end_of_WriteI2C 7C18  
                         _ANSELA 000F38                           _ANSELB 000F39  
                         _ANSELC 000F3A                        ??_IdleI2C 0017  
                         _OSCCON 000FD3                        I2C_test@i 001D  
                      ??_IsOptoL 0017                        ??_IsOptoR 0017  
                   _CCPTMRS0bits 000F49                        ??_StopI2C 0017  
                         _digits 0001                           clear_0 7D60  
        __size_of_I2C_Initialise 0016                     WriteI2C@data 0017  
                   __pdataCOMRAM 0001                        ?_I2C_test 0017  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      ?_IsOptoFarR 0017  
              _SYSTEM_Initialize 7C2E                       __accesstop 0060  
        __end_of__initialization 7D66               ?_SYSTEM_Initialize 0017  
                  ___rparam_used 000001           __size_of_I2C_send_data 002A  
              ?_EPWM1_Initialize 0017                   __pcstackCOMRAM 0017  
            ??_SYSTEM_Initialize 0017               ??_EPWM1_Initialize 0017  
               ?_TMR2_Initialize 0017                       ??_I2C_test 001B  
              ?_EPWM2_Initialize 0017        __end_of_SYSTEM_Initialize 7C48  
             ??_EPWM2_Initialize 0017     __size_of_MCP23008_Initialise 0058  
                     _diagnostic 7E4E      I2C_send_data@device_address 001A  
                      ?_StartI2C 0017                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          _ECCP1AS 000FB6  
                        _ECCP2AS 000F64                        ?_WriteI2C 0017  
            __size_of_IsOptoFarR 0014          __size_of_ADC_Initialize 0016  
             __size_of_motor_fwd 0036                    _I2C_send_data 7CAE  
                        _OSCCON2 000FD2    I2C_send_data@register_address 0018  
                        _OSCTUNE 000F9B                          _PWM1CON 000FB7  
                        _PWM2CON 000F65                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _IdleI2C 7C88  
                        _IsOptoL 7BAE                          _IsOptoR 7BC2  
           _ADC_InterruptHandler 000D                          __Hparam 0000  
                        __Lparam 0000                          _StopI2C 7B6E  
                     ??_StartI2C 0017                          __pcinit 7D3A  
                     ??_WriteI2C 0017                   _I2C_Initialise 7BD6  
                        __ramtop 0600                          __ptext0 7EFC  
                        __ptext1 7D04                          __ptext2 7E4E  
                        __ptext3 7C2E                          __ptext4 7B8C  
                        __ptext5 7CD8                          __ptext6 7B7E  
                        __ptext7 7C68                          __ptext8 7C48  
                        __ptext9 7C18                   ?_I2C_send_data 0018  
          _OSCILLATOR_Initialize 7B7E                        _T2CONbits 000FBA  
       ??_PIN_MANAGER_Initialize 0017       __size_of_SYSTEM_Initialize 001A  
           end_of_initialization 7D66                    __Lmediumconst 0000  
              __end_of_motor_fwd 7D3A                      ?_diagnostic 0017  
                        postdec1 000FE5                          postinc0 000FEE  
         __end_of_I2C_Initialise 7BEC                        _PORTAbits 000F80  
                      _PORTBbits 000F81                __size_of_I2C_test 0086  
                   ??_IsOptoFarR 0017                  ?_I2C_Initialise 0017  
                  __pidataCOMRAM 7B72                  ??_I2C_send_data 001A  
                 _ADC_Initialize 7C18               __end_of_IsOptoFarR 7BAE  
         ?_OSCILLATOR_Initialize 0017              start_initialization 7D3A  
            _MCP23008_Initialise 7D70        __size_of_EPWM1_Initialize 0020  
__size_of_PIN_MANAGER_Initialize 002C              __size_of_diagnostic 00AE  
           ?_MCP23008_Initialise 0017        __size_of_EPWM2_Initialize 0020  
         __end_of_ADC_Initialize 7C2E                __size_of_StartI2C 0016  
              __size_of_WriteI2C 0016                      __pbssCOMRAM 000D  
                      _adcResult 0015         __size_of_TMR2_Initialize 000E  
                       ?_IdleI2C 0017                         ?_IsOptoL 0017  
                       ?_IsOptoR 0017            ??_MCP23008_Initialise 001B  
         _PIN_MANAGER_Initialize 7CD8                         ?_StopI2C 0017  
                ?_ADC_Initialize 0017                     _intialResult 0013  
                       _I2C_test 7DC8                         _LATCbits 000F8B  
                   ??_diagnostic 0017                         _PIR1bits 000F9E  
                      _motor_fwd 7D04                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                         _SSP1CON3 000FCB  
                       _PSTR1CON 000FB9                         _PSTR2CON 000F63  
                       _SSP1STAT 000FC7                       _ADCON0bits 000FC2  
               _EPWM1_Initialize 7C48               __end_of_diagnostic 7EFC  
                    _INTCON2bits 000FF1                        copy_data0 7D4E  
              ??_TMR2_Initialize 0017                 __size_of_IdleI2C 0026  
               ??_I2C_Initialise 0017                 __size_of_IsOptoL 0014  
               __size_of_IsOptoR 0014                         __Hrparam 0000  
               _EPWM2_Initialize 7C68                         __Lrparam 0000  
                     ?_motor_fwd 0017                         _StartI2C 7BEC  
               __size_of_StopI2C 0004          ??_OSCILLATOR_Initialize 0017  
                       _WriteI2C 7C02                         __ptext10 7D70  
                       __ptext11 7BC2                         __ptext20 7BD6  
                       __ptext12 7BAE                         __ptext13 7B9A  
                       __ptext14 7DC8                         __ptext15 7CAE  
                       __ptext16 7C02                         __ptext17 7B6E  
                       __ptext18 7BEC                         __ptext19 7C88  
                   _SSP1CON2bits 000FC5                    __size_of_main 0104  
                   _SSP1STATbits 000FC7                    motor_fwd@STAT 0018  
          __end_of_I2C_send_data 7CD8                       _INTCONbits 000FF2  
        ?_PIN_MANAGER_Initialize 0017                 ??_ADC_Initialize 0017  
                    ??_motor_fwd 0019                     motor_fwd@dir 0019  
                   motor_fwd@spd 0017       I2C_send_data@register_data 0019  
    __end_of_MCP23008_Initialise 7DC8   __end_of_PIN_MANAGER_Initialize 7D04  
       __end_of_EPWM1_Initialize 7C68  
