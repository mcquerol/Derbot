

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Nov 24 19:11:17 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 05/05/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F25K22 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  0078F6                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for _digits
    81  0078F6  3E                 	db	62
    82  0078F7  38                 	db	56
    83  0078F8  3F                 	db	63
    84  0078F9  06                 	db	6
    85  0078FA  5B                 	db	91
    86  0078FB  4F                 	db	79
    87  0078FC  66                 	db	102
    88  0078FD  6D                 	db	109
    89  0078FE  7D                 	db	125
    90  0078FF  07                 	db	7
    91  007900  7F                 	db	127
    92  007901  67                 	db	103
    93  0000                     _CCPTMRS0bits	set	3913
    94  0000                     _ANSELA	set	3896
    95  0000                     _ANSELB	set	3897
    96  0000                     _ANSELC	set	3898
    97  0000                     _ADCON0	set	4034
    98  0000                     _ADRESL	set	4035
    99  0000                     _ADCON2	set	4032
   100  0000                     _ADCON1	set	4033
   101  0000                     _CCPR2H	set	3944
   102  0000                     _PSTR2CON	set	3939
   103  0000                     _PWM2CON	set	3941
   104  0000                     _ECCP2AS	set	3940
   105  0000                     _CCP2CON	set	3942
   106  0000                     _CCPR1H	set	4031
   107  0000                     _PSTR1CON	set	4025
   108  0000                     _PWM1CON	set	4023
   109  0000                     _ECCP1AS	set	4022
   110  0000                     _CCP1CON	set	4029
   111  0000                     _T2CONbits	set	4026
   112  0000                     _T2CON	set	4026
   113  0000                     _TMR2	set	4028
   114  0000                     _PR2	set	4027
   115  0000                     _ADRESH	set	4036
   116  0000                     _ADCON0bits	set	4034
   117  0000                     _PORTBbits	set	3969
   118  0000                     _SSP1STATbits	set	4039
   119  0000                     _SSP1BUF	set	4041
   120  0000                     _SSP1CON2bits	set	4037
   121  0000                     _PIR1bits	set	3998
   122  0000                     _SSP1ADD	set	4040
   123  0000                     _SSP1CON3	set	4043
   124  0000                     _SSP1CON2	set	4037
   125  0000                     _SSP1CON1	set	4038
   126  0000                     _SSP1STAT	set	4039
   127  0000                     _CCPR1L	set	4030
   128  0000                     _PORTAbits	set	3968
   129  0000                     _CCPR2L	set	3943
   130  0000                     _LATCbits	set	3979
   131  0000                     _INTCONbits	set	4082
   132  0000                     _INTCON2bits	set	4081
   133  0000                     _WPUB	set	3937
   134  0000                     _TRISC	set	3988
   135  0000                     _TRISB	set	3987
   136  0000                     _TRISA	set	3986
   137  0000                     _LATC	set	3979
   138  0000                     _LATB	set	3978
   139  0000                     _LATA	set	3977
   140  0000                     _OSCTUNE	set	3995
   141  0000                     _OSCCON2	set	4050
   142  0000                     _OSCCON	set	4051
   143                           
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147  007B1E                     __pcinit:
   148                           	callstack 0
   149  007B1E                     start_initialization:
   150                           	callstack 0
   151  007B1E                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Initialize objects allocated to COMRAM (12 bytes)
   155                           ; load TBLPTR registers with __pidataCOMRAM
   156  007B1E  0EF6               	movlw	low __pidataCOMRAM
   157  007B20  6EF6               	movwf	tblptrl,c
   158  007B22  0E78               	movlw	high __pidataCOMRAM
   159  007B24  6EF7               	movwf	tblptrh,c
   160  007B26  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   161  007B28  6EF8               	movwf	tblptru,c
   162  007B2A  EE00  F001         	lfsr	0,__pdataCOMRAM
   163  007B2E  EE10 F00C          	lfsr	1,12
   164  007B32                     copy_data0:
   165  007B32  0009               	tblrd		*+
   166  007B34  CFF5 FFEE          	movff	tablat,postinc0
   167  007B38  50E5               	movf	postdec1,w,c
   168  007B3A  50E1               	movf	fsr1l,w,c
   169  007B3C  E1FA               	bnz	copy_data0
   170                           
   171                           ; Clear objects allocated to COMRAM (10 bytes)
   172  007B3E  EE00  F00D         	lfsr	0,__pbssCOMRAM
   173  007B42  0E0A               	movlw	10
   174  007B44                     clear_0:
   175  007B44  6AEE               	clrf	postinc0,c
   176  007B46  06E8               	decf	wreg,f,c
   177  007B48  E1FD               	bnz	clear_0
   178  007B4A                     end_of_initialization:
   179                           	callstack 0
   180  007B4A                     __end_of__initialization:
   181                           	callstack 0
   182  007B4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   183  007B4C  6EF8               	movwf	tblptru,c
   184  007B4E  0100               	movlb	0
   185  007B50  EF9C  F03E         	goto	_main	;jump to C main() function
   186                           
   187                           	psect	bssCOMRAM
   188  00000D                     __pbssCOMRAM:
   189                           	callstack 0
   190  00000D                     _ADC_InterruptHandler:
   191                           	callstack 0
   192  00000D                     	ds	2
   193  00000F                     _Lit:
   194                           	callstack 0
   195  00000F                     	ds	2
   196  000011                     _UnLit:
   197                           	callstack 0
   198  000011                     	ds	2
   199  000013                     _intialResult:
   200                           	callstack 0
   201  000013                     	ds	2
   202  000015                     _adcResult:
   203                           	callstack 0
   204  000015                     	ds	2
   205                           
   206                           	psect	dataCOMRAM
   207  000001                     __pdataCOMRAM:
   208                           	callstack 0
   209  000001                     _digits:
   210                           	callstack 0
   211  000001                     	ds	12
   212                           
   213                           	psect	cstackCOMRAM
   214  000017                     __pcstackCOMRAM:
   215                           	callstack 0
   216  000017                     ??_diagnostic:
   217  000017                     ??_leftPosition:
   218  000017                     ??_rightPosition:
   219  000017                     ??_IdleI2C:
   220  000017                     ??_StartI2C:
   221  000017                     motor_fwd@spd:
   222                           	callstack 0
   223  000017                     WriteI2C@data:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x0
   227  000017                     	ds	1
   228  000018                     motor_fwd@STAT:
   229                           	callstack 0
   230  000018                     I2C_send_data@register_address:
   231                           	callstack 0
   232  000018                     rightPosition@i:
   233                           	callstack 0
   234  000018                     leftPosition@i:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x1
   238  000018                     	ds	1
   239  000019                     motor_fwd@dir:
   240                           	callstack 0
   241  000019                     I2C_send_data@register_data:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x2
   245  000019                     	ds	1
   246  00001A                     I2C_send_data@device_address:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x3
   250  00001A                     	ds	1
   251  00001B                     ??_I2C_test:
   252                           
   253                           ; 1 bytes @ 0x4
   254  00001B                     	ds	2
   255  00001D                     I2C_test@i:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x6
   259  00001D                     	ds	2
   260  00001F                     ??_main:
   261                           
   262                           ; 1 bytes @ 0x8
   263  00001F                     	ds	2
   264                           
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 62 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;		None
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   284 ;;      Params:         0       0       0       0       0       0       0
   285 ;;      Locals:         0       0       0       0       0       0       0
   286 ;;      Temps:          2       0       0       0       0       0       0
   287 ;;      Totals:         2       0       0       0       0       0       0
   288 ;;Total ram usage:        2 bytes
   289 ;; Hardware stack levels required when called:    3
   290 ;; This function calls:
   291 ;;		_I2C_Initialise
   292 ;;		_I2C_test
   293 ;;		_IsBumperL
   294 ;;		_IsBumperR
   295 ;;		_IsOptoFarR
   296 ;;		_IsOptoL
   297 ;;		_IsOptoR
   298 ;;		_MCP23008_Initialise
   299 ;;		_SYSTEM_Initialize
   300 ;;		_adcFunction
   301 ;;		_diagnostic
   302 ;;		_leftPosition
   303 ;;		_motor_fwd
   304 ;;		_rightPosition
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	text0
   311  007D38                     __ptext0:
   312                           	callstack 0
   313  007D38                     _main:
   314                           	callstack 28
   315  007D38                     
   316                           ;main.c: 65:     SYSTEM_Initialize();
   317  007D38  ECE2  F03C         	call	_SYSTEM_Initialize	;wreg free
   318                           
   319                           ;main.c: 66:     I2C_Initialise();
   320  007D3C  ECC1  F03C         	call	_I2C_Initialise	;wreg free
   321  007D40                     
   322                           ;main.c: 67:     MCP23008_Initialise();
   323  007D40  EC19  F03E         	call	_MCP23008_Initialise	;wreg free
   324  007D44                     
   325                           ;main.c: 68:     diagnostic();
   326  007D44  EC45  F03E         	call	_diagnostic	;wreg free
   327  007D48                     l1365:
   328                           
   329                           ;main.c: 70:     {;main.c: 73:         motor_fwd('L', 255, 1);
   330  007D48  0EFF               	movlw	255
   331  007D4A  6E17               	movwf	motor_fwd@spd^0,c
   332  007D4C  0E01               	movlw	1
   333  007D4E  6E18               	movwf	motor_fwd@STAT^0,c
   334  007D50  0E4C               	movlw	76
   335  007D52  EC74  F03D         	call	_motor_fwd
   336  007D56                     
   337                           ;main.c: 74:         motor_fwd('R', 250, 1);
   338  007D56  0EFA               	movlw	250
   339  007D58  6E17               	movwf	motor_fwd@spd^0,c
   340  007D5A  0E01               	movlw	1
   341  007D5C  6E18               	movwf	motor_fwd@STAT^0,c
   342  007D5E  0E52               	movlw	82
   343  007D60  EC74  F03D         	call	_motor_fwd
   344  007D64                     
   345                           ;main.c: 76:         adcFunction();
   346  007D64  EC0F  F03D         	call	_adcFunction	;wreg free
   347  007D68                     
   348                           ;main.c: 77:         if (adcResult > 50)
   349  007D68  BE16               	btfsc	(_adcResult+1)^0,7,c
   350  007D6A  EFC0  F03E         	goto	u461
   351  007D6E  5016               	movf	(_adcResult+1)^0,w,c
   352  007D70  E109               	bnz	u460
   353  007D72  0E33               	movlw	51
   354  007D74  5C15               	subwf	_adcResult^0,w,c
   355  007D76  A0D8               	btfss	status,0,c
   356  007D78  EFC0  F03E         	goto	u461
   357  007D7C  EFC2  F03E         	goto	u460
   358  007D80                     u461:
   359  007D80  EFE0  F03E         	goto	l1383
   360  007D84                     u460:
   361  007D84                     
   362                           ;main.c: 78:         {;main.c: 79:             leftPosition();
   363  007D84  ECAA  F03D         	call	_leftPosition	;wreg free
   364  007D88                     
   365                           ;main.c: 81:             if (IsBumperR())
   366  007D88  EC99  F03C         	call	_IsBumperR	;wreg free
   367  007D8C  0900               	iorlw	0
   368  007D8E  B4D8               	btfsc	status,2,c
   369  007D90  EFCC  F03E         	goto	u471
   370  007D94  EFCE  F03E         	goto	u470
   371  007D98                     u471:
   372  007D98  EF08  F03F         	goto	l1395
   373  007D9C                     u470:
   374  007D9C  8A8B               	bsf	139,5,c	;volatile
   375  007D9E                     
   376                           ;main.c: 84:                 UnLit++;
   377  007D9E  4A11               	infsnz	_UnLit^0,f,c
   378  007DA0  2A12               	incf	(_UnLit+1)^0,f,c
   379  007DA2                     
   380                           ;main.c: 85:                 _delay((unsigned long)((5000)*(4000000/4000.0)));
   381  007DA2  0E1A               	movlw	26
   382  007DA4  6E20               	movwf	(??_main+1)^0,c
   383  007DA6  0E5E               	movlw	94
   384  007DA8  6E1F               	movwf	??_main^0,c
   385  007DAA  0E6E               	movlw	110
   386  007DAC                     u587:
   387  007DAC  2EE8               	decfsz	wreg,f,c
   388  007DAE  D7FE               	bra	u587
   389  007DB0  2E1F               	decfsz	??_main^0,f,c
   390  007DB2  D7FC               	bra	u587
   391  007DB4  2E20               	decfsz	(??_main+1)^0,f,c
   392  007DB6  D7FA               	bra	u587
   393  007DB8  D000               	nop2	
   394  007DBA  9A8B               	bcf	139,5,c	;volatile
   395  007DBC  EF08  F03F         	goto	l1395
   396  007DC0                     l1383:
   397                           
   398                           ;main.c: 90:         {;main.c: 91:             rightPosition();
   399  007DC0  ECCD  F03D         	call	_rightPosition	;wreg free
   400  007DC4                     
   401                           ;main.c: 93:             if (IsBumperL())
   402  007DC4  EC8F  F03C         	call	_IsBumperL	;wreg free
   403  007DC8  0900               	iorlw	0
   404  007DCA  B4D8               	btfsc	status,2,c
   405  007DCC  EFEA  F03E         	goto	u481
   406  007DD0  EFEC  F03E         	goto	u480
   407  007DD4                     u481:
   408  007DD4  EFFC  F03E         	goto	l1393
   409  007DD8                     u480:
   410  007DD8  8C8B               	bsf	139,6,c	;volatile
   411  007DDA                     
   412                           ;main.c: 97:                 Lit++;
   413  007DDA  4A0F               	infsnz	_Lit^0,f,c
   414  007DDC  2A10               	incf	(_Lit+1)^0,f,c
   415  007DDE                     
   416                           ;main.c: 98:                 _delay((unsigned long)((5000)*(4000000/4000.0)));
   417  007DDE  0E1A               	movlw	26
   418  007DE0  6E20               	movwf	(??_main+1)^0,c
   419  007DE2  0E5E               	movlw	94
   420  007DE4  6E1F               	movwf	??_main^0,c
   421  007DE6  0E6E               	movlw	110
   422  007DE8                     u597:
   423  007DE8  2EE8               	decfsz	wreg,f,c
   424  007DEA  D7FE               	bra	u597
   425  007DEC  2E1F               	decfsz	??_main^0,f,c
   426  007DEE  D7FC               	bra	u597
   427  007DF0  2E20               	decfsz	(??_main+1)^0,f,c
   428  007DF2  D7FA               	bra	u597
   429  007DF4  D000               	nop2	
   430  007DF6  9C8B               	bcf	139,6,c	;volatile
   431  007DF8                     l1393:
   432                           
   433                           ;main.c: 102:             _delay((unsigned long)((4000)*(4000000/4000.0)));
   434  007DF8  0E15               	movlw	21
   435  007DFA  6E20               	movwf	(??_main+1)^0,c
   436  007DFC  0E4B               	movlw	75
   437  007DFE  6E1F               	movwf	??_main^0,c
   438  007E00  0EBE               	movlw	190
   439  007E02                     u607:
   440  007E02  2EE8               	decfsz	wreg,f,c
   441  007E04  D7FE               	bra	u607
   442  007E06  2E1F               	decfsz	??_main^0,f,c
   443  007E08  D7FC               	bra	u607
   444  007E0A  2E20               	decfsz	(??_main+1)^0,f,c
   445  007E0C  D7FA               	bra	u607
   446  007E0E  D000               	nop2	
   447  007E10                     l1395:
   448                           
   449                           ;main.c: 107:         if (IsOptoR())
   450  007E10  ECB7  F03C         	call	_IsOptoR	;wreg free
   451  007E14  0900               	iorlw	0
   452  007E16  B4D8               	btfsc	status,2,c
   453  007E18  EF10  F03F         	goto	u491
   454  007E1C  EF12  F03F         	goto	u490
   455  007E20                     u491:
   456  007E20  EF6A  F03F         	goto	l1423
   457  007E24                     u490:
   458  007E24                     
   459                           ;main.c: 108:         {;main.c: 109:             motor_fwd('L', 250, 1);
   460  007E24  0EFA               	movlw	250
   461  007E26  6E17               	movwf	motor_fwd@spd^0,c
   462  007E28  0E01               	movlw	1
   463  007E2A  6E18               	movwf	motor_fwd@STAT^0,c
   464  007E2C  0E4C               	movlw	76
   465  007E2E  EC74  F03D         	call	_motor_fwd
   466                           
   467                           ;main.c: 110:             motor_fwd('R', 105, 1);
   468  007E32  0E69               	movlw	105
   469  007E34  6E17               	movwf	motor_fwd@spd^0,c
   470  007E36  0E01               	movlw	1
   471  007E38  6E18               	movwf	motor_fwd@STAT^0,c
   472  007E3A  0E52               	movlw	82
   473  007E3C  EC74  F03D         	call	_motor_fwd
   474  007E40                     
   475                           ;main.c: 111:             adcFunction();
   476  007E40  EC0F  F03D         	call	_adcFunction	;wreg free
   477                           
   478                           ;main.c: 113:             if (adcResult > 50)
   479  007E44  BE16               	btfsc	(_adcResult+1)^0,7,c
   480  007E46  EF2E  F03F         	goto	u501
   481  007E4A  5016               	movf	(_adcResult+1)^0,w,c
   482  007E4C  E109               	bnz	u500
   483  007E4E  0E33               	movlw	51
   484  007E50  5C15               	subwf	_adcResult^0,w,c
   485  007E52  A0D8               	btfss	status,0,c
   486  007E54  EF2E  F03F         	goto	u501
   487  007E58  EF30  F03F         	goto	u500
   488  007E5C                     u501:
   489  007E5C  EF34  F03F         	goto	l1403
   490  007E60                     u500:
   491  007E60                     
   492                           ;main.c: 114:             {;main.c: 115:                 leftPosition();
   493  007E60  ECAA  F03D         	call	_leftPosition	;wreg free
   494                           
   495                           ;main.c: 116:             }
   496  007E64  EF36  F03F         	goto	l1405
   497  007E68                     l1403:
   498                           
   499                           ;main.c: 118:             {;main.c: 119:                 rightPosition();
   500  007E68  ECCD  F03D         	call	_rightPosition	;wreg free
   501  007E6C                     l1405:
   502                           
   503                           ;main.c: 121:             if (IsBumperL())
   504  007E6C  EC8F  F03C         	call	_IsBumperL	;wreg free
   505  007E70  0900               	iorlw	0
   506  007E72  B4D8               	btfsc	status,2,c
   507  007E74  EF3E  F03F         	goto	u511
   508  007E78  EF40  F03F         	goto	u510
   509  007E7C                     u511:
   510  007E7C  EF4F  F03F         	goto	l1413
   511  007E80                     u510:
   512  007E80  8C8B               	bsf	139,6,c	;volatile
   513  007E82                     
   514                           ;main.c: 124:                 UnLit++;
   515  007E82  4A11               	infsnz	_UnLit^0,f,c
   516  007E84  2A12               	incf	(_UnLit+1)^0,f,c
   517  007E86                     
   518                           ;main.c: 125:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
   519  007E86  0E0B               	movlw	11
   520  007E88  6E20               	movwf	(??_main+1)^0,c
   521  007E8A  0E26               	movlw	38
   522  007E8C  6E1F               	movwf	??_main^0,c
   523  007E8E  0E5E               	movlw	94
   524  007E90                     u617:
   525  007E90  2EE8               	decfsz	wreg,f,c
   526  007E92  D7FE               	bra	u617
   527  007E94  2E1F               	decfsz	??_main^0,f,c
   528  007E96  D7FC               	bra	u617
   529  007E98  2E20               	decfsz	(??_main+1)^0,f,c
   530  007E9A  D7FA               	bra	u617
   531  007E9C  9C8B               	bcf	139,6,c	;volatile
   532  007E9E                     l1413:
   533                           
   534                           ;main.c: 129:             if (IsBumperR())
   535  007E9E  EC99  F03C         	call	_IsBumperR	;wreg free
   536  007EA2  0900               	iorlw	0
   537  007EA4  B4D8               	btfsc	status,2,c
   538  007EA6  EF57  F03F         	goto	u521
   539  007EAA  EF59  F03F         	goto	u520
   540  007EAE                     u521:
   541  007EAE  EFA4  F03E         	goto	l1365
   542  007EB2                     u520:
   543  007EB2  8A8B               	bsf	139,5,c	;volatile
   544  007EB4                     
   545                           ;main.c: 133:                 Lit++;
   546  007EB4  4A0F               	infsnz	_Lit^0,f,c
   547  007EB6  2A10               	incf	(_Lit+1)^0,f,c
   548  007EB8                     
   549                           ;main.c: 134:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
   550  007EB8  0E0B               	movlw	11
   551  007EBA  6E20               	movwf	(??_main+1)^0,c
   552  007EBC  0E26               	movlw	38
   553  007EBE  6E1F               	movwf	??_main^0,c
   554  007EC0  0E5E               	movlw	94
   555  007EC2                     u627:
   556  007EC2  2EE8               	decfsz	wreg,f,c
   557  007EC4  D7FE               	bra	u627
   558  007EC6  2E1F               	decfsz	??_main^0,f,c
   559  007EC8  D7FC               	bra	u627
   560  007ECA  2E20               	decfsz	(??_main+1)^0,f,c
   561  007ECC  D7FA               	bra	u627
   562  007ECE  9A8B               	bcf	139,5,c	;volatile
   563  007ED0  EFA4  F03E         	goto	l1365
   564  007ED4                     l1423:
   565  007ED4  ECAD  F03C         	call	_IsOptoL	;wreg free
   566  007ED8  0900               	iorlw	0
   567  007EDA  B4D8               	btfsc	status,2,c
   568  007EDC  EF72  F03F         	goto	u531
   569  007EE0  EF74  F03F         	goto	u530
   570  007EE4                     u531:
   571  007EE4  EFCC  F03F         	goto	l1451
   572  007EE8                     u530:
   573  007EE8                     
   574                           ;main.c: 141:         {;main.c: 142:             motor_fwd('L', 105, 1);
   575  007EE8  0E69               	movlw	105
   576  007EEA  6E17               	movwf	motor_fwd@spd^0,c
   577  007EEC  0E01               	movlw	1
   578  007EEE  6E18               	movwf	motor_fwd@STAT^0,c
   579  007EF0  0E4C               	movlw	76
   580  007EF2  EC74  F03D         	call	_motor_fwd
   581                           
   582                           ;main.c: 143:             motor_fwd('R', 250, 1);
   583  007EF6  0EFA               	movlw	250
   584  007EF8  6E17               	movwf	motor_fwd@spd^0,c
   585  007EFA  0E01               	movlw	1
   586  007EFC  6E18               	movwf	motor_fwd@STAT^0,c
   587  007EFE  0E52               	movlw	82
   588  007F00  EC74  F03D         	call	_motor_fwd
   589  007F04                     
   590                           ;main.c: 144:             adcFunction();
   591  007F04  EC0F  F03D         	call	_adcFunction	;wreg free
   592                           
   593                           ;main.c: 145:             if (adcResult > 50)
   594  007F08  BE16               	btfsc	(_adcResult+1)^0,7,c
   595  007F0A  EF90  F03F         	goto	u541
   596  007F0E  5016               	movf	(_adcResult+1)^0,w,c
   597  007F10  E109               	bnz	u540
   598  007F12  0E33               	movlw	51
   599  007F14  5C15               	subwf	_adcResult^0,w,c
   600  007F16  A0D8               	btfss	status,0,c
   601  007F18  EF90  F03F         	goto	u541
   602  007F1C  EF92  F03F         	goto	u540
   603  007F20                     u541:
   604  007F20  EF96  F03F         	goto	l1431
   605  007F24                     u540:
   606  007F24                     
   607                           ;main.c: 146:             {;main.c: 147:                 leftPosition();
   608  007F24  ECAA  F03D         	call	_leftPosition	;wreg free
   609                           
   610                           ;main.c: 148:             }
   611  007F28  EF98  F03F         	goto	l1433
   612  007F2C                     l1431:
   613                           
   614                           ;main.c: 150:             {;main.c: 151:                 rightPosition();
   615  007F2C  ECCD  F03D         	call	_rightPosition	;wreg free
   616  007F30                     l1433:
   617                           
   618                           ;main.c: 153:             if (IsBumperL())
   619  007F30  EC8F  F03C         	call	_IsBumperL	;wreg free
   620  007F34  0900               	iorlw	0
   621  007F36  B4D8               	btfsc	status,2,c
   622  007F38  EFA0  F03F         	goto	u551
   623  007F3C  EFA2  F03F         	goto	u550
   624  007F40                     u551:
   625  007F40  EFB1  F03F         	goto	l1441
   626  007F44                     u550:
   627  007F44  8C8B               	bsf	139,6,c	;volatile
   628  007F46                     
   629                           ;main.c: 156:                 UnLit++;
   630  007F46  4A11               	infsnz	_UnLit^0,f,c
   631  007F48  2A12               	incf	(_UnLit+1)^0,f,c
   632  007F4A                     
   633                           ;main.c: 157:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
   634  007F4A  0E0B               	movlw	11
   635  007F4C  6E20               	movwf	(??_main+1)^0,c
   636  007F4E  0E26               	movlw	38
   637  007F50  6E1F               	movwf	??_main^0,c
   638  007F52  0E5E               	movlw	94
   639  007F54                     u637:
   640  007F54  2EE8               	decfsz	wreg,f,c
   641  007F56  D7FE               	bra	u637
   642  007F58  2E1F               	decfsz	??_main^0,f,c
   643  007F5A  D7FC               	bra	u637
   644  007F5C  2E20               	decfsz	(??_main+1)^0,f,c
   645  007F5E  D7FA               	bra	u637
   646  007F60  9C8B               	bcf	139,6,c	;volatile
   647  007F62                     l1441:
   648                           
   649                           ;main.c: 161:             if (IsBumperR())
   650  007F62  EC99  F03C         	call	_IsBumperR	;wreg free
   651  007F66  0900               	iorlw	0
   652  007F68  B4D8               	btfsc	status,2,c
   653  007F6A  EFB9  F03F         	goto	u561
   654  007F6E  EFBB  F03F         	goto	u560
   655  007F72                     u561:
   656  007F72  EFA4  F03E         	goto	l1365
   657  007F76                     u560:
   658  007F76  8A8B               	bsf	139,5,c	;volatile
   659  007F78                     
   660                           ;main.c: 165:                 Lit++;
   661  007F78  4A0F               	infsnz	_Lit^0,f,c
   662  007F7A  2A10               	incf	(_Lit+1)^0,f,c
   663  007F7C                     
   664                           ;main.c: 166:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
   665  007F7C  0E0B               	movlw	11
   666  007F7E  6E20               	movwf	(??_main+1)^0,c
   667  007F80  0E26               	movlw	38
   668  007F82  6E1F               	movwf	??_main^0,c
   669  007F84  0E5E               	movlw	94
   670  007F86                     u647:
   671  007F86  2EE8               	decfsz	wreg,f,c
   672  007F88  D7FE               	bra	u647
   673  007F8A  2E1F               	decfsz	??_main^0,f,c
   674  007F8C  D7FC               	bra	u647
   675  007F8E  2E20               	decfsz	(??_main+1)^0,f,c
   676  007F90  D7FA               	bra	u647
   677  007F92  9A8B               	bcf	139,5,c	;volatile
   678  007F94  EFA4  F03E         	goto	l1365
   679  007F98                     l1451:
   680  007F98  ECA3  F03C         	call	_IsOptoFarR	;wreg free
   681  007F9C  0900               	iorlw	0
   682  007F9E  B4D8               	btfsc	status,2,c
   683  007FA0  EFD4  F03F         	goto	u571
   684  007FA4  EFD6  F03F         	goto	u570
   685  007FA8                     u571:
   686  007FA8  EFA4  F03E         	goto	l1365
   687  007FAC                     u570:
   688  007FAC                     
   689                           ;main.c: 174:         {;main.c: 175:             _delay((unsigned long)((450)*(4000000/4
      +                          000.0)));
   690  007FAC  0E03               	movlw	3
   691  007FAE  6E20               	movwf	(??_main+1)^0,c
   692  007FB0  0E49               	movlw	73
   693  007FB2  6E1F               	movwf	??_main^0,c
   694  007FB4  0E66               	movlw	102
   695  007FB6                     u657:
   696  007FB6  2EE8               	decfsz	wreg,f,c
   697  007FB8  D7FE               	bra	u657
   698  007FBA  2E1F               	decfsz	??_main^0,f,c
   699  007FBC  D7FC               	bra	u657
   700  007FBE  2E20               	decfsz	(??_main+1)^0,f,c
   701  007FC0  D7FA               	bra	u657
   702  007FC2  D000               	nop2	
   703  007FC4                     
   704                           ;main.c: 176:             motor_fwd('L', 255, 0);
   705  007FC4  0EFF               	movlw	255
   706  007FC6  6E17               	movwf	motor_fwd@spd^0,c
   707  007FC8  0E00               	movlw	0
   708  007FCA  6E18               	movwf	motor_fwd@STAT^0,c
   709  007FCC  0E4C               	movlw	76
   710  007FCE  EC74  F03D         	call	_motor_fwd
   711  007FD2                     
   712                           ;main.c: 177:             motor_fwd('R', 255, 0);
   713  007FD2  0EFF               	movlw	255
   714  007FD4  6E17               	movwf	motor_fwd@spd^0,c
   715  007FD6  0E00               	movlw	0
   716  007FD8  6E18               	movwf	motor_fwd@STAT^0,c
   717  007FDA  0E52               	movlw	82
   718  007FDC  EC74  F03D         	call	_motor_fwd
   719  007FE0                     
   720                           ;main.c: 178:             I2C_test();
   721  007FE0  ECF1  F03D         	call	_I2C_test	;wreg free
   722  007FE4                     
   723                           ;main.c: 179:             _delay((unsigned long)((20000)*(4000000/4000.0)));
   724  007FE4  0E66               	movlw	102
   725  007FE6  6E20               	movwf	(??_main+1)^0,c
   726  007FE8  0E76               	movlw	118
   727  007FEA  6E1F               	movwf	??_main^0,c
   728  007FEC  0EC1               	movlw	193
   729  007FEE                     u667:
   730  007FEE  2EE8               	decfsz	wreg,f,c
   731  007FF0  D7FE               	bra	u667
   732  007FF2  2E1F               	decfsz	??_main^0,f,c
   733  007FF4  D7FC               	bra	u667
   734  007FF6  2E20               	decfsz	(??_main+1)^0,f,c
   735  007FF8  D7FA               	bra	u667
   736  007FFA  F000               	nop	
   737  007FFC  EF00  F000         	goto	start
   738  008000                     __end_of_main:
   739                           	callstack 0
   740                           
   741 ;; *************** function _rightPosition *****************
   742 ;; Defined at:
   743 ;;		line 282 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  i               2    1[COMRAM] unsigned int 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   757 ;;      Params:         0       0       0       0       0       0       0
   758 ;;      Locals:         2       0       0       0       0       0       0
   759 ;;      Temps:          1       0       0       0       0       0       0
   760 ;;      Totals:         3       0       0       0       0       0       0
   761 ;;Total ram usage:        3 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           	psect	text1
   771  007B9A                     __ptext1:
   772                           	callstack 0
   773  007B9A                     _rightPosition:
   774                           	callstack 30
   775  007B9A                     
   776                           ;main.c: 284:     unsigned int i;;main.c: 285:     for (i = 0; i < 50; i++)
   777  007B9A  0E00               	movlw	0
   778  007B9C  6E19               	movwf	(rightPosition@i+1)^0,c
   779  007B9E  0E00               	movlw	0
   780  007BA0  6E18               	movwf	rightPosition@i^0,c
   781  007BA2                     l239:
   782                           
   783                           ;main.c: 286:     {;main.c: 287:         PORTBbits.RB3 = 1;
   784  007BA2  8681               	bsf	129,3,c	;volatile
   785  007BA4                     
   786                           ;main.c: 288:         _delay((unsigned long)((1800)*(4000000/4000000.0)));
   787  007BA4  0E03               	movlw	3
   788  007BA6  6E17               	movwf	??_rightPosition^0,c
   789  007BA8  0E55               	movlw	85
   790  007BAA                     u677:
   791  007BAA  2EE8               	decfsz	wreg,f,c
   792  007BAC  D7FE               	bra	u677
   793  007BAE  2E17               	decfsz	??_rightPosition^0,f,c
   794  007BB0  D7FC               	bra	u677
   795  007BB2  F000               	nop	
   796  007BB4                     
   797                           ;main.c: 289:         PORTBbits.RB3 = 0;
   798  007BB4  9681               	bcf	129,3,c	;volatile
   799                           
   800                           ;main.c: 290:         _delay((unsigned long)((19200)*(4000000/4000000.0)));
   801  007BB6  0E19               	movlw	25
   802  007BB8  6E17               	movwf	??_rightPosition^0,c
   803  007BBA  0EEE               	movlw	238
   804  007BBC                     u687:
   805  007BBC  2EE8               	decfsz	wreg,f,c
   806  007BBE  D7FE               	bra	u687
   807  007BC0  2E17               	decfsz	??_rightPosition^0,f,c
   808  007BC2  D7FC               	bra	u687
   809  007BC4  D000               	nop2	
   810  007BC6                     
   811                           ;main.c: 291:     }
   812  007BC6  4A18               	infsnz	rightPosition@i^0,f,c
   813  007BC8  2A19               	incf	(rightPosition@i+1)^0,f,c
   814  007BCA  5019               	movf	(rightPosition@i+1)^0,w,c
   815  007BCC  E109               	bnz	u170
   816  007BCE  0E32               	movlw	50
   817  007BD0  5C18               	subwf	rightPosition@i^0,w,c
   818  007BD2  A0D8               	btfss	status,0,c
   819  007BD4  EFEE  F03D         	goto	u171
   820  007BD8  EFF0  F03D         	goto	u170
   821  007BDC                     u171:
   822  007BDC  EFD1  F03D         	goto	l239
   823  007BE0                     u170:
   824  007BE0  0012               	return		;funcret
   825  007BE2                     __end_of_rightPosition:
   826                           	callstack 0
   827                           
   828 ;; *************** function _motor_fwd *****************
   829 ;; Defined at:
   830 ;;		line 196 in file "main.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  dir             1    wreg     unsigned char 
   833 ;;  spd             1    0[COMRAM] unsigned char 
   834 ;;  STAT            1    1[COMRAM] _Bool 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  dir             1    2[COMRAM] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   846 ;;      Params:         2       0       0       0       0       0       0
   847 ;;      Locals:         1       0       0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0
   849 ;;      Totals:         3       0       0       0       0       0       0
   850 ;;Total ram usage:        3 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_main
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text2
   860  007AE8                     __ptext2:
   861                           	callstack 0
   862  007AE8                     _motor_fwd:
   863                           	callstack 30
   864                           
   865                           ;incstack = 0
   866                           ;motor_fwd@dir stored from wreg
   867  007AE8  6E19               	movwf	motor_fwd@dir^0,c
   868  007AEA                     
   869                           ;main.c: 196: void motor_fwd(unsigned char dir, unsigned char spd, _Bool STAT);main.c: 1
      +                          97: {;main.c: 198:     if (dir == 'L')
   870  007AEA  0E4C               	movlw	76
   871  007AEC  1819               	xorwf	motor_fwd@dir^0,w,c
   872  007AEE  A4D8               	btfss	status,2,c
   873  007AF0  EF7C  F03D         	goto	u421
   874  007AF4  EF7E  F03D         	goto	u420
   875  007AF8                     u421:
   876  007AF8  EF87  F03D         	goto	l199
   877  007AFC                     u420:
   878  007AFC                     
   879                           ;main.c: 199:     {;main.c: 200:         CCPR2L = spd;
   880  007AFC  C017  FF67         	movff	motor_fwd@spd,3943	;volatile
   881                           
   882                           ;main.c: 201:         PORTAbits.RA5 = STAT;
   883  007B00  B018               	btfsc	motor_fwd@STAT^0,0,c
   884  007B02  D002               	bra	u435
   885  007B04  9A80               	bcf	128,5,c	;volatile
   886  007B06  D001               	bra	u436
   887  007B08                     u435:
   888  007B08  8A80               	bsf	128,5,c	;volatile
   889  007B0A                     u436:
   890                           
   891                           ;main.c: 202:     }
   892  007B0A  EF8E  F03D         	goto	l201
   893  007B0E                     l199:
   894                           
   895                           ;main.c: 204:     {;main.c: 205:         CCPR1L = spd;
   896  007B0E  C017  FFBE         	movff	motor_fwd@spd,4030	;volatile
   897                           
   898                           ;main.c: 206:         PORTAbits.RA2 = STAT;
   899  007B12  B018               	btfsc	motor_fwd@STAT^0,0,c
   900  007B14  D002               	bra	u445
   901  007B16  9480               	bcf	128,2,c	;volatile
   902  007B18  D001               	bra	u446
   903  007B1A                     u445:
   904  007B1A  8480               	bsf	128,2,c	;volatile
   905  007B1C                     u446:
   906  007B1C                     l201:
   907  007B1C  0012               	return		;funcret
   908  007B1E                     __end_of_motor_fwd:
   909                           	callstack 0
   910                           
   911 ;; *************** function _leftPosition *****************
   912 ;; Defined at:
   913 ;;		line 295 in file "main.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  i               2    1[COMRAM] unsigned int 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   927 ;;      Params:         0       0       0       0       0       0       0
   928 ;;      Locals:         2       0       0       0       0       0       0
   929 ;;      Temps:          1       0       0       0       0       0       0
   930 ;;      Totals:         3       0       0       0       0       0       0
   931 ;;Total ram usage:        3 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text3
   941  007B54                     __ptext3:
   942                           	callstack 0
   943  007B54                     _leftPosition:
   944                           	callstack 30
   945  007B54                     
   946                           ;main.c: 297:     unsigned int i;;main.c: 298:     for (i = 0; i < 50; i++)
   947  007B54  0E00               	movlw	0
   948  007B56  6E19               	movwf	(leftPosition@i+1)^0,c
   949  007B58  0E00               	movlw	0
   950  007B5A  6E18               	movwf	leftPosition@i^0,c
   951  007B5C                     l244:
   952                           
   953                           ;main.c: 299:     {;main.c: 300:         PORTBbits.RB3 = 1;
   954  007B5C  8681               	bsf	129,3,c	;volatile
   955  007B5E                     
   956                           ;main.c: 301:         _delay((unsigned long)((2150)*(4000000/4000000.0)));
   957  007B5E  0E03               	movlw	3
   958  007B60  6E17               	movwf	??_leftPosition^0,c
   959  007B62  0ECA               	movlw	202
   960  007B64                     u697:
   961  007B64  2EE8               	decfsz	wreg,f,c
   962  007B66  D7FE               	bra	u697
   963  007B68  2E17               	decfsz	??_leftPosition^0,f,c
   964  007B6A  D7FC               	bra	u697
   965  007B6C                     
   966                           ;main.c: 302:         PORTBbits.RB3 = 0;
   967  007B6C  9681               	bcf	129,3,c	;volatile
   968                           
   969                           ;main.c: 303:         _delay((unsigned long)((19200)*(4000000/4000000.0)));
   970  007B6E  0E19               	movlw	25
   971  007B70  6E17               	movwf	??_leftPosition^0,c
   972  007B72  0EEE               	movlw	238
   973  007B74                     u707:
   974  007B74  2EE8               	decfsz	wreg,f,c
   975  007B76  D7FE               	bra	u707
   976  007B78  2E17               	decfsz	??_leftPosition^0,f,c
   977  007B7A  D7FC               	bra	u707
   978  007B7C  D000               	nop2	
   979  007B7E                     
   980                           ;main.c: 305:     }
   981  007B7E  4A18               	infsnz	leftPosition@i^0,f,c
   982  007B80  2A19               	incf	(leftPosition@i+1)^0,f,c
   983  007B82  5019               	movf	(leftPosition@i+1)^0,w,c
   984  007B84  E109               	bnz	u140
   985  007B86  0E32               	movlw	50
   986  007B88  5C18               	subwf	leftPosition@i^0,w,c
   987  007B8A  A0D8               	btfss	status,0,c
   988  007B8C  EFCA  F03D         	goto	u141
   989  007B90  EFCC  F03D         	goto	u140
   990  007B94                     u141:
   991  007B94  EFAE  F03D         	goto	l244
   992  007B98                     u140:
   993  007B98  0012               	return		;funcret
   994  007B9A                     __end_of_leftPosition:
   995                           	callstack 0
   996                           
   997 ;; *************** function _diagnostic *****************
   998 ;; Defined at:
   999 ;;		line 187 in file "main.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1013 ;;      Params:         0       0       0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0
  1015 ;;      Temps:          2       0       0       0       0       0       0
  1016 ;;      Totals:         2       0       0       0       0       0       0
  1017 ;;Total ram usage:        2 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text4
  1027  007C8A                     __ptext4:
  1028                           	callstack 0
  1029  007C8A                     _diagnostic:
  1030                           	callstack 30
  1031  007C8A  BA8B               	btfsc	139,5,c	;volatile
  1032  007C8C  EF4A  F03E         	goto	u61
  1033  007C90  EF4D  F03E         	goto	u60
  1034  007C94                     u61:
  1035  007C94  0E01               	movlw	1
  1036  007C96  EF4E  F03E         	goto	u66
  1037  007C9A                     u60:
  1038  007C9A  0E00               	movlw	0
  1039  007C9C                     u66:
  1040  007C9C  0AFF               	xorlw	255
  1041  007C9E  6E17               	movwf	??_diagnostic^0,c
  1042  007CA0  3A17               	swapf	??_diagnostic^0,f,c
  1043  007CA2  4617               	rlncf	??_diagnostic^0,f,c
  1044  007CA4  508B               	movf	139,w,c	;volatile
  1045  007CA6  1817               	xorwf	??_diagnostic^0,w,c
  1046  007CA8  0BDF               	andlw	-33
  1047  007CAA  1817               	xorwf	??_diagnostic^0,w,c
  1048  007CAC  6E8B               	movwf	139,c	;volatile
  1049  007CAE  BC8B               	btfsc	139,6,c	;volatile
  1050  007CB0  EF5C  F03E         	goto	u71
  1051  007CB4  EF5F  F03E         	goto	u70
  1052  007CB8                     u71:
  1053  007CB8  0E01               	movlw	1
  1054  007CBA  EF60  F03E         	goto	u76
  1055  007CBE                     u70:
  1056  007CBE  0E00               	movlw	0
  1057  007CC0                     u76:
  1058  007CC0  0AFF               	xorlw	255
  1059  007CC2  6E17               	movwf	??_diagnostic^0,c
  1060  007CC4  3A17               	swapf	??_diagnostic^0,f,c
  1061  007CC6  4617               	rlncf	??_diagnostic^0,f,c
  1062  007CC8  4617               	rlncf	??_diagnostic^0,f,c
  1063  007CCA  508B               	movf	139,w,c	;volatile
  1064  007CCC  1817               	xorwf	??_diagnostic^0,w,c
  1065  007CCE  0BBF               	andlw	-65
  1066  007CD0  1817               	xorwf	??_diagnostic^0,w,c
  1067  007CD2  6E8B               	movwf	139,c	;volatile
  1068  007CD4                     
  1069                           ;main.c: 191:     _delay((unsigned long)((300)*(4000000/4000.0)));
  1070  007CD4  0E02               	movlw	2
  1071  007CD6  6E18               	movwf	(??_diagnostic+1)^0,c
  1072  007CD8  0E86               	movlw	134
  1073  007CDA  6E17               	movwf	??_diagnostic^0,c
  1074  007CDC  0E99               	movlw	153
  1075  007CDE                     u717:
  1076  007CDE  2EE8               	decfsz	wreg,f,c
  1077  007CE0  D7FE               	bra	u717
  1078  007CE2  2E17               	decfsz	??_diagnostic^0,f,c
  1079  007CE4  D7FC               	bra	u717
  1080  007CE6  2E18               	decfsz	(??_diagnostic+1)^0,f,c
  1081  007CE8  D7FA               	bra	u717
  1082  007CEA  F000               	nop	
  1083  007CEC  BA8B               	btfsc	139,5,c	;volatile
  1084  007CEE  EF7B  F03E         	goto	u81
  1085  007CF2  EF7E  F03E         	goto	u80
  1086  007CF6                     u81:
  1087  007CF6  0E01               	movlw	1
  1088  007CF8  EF7F  F03E         	goto	u86
  1089  007CFC                     u80:
  1090  007CFC  0E00               	movlw	0
  1091  007CFE                     u86:
  1092  007CFE  0AFF               	xorlw	255
  1093  007D00  6E17               	movwf	??_diagnostic^0,c
  1094  007D02  3A17               	swapf	??_diagnostic^0,f,c
  1095  007D04  4617               	rlncf	??_diagnostic^0,f,c
  1096  007D06  508B               	movf	139,w,c	;volatile
  1097  007D08  1817               	xorwf	??_diagnostic^0,w,c
  1098  007D0A  0BDF               	andlw	-33
  1099  007D0C  1817               	xorwf	??_diagnostic^0,w,c
  1100  007D0E  6E8B               	movwf	139,c	;volatile
  1101  007D10  BC8B               	btfsc	139,6,c	;volatile
  1102  007D12  EF8D  F03E         	goto	u91
  1103  007D16  EF90  F03E         	goto	u90
  1104  007D1A                     u91:
  1105  007D1A  0E01               	movlw	1
  1106  007D1C  EF91  F03E         	goto	u96
  1107  007D20                     u90:
  1108  007D20  0E00               	movlw	0
  1109  007D22                     u96:
  1110  007D22  0AFF               	xorlw	255
  1111  007D24  6E17               	movwf	??_diagnostic^0,c
  1112  007D26  3A17               	swapf	??_diagnostic^0,f,c
  1113  007D28  4617               	rlncf	??_diagnostic^0,f,c
  1114  007D2A  4617               	rlncf	??_diagnostic^0,f,c
  1115  007D2C  508B               	movf	139,w,c	;volatile
  1116  007D2E  1817               	xorwf	??_diagnostic^0,w,c
  1117  007D30  0BBF               	andlw	-65
  1118  007D32  1817               	xorwf	??_diagnostic^0,w,c
  1119  007D34  6E8B               	movwf	139,c	;volatile
  1120  007D36  0012               	return		;funcret
  1121  007D38                     __end_of_diagnostic:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _adcFunction *****************
  1125 ;; Defined at:
  1126 ;;		line 310 in file "main.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		None
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1140 ;;      Params:         0       0       0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0
  1143 ;;      Totals:         0       0       0       0       0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text5
  1154  007A1E                     __ptext5:
  1155                           	callstack 0
  1156  007A1E                     _adcFunction:
  1157                           	callstack 30
  1158  007A1E                     
  1159                           ;main.c: 312:     _delay((unsigned long)((7)*(4000000/4000000.0)));
  1160  007A1E  D000               	nop2		;2 cycle nop
  1161  007A20  D000               	nop2		;2 cycle nop
  1162  007A22  D000               	nop2		;2 cycle nop
  1163  007A24  F000               	nop	
  1164                           
  1165                           ;main.c: 313:     ADCON0bits.GO = 1;
  1166  007A26  82C2               	bsf	194,1,c	;volatile
  1167  007A28                     l249:
  1168                           
  1169                           ;main.c: 314:     while (ADCON0bits.GO == 1)
  1170  007A28  B2C2               	btfsc	194,1,c	;volatile
  1171  007A2A  EF19  F03D         	goto	u131
  1172  007A2E  EF1B  F03D         	goto	u130
  1173  007A32                     u131:
  1174  007A32  EF14  F03D         	goto	l249
  1175  007A36                     u130:
  1176  007A36                     
  1177                           ;main.c: 319:     adcResult = ADRESH;
  1178  007A36  CFC4 F015          	movff	4036,_adcResult	;volatile
  1179  007A3A  6A16               	clrf	(_adcResult+1)^0,c
  1180  007A3C  0012               	return		;funcret
  1181  007A3E                     __end_of_adcFunction:
  1182                           	callstack 0
  1183                           
  1184 ;; *************** function _SYSTEM_Initialize *****************
  1185 ;; Defined at:
  1186 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1200 ;;      Params:         0       0       0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0
  1203 ;;      Totals:         0       0       0       0       0       0       0
  1204 ;;Total ram usage:        0 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    1
  1207 ;; This function calls:
  1208 ;;		_ADC_Initialize
  1209 ;;		_EPWM1_Initialize
  1210 ;;		_EPWM2_Initialize
  1211 ;;		_OSCILLATOR_Initialize
  1212 ;;		_PIN_MANAGER_Initialize
  1213 ;;		_TMR2_Initialize
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text6
  1220  0079C4                     __ptext6:
  1221                           	callstack 0
  1222  0079C4                     _SYSTEM_Initialize:
  1223                           	callstack 29
  1224  0079C4                     
  1225                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  1226  0079C4  EC5D  F03D         	call	_PIN_MANAGER_Initialize	;wreg free
  1227                           
  1228                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  1229  0079C8  EC81  F03C         	call	_OSCILLATOR_Initialize	;wreg free
  1230                           
  1231                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
  1232  0079CC  ECEF  F03C         	call	_EPWM1_Initialize	;wreg free
  1233                           
  1234                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  1235  0079D0  EC88  F03C         	call	_TMR2_Initialize	;wreg free
  1236                           
  1237                           ;mcc_generated_files/mcc.c: 57:     EPWM2_Initialize();
  1238  0079D4  ECFF  F03C         	call	_EPWM2_Initialize	;wreg free
  1239                           
  1240                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  1241  0079D8  ECD7  F03C         	call	_ADC_Initialize	;wreg free
  1242  0079DC  0012               	return		;funcret
  1243  0079DE                     __end_of_SYSTEM_Initialize:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function _TMR2_Initialize *****************
  1247 ;; Defined at:
  1248 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1262 ;;      Params:         0       0       0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0
  1265 ;;      Totals:         0       0       0       0       0       0       0
  1266 ;;Total ram usage:        0 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_SYSTEM_Initialize
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text7
  1276  007910                     __ptext7:
  1277                           	callstack 0
  1278  007910                     _TMR2_Initialize:
  1279                           	callstack 29
  1280  007910                     
  1281                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  1282  007910  68BB               	setf	187,c	;volatile
  1283  007912                     
  1284                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  1285  007912  0E00               	movlw	0
  1286  007914  6EBC               	movwf	188,c	;volatile
  1287  007916                     
  1288                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  1289  007916  929E               	bcf	158,1,c	;volatile
  1290                           
  1291                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  1292  007918  0E04               	movlw	4
  1293  00791A  6EBA               	movwf	186,c	;volatile
  1294  00791C  0012               	return		;funcret
  1295  00791E                     __end_of_TMR2_Initialize:
  1296                           	callstack 0
  1297                           
  1298 ;; *************** function _PIN_MANAGER_Initialize *****************
  1299 ;; Defined at:
  1300 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1314 ;;      Params:         0       0       0       0       0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0
  1317 ;;      Totals:         0       0       0       0       0       0       0
  1318 ;;Total ram usage:        0 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_SYSTEM_Initialize
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text8
  1328  007ABA                     __ptext8:
  1329                           	callstack 0
  1330  007ABA                     _PIN_MANAGER_Initialize:
  1331                           	callstack 29
  1332  007ABA                     
  1333                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  1334  007ABA  0E00               	movlw	0
  1335  007ABC  6E89               	movwf	137,c	;volatile
  1336                           
  1337                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  1338  007ABE  0E00               	movlw	0
  1339  007AC0  6E8A               	movwf	138,c	;volatile
  1340                           
  1341                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  1342  007AC2  0E00               	movlw	0
  1343  007AC4  6E8B               	movwf	139,c	;volatile
  1344                           
  1345                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xDB;
  1346  007AC6  0EDB               	movlw	219
  1347  007AC8  6E92               	movwf	146,c	;volatile
  1348                           
  1349                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  1350  007ACA  0EF0               	movlw	240
  1351  007ACC  6E93               	movwf	147,c	;volatile
  1352                           
  1353                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x99;
  1354  007ACE  0E99               	movlw	153
  1355  007AD0  6E94               	movwf	148,c	;volatile
  1356                           
  1357                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x98;
  1358  007AD2  0E98               	movlw	152
  1359  007AD4  010F               	movlb	15	; () banked
  1360  007AD6  6F3A               	movwf	58,b	;volatile
  1361                           
  1362                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  1363  007AD8  0E00               	movlw	0
  1364  007ADA  6F39               	movwf	57,b	;volatile
  1365                           
  1366                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0B;
  1367  007ADC  0E0B               	movlw	11
  1368  007ADE  6F38               	movwf	56,b	;volatile
  1369                           
  1370                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  1371  007AE0  0E00               	movlw	0
  1372  007AE2  6E61               	movwf	97,c	;volatile
  1373  007AE4                     
  1374                           ; BSR set to: 15
  1375                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  1376  007AE4  8EF1               	bsf	241,7,c	;volatile
  1377  007AE6                     
  1378                           ; BSR set to: 15
  1379  007AE6  0012               	return		;funcret
  1380  007AE8                     __end_of_PIN_MANAGER_Initialize:
  1381                           	callstack 0
  1382                           
  1383 ;; *************** function _OSCILLATOR_Initialize *****************
  1384 ;; Defined at:
  1385 ;;		line 61 in file "mcc_generated_files/mcc.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1399 ;;      Params:         0       0       0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_SYSTEM_Initialize
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text9
  1413  007902                     __ptext9:
  1414                           	callstack 0
  1415  007902                     _OSCILLATOR_Initialize:
  1416                           	callstack 29
  1417  007902                     
  1418                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
  1419  007902  0E30               	movlw	48
  1420  007904  6ED3               	movwf	211,c	;volatile
  1421                           
  1422                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  1423  007906  0E04               	movlw	4
  1424  007908  6ED2               	movwf	210,c	;volatile
  1425                           
  1426                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  1427  00790A  0E00               	movlw	0
  1428  00790C  6E9B               	movwf	155,c	;volatile
  1429  00790E  0012               	return		;funcret
  1430  007910                     __end_of_OSCILLATOR_Initialize:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _EPWM2_Initialize *****************
  1434 ;; Defined at:
  1435 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1449 ;;      Params:         0       0       0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0
  1452 ;;      Totals:         0       0       0       0       0       0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_SYSTEM_Initialize
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text10
  1463  0079FE                     __ptext10:
  1464                           	callstack 0
  1465  0079FE                     _EPWM2_Initialize:
  1466                           	callstack 29
  1467  0079FE                     
  1468                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  1469  0079FE  0E3C               	movlw	60
  1470  007A00  6E66               	movwf	102,c	;volatile
  1471                           
  1472                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  1473  007A02  0E00               	movlw	0
  1474  007A04  6E64               	movwf	100,c	;volatile
  1475                           
  1476                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  1477  007A06  0E80               	movlw	128
  1478  007A08  6E65               	movwf	101,c	;volatile
  1479                           
  1480                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  1481  007A0A  0E01               	movlw	1
  1482  007A0C  6E63               	movwf	99,c	;volatile
  1483                           
  1484                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  1485  007A0E  0E00               	movlw	0
  1486  007A10  6E68               	movwf	104,c	;volatile
  1487                           
  1488                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x7F;
  1489  007A12  0E7F               	movlw	127
  1490  007A14  6E67               	movwf	103,c	;volatile
  1491                           
  1492                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  1493  007A16  0EE7               	movlw	-25
  1494  007A18  010F               	movlb	15	; () banked
  1495  007A1A  1749               	andwf	73,f,b	;volatile
  1496  007A1C                     
  1497                           ; BSR set to: 15
  1498  007A1C  0012               	return		;funcret
  1499  007A1E                     __end_of_EPWM2_Initialize:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function _EPWM1_Initialize *****************
  1503 ;; Defined at:
  1504 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1518 ;;      Params:         0       0       0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_SYSTEM_Initialize
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text11
  1532  0079DE                     __ptext11:
  1533                           	callstack 0
  1534  0079DE                     _EPWM1_Initialize:
  1535                           	callstack 29
  1536  0079DE                     
  1537                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  1538  0079DE  0E3C               	movlw	60
  1539  0079E0  6EBD               	movwf	189,c	;volatile
  1540                           
  1541                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  1542  0079E2  0E00               	movlw	0
  1543  0079E4  6EB6               	movwf	182,c	;volatile
  1544                           
  1545                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  1546  0079E6  0E80               	movlw	128
  1547  0079E8  6EB7               	movwf	183,c	;volatile
  1548                           
  1549                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  1550  0079EA  0E01               	movlw	1
  1551  0079EC  6EB9               	movwf	185,c	;volatile
  1552                           
  1553                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  1554  0079EE  0E00               	movlw	0
  1555  0079F0  6EBF               	movwf	191,c	;volatile
  1556                           
  1557                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  1558  0079F2  0E7F               	movlw	127
  1559  0079F4  6EBE               	movwf	190,c	;volatile
  1560                           
  1561                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  1562  0079F6  0EFC               	movlw	-4
  1563  0079F8  010F               	movlb	15	; () banked
  1564  0079FA  1749               	andwf	73,f,b	;volatile
  1565  0079FC                     
  1566                           ; BSR set to: 15
  1567  0079FC  0012               	return		;funcret
  1568  0079FE                     __end_of_EPWM1_Initialize:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _ADC_Initialize *****************
  1572 ;; Defined at:
  1573 ;;		line 62 in file "mcc_generated_files/adc.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1587 ;;      Params:         0       0       0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0       0       0
  1590 ;;      Totals:         0       0       0       0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_SYSTEM_Initialize
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text12
  1601  0079AE                     __ptext12:
  1602                           	callstack 0
  1603  0079AE                     _ADC_Initialize:
  1604                           	callstack 29
  1605  0079AE                     
  1606                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  1607  0079AE  0E00               	movlw	0
  1608  0079B0  6EC1               	movwf	193,c	;volatile
  1609                           
  1610                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x04;
  1611  0079B2  0E04               	movlw	4
  1612  0079B4  6EC0               	movwf	192,c	;volatile
  1613                           
  1614                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  1615  0079B6  0E00               	movlw	0
  1616  0079B8  6EC3               	movwf	195,c	;volatile
  1617                           
  1618                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  1619  0079BA  0E00               	movlw	0
  1620  0079BC  6EC4               	movwf	196,c	;volatile
  1621                           
  1622                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x0D;
  1623  0079BE  0E0D               	movlw	13
  1624  0079C0  6EC2               	movwf	194,c	;volatile
  1625  0079C2  0012               	return		;funcret
  1626  0079C4                     __end_of_ADC_Initialize:
  1627                           	callstack 0
  1628                           
  1629 ;; *************** function _MCP23008_Initialise *****************
  1630 ;; Defined at:
  1631 ;;		line 219 in file "main.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1645 ;;      Params:         0       0       0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0
  1648 ;;      Totals:         0       0       0       0       0       0       0
  1649 ;;Total ram usage:        0 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    2
  1652 ;; This function calls:
  1653 ;;		_I2C_send_data
  1654 ;;		_IdleI2C
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text13
  1661  007C32                     __ptext13:
  1662                           	callstack 0
  1663  007C32                     _MCP23008_Initialise:
  1664                           	callstack 28
  1665  007C32                     
  1666                           ;main.c: 221:     I2C_send_data(0x40, 0x00, 0x00);
  1667  007C32  0E00               	movlw	0
  1668  007C34  6E18               	movwf	I2C_send_data@register_address^0,c
  1669  007C36  0E00               	movlw	0
  1670  007C38  6E19               	movwf	I2C_send_data@register_data^0,c
  1671  007C3A  0E40               	movlw	64
  1672  007C3C  EC32  F03D         	call	_I2C_send_data
  1673                           
  1674                           ;main.c: 222:     IdleI2C();
  1675  007C40  EC1F  F03D         	call	_IdleI2C	;wreg free
  1676                           
  1677                           ;main.c: 223:     I2C_send_data(0x40, 0x01, 0x00);
  1678  007C44  0E01               	movlw	1
  1679  007C46  6E18               	movwf	I2C_send_data@register_address^0,c
  1680  007C48  0E00               	movlw	0
  1681  007C4A  6E19               	movwf	I2C_send_data@register_data^0,c
  1682  007C4C  0E40               	movlw	64
  1683  007C4E  EC32  F03D         	call	_I2C_send_data
  1684                           
  1685                           ;main.c: 224:     IdleI2C();
  1686  007C52  EC1F  F03D         	call	_IdleI2C	;wreg free
  1687                           
  1688                           ;main.c: 225:     I2C_send_data(0x40, 0x02, 0x00);
  1689  007C56  0E02               	movlw	2
  1690  007C58  6E18               	movwf	I2C_send_data@register_address^0,c
  1691  007C5A  0E00               	movlw	0
  1692  007C5C  6E19               	movwf	I2C_send_data@register_data^0,c
  1693  007C5E  0E40               	movlw	64
  1694  007C60  EC32  F03D         	call	_I2C_send_data
  1695                           
  1696                           ;main.c: 226:     IdleI2C();
  1697  007C64  EC1F  F03D         	call	_IdleI2C	;wreg free
  1698                           
  1699                           ;main.c: 227:     I2C_send_data(0x40, 0x05, 0x3E);
  1700  007C68  0E05               	movlw	5
  1701  007C6A  6E18               	movwf	I2C_send_data@register_address^0,c
  1702  007C6C  0E3E               	movlw	62
  1703  007C6E  6E19               	movwf	I2C_send_data@register_data^0,c
  1704  007C70  0E40               	movlw	64
  1705  007C72  EC32  F03D         	call	_I2C_send_data
  1706                           
  1707                           ;main.c: 228:     IdleI2C();
  1708  007C76  EC1F  F03D         	call	_IdleI2C	;wreg free
  1709                           
  1710                           ;main.c: 229:     I2C_send_data(0x40, 0x06, 0x00);
  1711  007C7A  0E06               	movlw	6
  1712  007C7C  6E18               	movwf	I2C_send_data@register_address^0,c
  1713  007C7E  0E00               	movlw	0
  1714  007C80  6E19               	movwf	I2C_send_data@register_data^0,c
  1715  007C82  0E40               	movlw	64
  1716  007C84  EC32  F03D         	call	_I2C_send_data
  1717  007C88  0012               	return		;funcret
  1718  007C8A                     __end_of_MCP23008_Initialise:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _IsOptoR *****************
  1722 ;; Defined at:
  1723 ;;		line 338 in file "main.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      _Bool 
  1730 ;; Registers used:
  1731 ;;		wreg
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1737 ;;      Params:         0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text14
  1751  00796E                     __ptext14:
  1752                           	callstack 0
  1753  00796E                     _IsOptoR:
  1754                           	callstack 30
  1755  00796E                     
  1756                           ;main.c: 340:     return (PORTBbits.RB1 == 0);
  1757  00796E  A281               	btfss	129,1,c	;volatile
  1758  007970  EFBC  F03C         	goto	u201
  1759  007974  EFBF  F03C         	goto	u200
  1760  007978                     u201:
  1761  007978  0E01               	movlw	1
  1762  00797A  EFC0  F03C         	goto	u210
  1763  00797E                     u200:
  1764  00797E  0E00               	movlw	0
  1765  007980                     u210:
  1766  007980  0012               	return		;funcret
  1767  007982                     __end_of_IsOptoR:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _IsOptoL *****************
  1771 ;; Defined at:
  1772 ;;		line 333 in file "main.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      _Bool 
  1779 ;; Registers used:
  1780 ;;		wreg
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1786 ;;      Params:         0       0       0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text15
  1800  00795A                     __ptext15:
  1801                           	callstack 0
  1802  00795A                     _IsOptoL:
  1803                           	callstack 30
  1804  00795A                     
  1805                           ;main.c: 335:     return (PORTBbits.RB2 == 0);
  1806  00795A  A481               	btfss	129,2,c	;volatile
  1807  00795C  EFB2  F03C         	goto	u221
  1808  007960  EFB5  F03C         	goto	u220
  1809  007964                     u221:
  1810  007964  0E01               	movlw	1
  1811  007966  EFB6  F03C         	goto	u230
  1812  00796A                     u220:
  1813  00796A  0E00               	movlw	0
  1814  00796C                     u230:
  1815  00796C  0012               	return		;funcret
  1816  00796E                     __end_of_IsOptoL:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _IsOptoFarR *****************
  1820 ;; Defined at:
  1821 ;;		line 343 in file "main.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      _Bool 
  1828 ;; Registers used:
  1829 ;;		wreg
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1835 ;;      Params:         0       0       0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0
  1838 ;;      Totals:         0       0       0       0       0       0       0
  1839 ;;Total ram usage:        0 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text16
  1849  007946                     __ptext16:
  1850                           	callstack 0
  1851  007946                     _IsOptoFarR:
  1852                           	callstack 30
  1853  007946                     
  1854                           ;main.c: 345:     return (PORTBbits.RB0 == 0);
  1855  007946  A081               	btfss	129,0,c	;volatile
  1856  007948  EFA8  F03C         	goto	u241
  1857  00794C  EFAB  F03C         	goto	u240
  1858  007950                     u241:
  1859  007950  0E01               	movlw	1
  1860  007952  EFAC  F03C         	goto	u250
  1861  007956                     u240:
  1862  007956  0E00               	movlw	0
  1863  007958                     u250:
  1864  007958  0012               	return		;funcret
  1865  00795A                     __end_of_IsOptoFarR:
  1866                           	callstack 0
  1867                           
  1868 ;; *************** function _IsBumperR *****************
  1869 ;; Defined at:
  1870 ;;		line 328 in file "main.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      _Bool 
  1877 ;; Registers used:
  1878 ;;		wreg
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1884 ;;      Params:         0       0       0       0       0       0       0
  1885 ;;      Locals:         0       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0
  1887 ;;      Totals:         0       0       0       0       0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text17
  1898  007932                     __ptext17:
  1899                           	callstack 0
  1900  007932                     _IsBumperR:
  1901                           	callstack 30
  1902  007932                     
  1903                           ;main.c: 330:     return (PORTBbits.RB5 == 0);
  1904  007932  AA81               	btfss	129,5,c	;volatile
  1905  007934  EF9E  F03C         	goto	u151
  1906  007938  EFA1  F03C         	goto	u150
  1907  00793C                     u151:
  1908  00793C  0E01               	movlw	1
  1909  00793E  EFA2  F03C         	goto	u160
  1910  007942                     u150:
  1911  007942  0E00               	movlw	0
  1912  007944                     u160:
  1913  007944  0012               	return		;funcret
  1914  007946                     __end_of_IsBumperR:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _IsBumperL *****************
  1918 ;; Defined at:
  1919 ;;		line 323 in file "main.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;		None
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      _Bool 
  1926 ;; Registers used:
  1927 ;;		wreg
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1933 ;;      Params:         0       0       0       0       0       0       0
  1934 ;;      Locals:         0       0       0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0
  1936 ;;      Totals:         0       0       0       0       0       0       0
  1937 ;;Total ram usage:        0 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_main
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text18
  1947  00791E                     __ptext18:
  1948                           	callstack 0
  1949  00791E                     _IsBumperL:
  1950                           	callstack 30
  1951  00791E                     
  1952                           ;main.c: 325:     return (PORTBbits.RB4 == 0);
  1953  00791E  A881               	btfss	129,4,c	;volatile
  1954  007920  EF94  F03C         	goto	u181
  1955  007924  EF97  F03C         	goto	u180
  1956  007928                     u181:
  1957  007928  0E01               	movlw	1
  1958  00792A  EF98  F03C         	goto	u190
  1959  00792E                     u180:
  1960  00792E  0E00               	movlw	0
  1961  007930                     u190:
  1962  007930  0012               	return		;funcret
  1963  007932                     __end_of_IsBumperL:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _I2C_test *****************
  1967 ;; Defined at:
  1968 ;;		line 269 in file "main.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  i               2    6[COMRAM] int 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1982 ;;      Params:         0       0       0       0       0       0       0
  1983 ;;      Locals:         2       0       0       0       0       0       0
  1984 ;;      Temps:          2       0       0       0       0       0       0
  1985 ;;      Totals:         4       0       0       0       0       0       0
  1986 ;;Total ram usage:        4 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    2
  1989 ;; This function calls:
  1990 ;;		_I2C_send_data
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text19
  1997  007BE2                     __ptext19:
  1998                           	callstack 0
  1999  007BE2                     _I2C_test:
  2000                           	callstack 28
  2001  007BE2                     
  2002                           ;main.c: 271:     int i;;main.c: 272:     for (i = 0; i < sizeof (i) - 1; i++)
  2003  007BE2  0E00               	movlw	0
  2004  007BE4  6E1E               	movwf	(I2C_test@i+1)^0,c
  2005  007BE6  0E00               	movlw	0
  2006  007BE8  6E1D               	movwf	I2C_test@i^0,c
  2007  007BEA                     l1351:
  2008                           
  2009                           ;main.c: 273:     {;main.c: 274:         I2C_send_data(0x40, 0x09, digits[i]);
  2010  007BEA  0E09               	movlw	9
  2011  007BEC  6E18               	movwf	I2C_send_data@register_address^0,c
  2012  007BEE  0E01               	movlw	low _digits
  2013  007BF0  241D               	addwf	I2C_test@i^0,w,c
  2014  007BF2  6ED9               	movwf	fsr2l,c
  2015  007BF4  0E00               	movlw	high _digits
  2016  007BF6  201E               	addwfc	(I2C_test@i+1)^0,w,c
  2017  007BF8  6EDA               	movwf	fsr2h,c
  2018  007BFA  50DF               	movf	indf2,w,c
  2019  007BFC  6E19               	movwf	I2C_send_data@register_data^0,c
  2020  007BFE  0E40               	movlw	64
  2021  007C00  EC32  F03D         	call	_I2C_send_data
  2022  007C04                     
  2023                           ;main.c: 275:         _delay((unsigned long)((500)*(4000000/4000.0)));
  2024  007C04  0E03               	movlw	3
  2025  007C06  6E1C               	movwf	(??_I2C_test+1)^0,c
  2026  007C08  0E8A               	movlw	138
  2027  007C0A  6E1B               	movwf	??_I2C_test^0,c
  2028  007C0C  0E56               	movlw	86
  2029  007C0E                     u727:
  2030  007C0E  2EE8               	decfsz	wreg,f,c
  2031  007C10  D7FE               	bra	u727
  2032  007C12  2E1B               	decfsz	??_I2C_test^0,f,c
  2033  007C14  D7FC               	bra	u727
  2034  007C16  2E1C               	decfsz	(??_I2C_test+1)^0,f,c
  2035  007C18  D7FA               	bra	u727
  2036  007C1A                     
  2037                           ;main.c: 277:     }
  2038  007C1A  4A1D               	infsnz	I2C_test@i^0,f,c
  2039  007C1C  2A1E               	incf	(I2C_test@i+1)^0,f,c
  2040  007C1E  501D               	movf	I2C_test@i^0,w,c
  2041  007C20  101E               	iorwf	(I2C_test@i+1)^0,w,c
  2042  007C22  B4D8               	btfsc	status,2,c
  2043  007C24  EF16  F03E         	goto	u451
  2044  007C28  EF18  F03E         	goto	u450
  2045  007C2C                     u451:
  2046  007C2C  EFF5  F03D         	goto	l1351
  2047  007C30                     u450:
  2048  007C30  0012               	return		;funcret
  2049  007C32                     __end_of_I2C_test:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _I2C_send_data *****************
  2053 ;; Defined at:
  2054 ;;		line 232 in file "main.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  device_addre    1    wreg     unsigned char 
  2057 ;;  register_add    1    1[COMRAM] unsigned char 
  2058 ;;  register_dat    1    2[COMRAM] unsigned char 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  device_addre    1    3[COMRAM] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2070 ;;      Params:         2       0       0       0       0       0       0
  2071 ;;      Locals:         1       0       0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0
  2073 ;;      Totals:         3       0       0       0       0       0       0
  2074 ;;Total ram usage:        3 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    1
  2077 ;; This function calls:
  2078 ;;		_IdleI2C
  2079 ;;		_StartI2C
  2080 ;;		_StopI2C
  2081 ;;		_WriteI2C
  2082 ;; This function is called by:
  2083 ;;		_MCP23008_Initialise
  2084 ;;		_I2C_test
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text20
  2089  007A64                     __ptext20:
  2090                           	callstack 0
  2091  007A64                     _I2C_send_data:
  2092                           	callstack 28
  2093                           
  2094                           ;incstack = 0
  2095                           ;I2C_send_data@device_address stored from wreg
  2096  007A64  6E1A               	movwf	I2C_send_data@device_address^0,c
  2097  007A66                     
  2098                           ;main.c: 232: void I2C_send_data(unsigned char device_address, unsigned char register_ad
      +                          dress, unsigned char register_data);main.c: 233: {;main.c: 234:     StartI2C();
  2099  007A66  EC47  F03D         	call	_StartI2C	;wreg free
  2100  007A6A                     
  2101                           ;main.c: 235:     WriteI2C(device_address);
  2102  007A6A  501A               	movf	I2C_send_data@device_address^0,w,c
  2103  007A6C  ECCC  F03C         	call	_WriteI2C
  2104  007A70                     
  2105                           ;main.c: 236:     IdleI2C();
  2106  007A70  EC1F  F03D         	call	_IdleI2C	;wreg free
  2107                           
  2108                           ;main.c: 237:     WriteI2C(register_address);
  2109  007A74  5018               	movf	I2C_send_data@register_address^0,w,c
  2110  007A76  ECCC  F03C         	call	_WriteI2C
  2111  007A7A                     
  2112                           ;main.c: 238:     IdleI2C();
  2113  007A7A  EC1F  F03D         	call	_IdleI2C	;wreg free
  2114  007A7E                     
  2115                           ;main.c: 239:     WriteI2C(register_data);
  2116  007A7E  5019               	movf	I2C_send_data@register_data^0,w,c
  2117  007A80  ECCC  F03C         	call	_WriteI2C
  2118                           
  2119                           ;main.c: 240:     IdleI2C();
  2120  007A84  EC1F  F03D         	call	_IdleI2C	;wreg free
  2121  007A88                     
  2122                           ;main.c: 241:     StopI2C();
  2123  007A88  EC79  F03C         	call	_StopI2C	;wreg free
  2124  007A8C  0012               	return		;funcret
  2125  007A8E                     __end_of_I2C_send_data:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _WriteI2C *****************
  2129 ;; Defined at:
  2130 ;;		line 258 in file "main.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  data            1    wreg     unsigned char 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  data            1    0[COMRAM] unsigned char 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2144 ;;      Params:         0       0       0       0       0       0       0
  2145 ;;      Locals:         1       0       0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0
  2147 ;;      Totals:         1       0       0       0       0       0       0
  2148 ;;Total ram usage:        1 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_I2C_send_data
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text21
  2158  007998                     __ptext21:
  2159                           	callstack 0
  2160  007998                     _WriteI2C:
  2161                           	callstack 28
  2162                           
  2163                           ;incstack = 0
  2164                           ;WriteI2C@data stored from wreg
  2165  007998  6E17               	movwf	WriteI2C@data^0,c
  2166  00799A                     
  2167                           ;main.c: 258: void WriteI2C(unsigned char data);main.c: 259: {;main.c: 260:     SSP1BUF 
      +                          = data;
  2168  00799A  C017  FFC9         	movff	WriteI2C@data,4041	;volatile
  2169  00799E                     l225:
  2170  00799E  B0C7               	btfsc	199,0,c	;volatile
  2171  0079A0  EFD4  F03C         	goto	u51
  2172  0079A4  EFD6  F03C         	goto	u50
  2173  0079A8                     u51:
  2174  0079A8  EFCF  F03C         	goto	l225
  2175  0079AC                     u50:
  2176  0079AC  0012               	return		;funcret
  2177  0079AE                     __end_of_WriteI2C:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _StopI2C *****************
  2181 ;; Defined at:
  2182 ;;		line 264 in file "main.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		None
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2196 ;;      Params:         0       0       0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0
  2199 ;;      Totals:         0       0       0       0       0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_I2C_send_data
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text22
  2210  0078F2                     __ptext22:
  2211                           	callstack 0
  2212  0078F2                     _StopI2C:
  2213                           	callstack 28
  2214  0078F2                     
  2215                           ;main.c: 266:     SSP1CON2bits.PEN = 1;
  2216  0078F2  84C5               	bsf	197,2,c	;volatile
  2217  0078F4  0012               	return		;funcret
  2218  0078F6                     __end_of_StopI2C:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function _StartI2C *****************
  2222 ;; Defined at:
  2223 ;;		line 249 in file "main.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;		None
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;		None
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      void 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2237 ;;      Params:         0       0       0       0       0       0       0
  2238 ;;      Locals:         0       0       0       0       0       0       0
  2239 ;;      Temps:          1       0       0       0       0       0       0
  2240 ;;      Totals:         1       0       0       0       0       0       0
  2241 ;;Total ram usage:        1 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_I2C_send_data
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text23
  2251  007A8E                     __ptext23:
  2252                           	callstack 0
  2253  007A8E                     _StartI2C:
  2254                           	callstack 28
  2255  007A8E                     
  2256                           ;main.c: 251:     PIR1bits.SSPIF = 0;
  2257  007A8E  969E               	bcf	158,3,c	;volatile
  2258                           
  2259                           ;main.c: 252:     SSP1CON2bits.SEN = 1;
  2260  007A90  80C5               	bsf	197,0,c	;volatile
  2261  007A92                     l219:
  2262  007A92  B4C7               	btfsc	199,2,c	;volatile
  2263  007A94  EF4E  F03D         	goto	u31
  2264  007A98  EF50  F03D         	goto	u30
  2265  007A9C                     u31:
  2266  007A9C  EF49  F03D         	goto	l219
  2267  007AA0                     u30:
  2268  007AA0  CFC5 F017          	movff	4037,??_StartI2C	;volatile
  2269  007AA4  0E1F               	movlw	31
  2270  007AA6  1617               	andwf	??_StartI2C^0,f,c
  2271  007AA8  A4D8               	btfss	status,2,c
  2272  007AAA  EF59  F03D         	goto	u41
  2273  007AAE  EF5B  F03D         	goto	u40
  2274  007AB2                     u41:
  2275  007AB2  EF49  F03D         	goto	l219
  2276  007AB6                     u40:
  2277  007AB6                     
  2278                           ;main.c: 255:     PIR1bits.SSPIF = 0;
  2279  007AB6  969E               	bcf	158,3,c	;volatile
  2280  007AB8  0012               	return		;funcret
  2281  007ABA                     __end_of_StartI2C:
  2282                           	callstack 0
  2283                           
  2284 ;; *************** function _IdleI2C *****************
  2285 ;; Defined at:
  2286 ;;		line 244 in file "main.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;		None
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;		None
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2300 ;;      Params:         0       0       0       0       0       0       0
  2301 ;;      Locals:         0       0       0       0       0       0       0
  2302 ;;      Temps:          1       0       0       0       0       0       0
  2303 ;;      Totals:         1       0       0       0       0       0       0
  2304 ;;Total ram usage:        1 bytes
  2305 ;; Hardware stack levels used:    1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_MCP23008_Initialise
  2310 ;;		_I2C_send_data
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text24
  2315  007A3E                     __ptext24:
  2316                           	callstack 0
  2317  007A3E                     _IdleI2C:
  2318                           	callstack 29
  2319  007A3E                     l1057:
  2320  007A3E  CFC5 F017          	movff	4037,??_IdleI2C	;volatile
  2321  007A42  0E1F               	movlw	31
  2322  007A44  1617               	andwf	??_IdleI2C^0,f,c
  2323  007A46  A4D8               	btfss	status,2,c
  2324  007A48  EF28  F03D         	goto	u11
  2325  007A4C  EF2A  F03D         	goto	u10
  2326  007A50                     u11:
  2327  007A50  EF1F  F03D         	goto	l1057
  2328  007A54                     u10:
  2329  007A54  B2C7               	btfsc	199,1,c	;volatile
  2330  007A56  EF2F  F03D         	goto	u21
  2331  007A5A  EF31  F03D         	goto	u20
  2332  007A5E                     u21:
  2333  007A5E  EF1F  F03D         	goto	l1057
  2334  007A62                     u20:
  2335  007A62  0012               	return		;funcret
  2336  007A64                     __end_of_IdleI2C:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _I2C_Initialise *****************
  2340 ;; Defined at:
  2341 ;;		line 210 in file "main.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2355 ;;      Params:         0       0       0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_main
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text25
  2369  007982                     __ptext25:
  2370                           	callstack 0
  2371  007982                     _I2C_Initialise:
  2372                           	callstack 30
  2373  007982                     
  2374                           ;main.c: 212:     SSP1STAT = 0x00;
  2375  007982  0E00               	movlw	0
  2376  007984  6EC7               	movwf	199,c	;volatile
  2377                           
  2378                           ;main.c: 213:     SSP1CON1 = 0x28;
  2379  007986  0E28               	movlw	40
  2380  007988  6EC6               	movwf	198,c	;volatile
  2381                           
  2382                           ;main.c: 214:     SSP1CON2 = 0x00;
  2383  00798A  0E00               	movlw	0
  2384  00798C  6EC5               	movwf	197,c	;volatile
  2385                           
  2386                           ;main.c: 215:     SSP1CON3 = 0x08;
  2387  00798E  0E08               	movlw	8
  2388  007990  6ECB               	movwf	203,c	;volatile
  2389                           
  2390                           ;main.c: 216:     SSP1ADD = 0x09;
  2391  007992  0E09               	movlw	9
  2392  007994  6EC8               	movwf	200,c	;volatile
  2393  007996  0012               	return		;funcret
  2394  007998                     __end_of_I2C_Initialise:
  2395                           	callstack 0
  2396  0000                     
  2397                           	psect	rparam
  2398  0000                     
  2399                           	psect	idloc
  2400                           
  2401                           ;Config register IDLOC0 @ 0x200000
  2402                           ;	unspecified, using default values
  2403  200000                     	org	2097152
  2404  200000  FF                 	db	255
  2405                           
  2406                           ;Config register IDLOC1 @ 0x200001
  2407                           ;	unspecified, using default values
  2408  200001                     	org	2097153
  2409  200001  FF                 	db	255
  2410                           
  2411                           ;Config register IDLOC2 @ 0x200002
  2412                           ;	unspecified, using default values
  2413  200002                     	org	2097154
  2414  200002  FF                 	db	255
  2415                           
  2416                           ;Config register IDLOC3 @ 0x200003
  2417                           ;	unspecified, using default values
  2418  200003                     	org	2097155
  2419  200003  FF                 	db	255
  2420                           
  2421                           ;Config register IDLOC4 @ 0x200004
  2422                           ;	unspecified, using default values
  2423  200004                     	org	2097156
  2424  200004  FF                 	db	255
  2425                           
  2426                           ;Config register IDLOC5 @ 0x200005
  2427                           ;	unspecified, using default values
  2428  200005                     	org	2097157
  2429  200005  FF                 	db	255
  2430                           
  2431                           ;Config register IDLOC6 @ 0x200006
  2432                           ;	unspecified, using default values
  2433  200006                     	org	2097158
  2434  200006  FF                 	db	255
  2435                           
  2436                           ;Config register IDLOC7 @ 0x200007
  2437                           ;	unspecified, using default values
  2438  200007                     	org	2097159
  2439  200007  FF                 	db	255
  2440                           
  2441                           	psect	config
  2442                           
  2443                           ; Padding undefined space
  2444  300000                     	org	3145728
  2445  300000  FF                 	db	255
  2446                           
  2447                           ;Config register CONFIG1H @ 0x300001
  2448                           ;	Oscillator Selection bits
  2449                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
  2450                           ;	4X PLL Enable
  2451                           ;	PLLCFG = OFF, Oscillator used directly
  2452                           ;	Primary clock enable bit
  2453                           ;	PRICLKEN = ON, Primary clock enabled
  2454                           ;	Fail-Safe Clock Monitor Enable bit
  2455                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2456                           ;	Internal/External Oscillator Switchover bit
  2457                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2458  300001                     	org	3145729
  2459  300001  23                 	db	35
  2460                           
  2461                           ;Config register CONFIG2L @ 0x300002
  2462                           ;	Power-up Timer Enable bit
  2463                           ;	PWRTEN = OFF, Power up timer disabled
  2464                           ;	Brown-out Reset Enable bits
  2465                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2466                           ;	Brown Out Reset Voltage bits
  2467                           ;	BORV = 190, VBOR set to 1.90 V nominal
  2468  300002                     	org	3145730
  2469  300002  1F                 	db	31
  2470                           
  2471                           ;Config register CONFIG2H @ 0x300003
  2472                           ;	Watchdog Timer Enable bits
  2473                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2474                           ;	Watchdog Timer Postscale Select bits
  2475                           ;	WDTPS = 32768, 1:32768
  2476  300003                     	org	3145731
  2477  300003  3C                 	db	60
  2478                           
  2479                           ; Padding undefined space
  2480  300004                     	org	3145732
  2481  300004  FF                 	db	255
  2482                           
  2483                           ;Config register CONFIG3H @ 0x300005
  2484                           ;	CCP2 MUX bit
  2485                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2486                           ;	PORTB A/D Enable bit
  2487                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2488                           ;	P3A/CCP3 Mux bit
  2489                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  2490                           ;	HFINTOSC Fast Start-up
  2491                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  2492                           ;	Timer3 Clock input mux bit
  2493                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2494                           ;	ECCP2 B output mux bit
  2495                           ;	P2BMX = PORTB5, P2B is on RB5
  2496                           ;	MCLR Pin Enable bit
  2497                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2498  300005                     	org	3145733
  2499  300005  BF                 	db	191
  2500                           
  2501                           ;Config register CONFIG4L @ 0x300006
  2502                           ;	Stack Full/Underflow Reset Enable bit
  2503                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2504                           ;	Single-Supply ICSP Enable bit
  2505                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2506                           ;	Extended Instruction Set Enable bit
  2507                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2508                           ;	Background Debug
  2509                           ;	DEBUG = OFF, Disabled
  2510  300006                     	org	3145734
  2511  300006  85                 	db	133
  2512                           
  2513                           ; Padding undefined space
  2514  300007                     	org	3145735
  2515  300007  FF                 	db	255
  2516                           
  2517                           ;Config register CONFIG5L @ 0x300008
  2518                           ;	Code Protection Block 0
  2519                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2520                           ;	Code Protection Block 1
  2521                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2522                           ;	Code Protection Block 2
  2523                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2524                           ;	Code Protection Block 3
  2525                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2526  300008                     	org	3145736
  2527  300008  0F                 	db	15
  2528                           
  2529                           ;Config register CONFIG5H @ 0x300009
  2530                           ;	Boot Block Code Protection bit
  2531                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2532                           ;	Data EEPROM Code Protection bit
  2533                           ;	CPD = OFF, Data EEPROM not code-protected
  2534  300009                     	org	3145737
  2535  300009  C0                 	db	192
  2536                           
  2537                           ;Config register CONFIG6L @ 0x30000A
  2538                           ;	Write Protection Block 0
  2539                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2540                           ;	Write Protection Block 1
  2541                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2542                           ;	Write Protection Block 2
  2543                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2544                           ;	Write Protection Block 3
  2545                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2546  30000A                     	org	3145738
  2547  30000A  0F                 	db	15
  2548                           
  2549                           ;Config register CONFIG6H @ 0x30000B
  2550                           ;	Configuration Register Write Protection bit
  2551                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2552                           ;	Boot Block Write Protection bit
  2553                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2554                           ;	Data EEPROM Write Protection bit
  2555                           ;	WRTD = OFF, Data EEPROM not write-protected
  2556  30000B                     	org	3145739
  2557  30000B  E0                 	db	224
  2558                           
  2559                           ;Config register CONFIG7L @ 0x30000C
  2560                           ;	Table Read Protection Block 0
  2561                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2562                           ;	Table Read Protection Block 1
  2563                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2564                           ;	Table Read Protection Block 2
  2565                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2566                           ;	Table Read Protection Block 3
  2567                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2568  30000C                     	org	3145740
  2569  30000C  0F                 	db	15
  2570                           
  2571                           ;Config register CONFIG7H @ 0x30000D
  2572                           ;	Boot Block Table Read Protection bit
  2573                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2574  30000D                     	org	3145741
  2575  30000D  40                 	db	64
  2576                           tosu	equ	0xFFF
  2577                           tosh	equ	0xFFE
  2578                           tosl	equ	0xFFD
  2579                           stkptr	equ	0xFFC
  2580                           pclatu	equ	0xFFB
  2581                           pclath	equ	0xFFA
  2582                           pcl	equ	0xFF9
  2583                           tblptru	equ	0xFF8
  2584                           tblptrh	equ	0xFF7
  2585                           tblptrl	equ	0xFF6
  2586                           tablat	equ	0xFF5
  2587                           prodh	equ	0xFF4
  2588                           prodl	equ	0xFF3
  2589                           indf0	equ	0xFEF
  2590                           postinc0	equ	0xFEE
  2591                           postdec0	equ	0xFED
  2592                           preinc0	equ	0xFEC
  2593                           plusw0	equ	0xFEB
  2594                           fsr0h	equ	0xFEA
  2595                           fsr0l	equ	0xFE9
  2596                           wreg	equ	0xFE8
  2597                           indf1	equ	0xFE7
  2598                           postinc1	equ	0xFE6
  2599                           postdec1	equ	0xFE5
  2600                           preinc1	equ	0xFE4
  2601                           plusw1	equ	0xFE3
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           bsr	equ	0xFE0
  2605                           indf2	equ	0xFDF
  2606                           postinc2	equ	0xFDE
  2607                           postdec2	equ	0xFDD
  2608                           preinc2	equ	0xFDC
  2609                           plusw2	equ	0xFDB
  2610                           fsr2h	equ	0xFDA
  2611                           fsr2l	equ	0xFD9
  2612                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_I2C_test
    _MCP23008_Initialise->_I2C_send_data
    _I2C_test->_I2C_send_data
    _I2C_send_data->_IdleI2C
    _I2C_send_data->_StartI2C
    _I2C_send_data->_WriteI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3440
                                              8 COMRAM     2     2      0
                     _I2C_Initialise
                           _I2C_test
                          _IsBumperL
                          _IsBumperR
                         _IsOptoFarR
                            _IsOptoL
                            _IsOptoR
                _MCP23008_Initialise
                  _SYSTEM_Initialize
                        _adcFunction
                         _diagnostic
                       _leftPosition
                          _motor_fwd
                      _rightPosition
 ---------------------------------------------------------------------------------
 (1) _rightPosition                                        3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _motor_fwd                                            3     1      2    1326
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _leftPosition                                         3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _diagnostic                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adcFunction                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCP23008_Initialise                                  0     0      0     993
                      _I2C_send_data
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (1) _IsOptoR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoL                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsOptoFarR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IsBumperL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_test                                             4     4      0    1061
                                              4 COMRAM     4     4      0
                      _I2C_send_data
 ---------------------------------------------------------------------------------
 (2) _I2C_send_data                                        3     1      2     993
                                              1 COMRAM     3     1      2
                            _IdleI2C
                           _StartI2C
                            _StopI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Initialise
   _I2C_test
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
   _IsBumperL
   _IsBumperR
   _IsOptoFarR
   _IsOptoL
   _IsOptoR
   _MCP23008_Initialise
     _I2C_send_data
       _IdleI2C
       _StartI2C
       _StopI2C
       _WriteI2C
     _IdleI2C
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
   _adcFunction
   _diagnostic
   _leftPosition
   _motor_fwd
   _rightPosition

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      20       1       33.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20       9        0.0%
DATA                 0      0      20      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Nov 24 19:11:17 2020

                             l21 79DC                               l24 790E  
                             l51 7AE6                               u10 7A54  
                             u11 7A50                               u20 7A62  
                             u21 7A5E                               u30 7AA0  
                             u31 7A9C                               u40 7AB6  
                             u41 7AB2                               u50 79AC  
                             u51 79A8                               u60 7C9A  
                             u61 7C94                               u70 7CBE  
                             u71 7CB8                               u80 7CFC  
                             u81 7CF6                               u90 7D20  
                             u66 7C9C                               u91 7D1A  
                             u76 7CC0                               u86 7CFE  
                             u96 7D22                              l201 7B1C  
                            l210 7A8C                              l204 7996  
                            l221 7AB6                              l222 7AB8  
                            l150 7DD8                              l231 78F4  
                            l207 7C88                              l216 7A62  
                            l144 7D9C                              l225 799E  
                            l241 7BE0                              l219 7A92  
                            l251 7A36                              l163 7EB2  
                            l228 79AC                              l236 7C30  
                            l316 79FC                              l252 7A3C  
                            l244 7B5C                              l261 796C  
                            l173 7F44                              l190 7CAE  
                            l246 7B98                              l158 7E80  
                            l255 7930                              l239 7BA2  
                            l264 7980                              l336 7A1C  
                            l280 791C                              l249 7A28  
                            l185 7FFC                              l258 7944  
                            l178 7F76                              l267 7958  
                            l196 7D36                              l188 7C8A  
                            l358 79C2                              l199 7B0E  
                            u200 797E                              u201 7978  
                            u210 7980                              u130 7A36  
                            u131 7A32                              u220 796A  
                            u140 7B98                              u221 7964  
                            u141 7B94                              u150 7942  
                            u230 796C                              u151 793C  
                            u160 7944                              u240 7956  
                            u241 7950                              u250 7958  
                            u170 7BE0                              u171 7BDC  
                            u180 792E                              u420 7AFC  
                            u500 7E60                              u181 7928  
                            u421 7AF8                              u501 7E5C  
                            u190 7930                              u510 7E80  
                            _PR2 000FBB                              u511 7E7C  
                            u520 7EB2                              u521 7EAE  
                            u450 7C30                              u530 7EE8  
                            u451 7C2C                              u435 7B08  
                            u531 7EE4                              u436 7B0A  
                            u540 7F24                              u460 7D84  
                            u445 7B1A                              u541 7F20  
                            u461 7D80                              u446 7B1C  
                            u550 7F44                              u470 7D9C  
                            u551 7F40                              u607 7E02  
                            u471 7D98                              u560 7F76  
                            u480 7DD8                              u561 7F72  
                            u617 7E90                              u481 7DD4  
                            u570 7FAC                              u490 7E24  
                            u707 7B74                              u571 7FA8  
                            u627 7EC2                              u491 7E20  
                            u717 7CDE                              u637 7F54  
                            u727 7C0E                              u647 7F86  
                            u657 7FB6                              u667 7FEE  
                            u587 7DAC                              u677 7BAA  
                            u597 7DE8                              u687 7BBC  
                            u697 7B64                              _Lit 000F  
                _TMR2_Initialize 7910                              wreg 000FE8  
       __end_of_EPWM2_Initialize 7A1E                             l1101 7982  
                           l1111 7D10                             l1105 7C8A  
                           l1131 7932                             l1107 7CD4  
                           l1061 7A8E                             l1117 7A1E  
                           l1109 7CEC                             l1125 7B5E  
                           l1141 7BA4                             l1055 7A3E  
                           l1063 7AA0                             l1151 796E  
                           l1071 7AE4                             l1127 7B6C  
                           l1119 7B54                             l1143 7BB4  
                           l1135 7B9A                             l1057 7A3E  
                           l1065 799A                             l1073 7902  
                           l1081 7916                             l1129 7B7E  
                           l1145 7BC6                             l1401 7E60  
                           l1059 7A54                             l1067 78F2  
                           l1331 7A70                             l1147 791E  
                           l1155 795A                             l1075 79DE  
                           l1083 79FE                             l1411 7E9C  
                           l1403 7E68                             l1333 7A7A  
                           l1085 79AE                             l1069 7ABA  
                           l1077 7910                             l1341 7AEA  
                           l1413 7E9E                             l1405 7E6C  
                           l1335 7A7E                             l1327 7A66  
                           l1351 7BEA                             l1159 7946  
                           l1079 7912                             l1343 7AFC  
                           l1431 7F2C                             l1415 7EB4  
                           l1407 7E82                             l1423 7ED4  
                           l1337 7A88                             l1329 7A6A  
                           l1353 7C04                             l1345 7BE2  
                           l1441 7F62                             l1433 7F30  
                           l1425 7EE8                             l1417 7EB8  
                           l1409 7E86                             l1361 7D40  
                           l1355 7C1A                             l1339 7C32  
                           l1099 79C4                             l1443 7F78  
                           l1435 7F46                             l1427 7F04  
                           l1451 7F98                             l1419 7ECE  
                           l1371 7D68                             l1363 7D44  
                           l1357 7C1E                             l1461 7FE4  
                           l1453 7FAC                             l1445 7F7C  
                           l1437 7F4A                             l1429 7F24  
                           l1381 7DBA                             l1373 7D84  
                           l1365 7D48                             l1455 7FC4  
                           l1447 7F92                             l1439 7F60  
                           l1391 7DF6                             l1375 7D88  
                           l1383 7DC0                             l1367 7D56  
                           l1359 7D38                             l1457 7FD2  
                           l1393 7DF8                             l1385 7DC4  
                           l1377 7D9E                             l1369 7D64  
                           l1459 7FE0                             l1387 7DDA  
                           l1379 7DA2                             l1395 7E10  
                           l1397 7E24                             l1389 7DDE  
                           l1399 7E40                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _TMR2 000FBC                             _WPUB 000F61  
                           _main 7D38                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           start 0000                 __end_of_I2C_test 7C32  
                __end_of_IdleI2C 7A64                     ___param_bank 000000  
                __end_of_IsOptoL 796E                  __end_of_IsOptoR 7982  
 __size_of_OSCILLATOR_Initialize 000E    __end_of_OSCILLATOR_Initialize 7910  
                __end_of_StopI2C 78F6                            ?_main 0017  
                  ?_leftPosition 0017                            _T2CON 000FBA  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _UnLit 0011  
                     _IsOptoFarR 7946                            tablat 000FF5  
                          status 000FD8                  __initialization 7B1E  
                   __end_of_main 8000          __end_of_TMR2_Initialize 791E  
                 ??_leftPosition 0017                           ??_main 001F  
                  __activetblptr 000002               __size_of_IsBumperL 0014  
             __size_of_IsBumperR 0014                 __end_of_StartI2C 7ABA  
                 rightPosition@i 0018                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _CCPR1H 000FBF                           _CCPR2H 000F68  
                         _CCPR1L 000FBE                           _CCPR2L 000F67  
               __end_of_WriteI2C 79AE                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                      ??_IdleI2C 0017                           _OSCCON 000FD3  
          __end_of_rightPosition 7BE2                        I2C_test@i 001D  
                      ??_IsOptoL 0017                        ??_IsOptoR 0017  
                   _CCPTMRS0bits 000F49                        ??_StopI2C 0017  
                         _digits 0001                           clear_0 7B44  
        __size_of_I2C_Initialise 0016                     WriteI2C@data 0017  
                   __pdataCOMRAM 0001                        ?_I2C_test 0017  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      ?_IsOptoFarR 0017  
              _SYSTEM_Initialize 79C4                       __accesstop 0060  
        __end_of__initialization 7B4A               ?_SYSTEM_Initialize 0017  
                  ___rparam_used 000001           __size_of_I2C_send_data 002A  
              __end_of_IsBumperL 7932                __end_of_IsBumperR 7946  
              ?_EPWM1_Initialize 0017                   __pcstackCOMRAM 0017  
            ??_SYSTEM_Initialize 0017               ??_EPWM1_Initialize 0017  
               ?_TMR2_Initialize 0017                       ??_I2C_test 001B  
              ?_EPWM2_Initialize 0017                    ??_adcFunction 0017  
      __end_of_SYSTEM_Initialize 79DE               ??_EPWM2_Initialize 0017  
           __end_of_leftPosition 7B9A     __size_of_MCP23008_Initialise 0058  
                     _diagnostic 7C8A      I2C_send_data@device_address 001A  
                      ?_StartI2C 0017                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          _ECCP1AS 000FB6  
                        _ECCP2AS 000F64                        ?_WriteI2C 0017  
            __size_of_IsOptoFarR 0014          __size_of_ADC_Initialize 0016  
             __size_of_motor_fwd 0036                    _I2C_send_data 7A64  
                        _OSCCON2 000FD2    I2C_send_data@register_address 0018  
                        _OSCTUNE 000F9B                          _PWM1CON 000FB7  
                        _PWM2CON 000F65                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _IdleI2C 7A3E  
                        _IsOptoL 795A                          _IsOptoR 796E  
            __end_of_adcFunction 7A3E             _ADC_InterruptHandler 000D  
                        __Hparam 0000                          __Lparam 0000  
                        _StopI2C 78F2                       ??_StartI2C 0017  
                        __pcinit 7B1E                       ??_WriteI2C 0017  
                 _I2C_Initialise 7982                          __ramtop 0600  
                        __ptext0 7D38                          __ptext1 7B9A  
                        __ptext2 7AE8                          __ptext3 7B54  
                        __ptext4 7C8A                          __ptext5 7A1E  
                        __ptext6 79C4                          __ptext7 7910  
                        __ptext8 7ABA                          __ptext9 7902  
                 ?_I2C_send_data 0018            _OSCILLATOR_Initialize 7902  
                      _T2CONbits 000FBA         ??_PIN_MANAGER_Initialize 0017  
     __size_of_SYSTEM_Initialize 001A             end_of_initialization 7B4A  
                  __Lmediumconst 0000                __end_of_motor_fwd 7B1E  
                    ?_diagnostic 0017                          postdec1 000FE5  
                        postinc0 000FEE           __end_of_I2C_Initialise 7998  
                      _PORTAbits 000F80                        _PORTBbits 000F81  
                  leftPosition@i 0018            __size_of_leftPosition 0046  
              __size_of_I2C_test 0050                      _adcFunction 7A1E  
                   ??_IsOptoFarR 0017                  ?_I2C_Initialise 0017  
                      _IsBumperL 791E                        _IsBumperR 7932  
                  __pidataCOMRAM 78F6                  ??_I2C_send_data 001A  
                 _ADC_Initialize 79AE               __end_of_IsOptoFarR 795A  
         ?_OSCILLATOR_Initialize 0017                     _leftPosition 7B54  
         __size_of_rightPosition 0048              start_initialization 7B1E  
            _MCP23008_Initialise 7C32        __size_of_EPWM1_Initialize 0020  
__size_of_PIN_MANAGER_Initialize 002E              __size_of_diagnostic 00AE  
           ?_MCP23008_Initialise 0017        __size_of_EPWM2_Initialize 0020  
         __end_of_ADC_Initialize 79C4                       ?_IsBumperL 0017  
                     ?_IsBumperR 0017                __size_of_StartI2C 002C  
              __size_of_WriteI2C 0016                      __pbssCOMRAM 000D  
                      _adcResult 0015         __size_of_TMR2_Initialize 000E  
                       ?_IdleI2C 0017                         ?_IsOptoL 0017  
                       ?_IsOptoR 0017                    _rightPosition 7B9A  
          ??_MCP23008_Initialise 001B           _PIN_MANAGER_Initialize 7ABA  
                       ?_StopI2C 0017                  ?_ADC_Initialize 0017  
                   _intialResult 0013                         _I2C_test 7BE2  
                       _LATCbits 000F8B                   ?_rightPosition 0017  
                   ??_diagnostic 0017                         _PIR1bits 000F9E  
                      _motor_fwd 7AE8                         _SSP1CON1 000FC6  
                       _SSP1CON2 000FC5                         _SSP1CON3 000FCB  
                       _PSTR1CON 000FB9                         _PSTR2CON 000F63  
                       _SSP1STAT 000FC7                      ??_IsBumperL 0017  
                    ??_IsBumperR 0017                       _ADCON0bits 000FC2  
               _EPWM1_Initialize 79DE               __end_of_diagnostic 7D38  
                    _INTCON2bits 000FF1                     ?_adcFunction 0017  
                      copy_data0 7B32                ??_TMR2_Initialize 0017  
               __size_of_IdleI2C 0026                 ??_I2C_Initialise 0017  
               __size_of_IsOptoL 0014                 __size_of_IsOptoR 0014  
                       __Hrparam 0000                 _EPWM2_Initialize 79FE  
                       __Lrparam 0000                       ?_motor_fwd 0017  
                       _StartI2C 7A8E                 __size_of_StopI2C 0004  
        ??_OSCILLATOR_Initialize 0017                         _WriteI2C 7998  
                       __ptext10 79FE                         __ptext11 79DE  
                       __ptext20 7A64                         __ptext12 79AE  
                       __ptext21 7998                         __ptext13 7C32  
                       __ptext22 78F2                         __ptext14 796E  
                       __ptext23 7A8E                         __ptext15 795A  
                       __ptext24 7A3E                         __ptext16 7946  
                       __ptext25 7982                         __ptext17 7932  
                       __ptext18 791E                         __ptext19 7BE2  
                   _SSP1CON2bits 000FC5                  ??_rightPosition 0017  
                  __size_of_main 02C8                     _SSP1STATbits 000FC7  
                  motor_fwd@STAT 0018            __end_of_I2C_send_data 7A8E  
                     _INTCONbits 000FF2          ?_PIN_MANAGER_Initialize 0017  
               ??_ADC_Initialize 0017                      ??_motor_fwd 0019  
                   motor_fwd@dir 0019                     motor_fwd@spd 0017  
     I2C_send_data@register_data 0019      __end_of_MCP23008_Initialise 7C8A  
 __end_of_PIN_MANAGER_Initialize 7AE8             __size_of_adcFunction 0020  
       __end_of_EPWM1_Initialize 79FE  
